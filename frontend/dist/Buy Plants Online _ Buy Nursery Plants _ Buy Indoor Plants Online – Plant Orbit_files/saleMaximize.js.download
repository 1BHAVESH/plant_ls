var smeMainDiv = document.createElement("div");
smeMainDiv.className = "__salemaximize";
smeMainDiv.style = "display: none;";
document.body.prepend(smeMainDiv);

var sme_gm_dataobj = {};
var shipping_variant_id = {};
var gift_variant_id = {};
var APP_PLAN_STATUS = 1;
var smeAppUrl = sme_base_url;

var smecartimage = smeAppUrl + 'assets/img/cart_icons/';
var smecartEmptyimage = smeAppUrl + 'assets/img/cart_empty_img/';

function smeCssLoadFn(url) {
    let smeFileref = document.createElement("link");
    smeFileref.setAttribute("rel", "stylesheet");
    smeFileref.setAttribute("type", "text/css");
    smeFileref.setAttribute("href", url);
    if (typeof smeFileref != "undefined")
        document.getElementsByTagName("head")[0].appendChild(smeFileref);
}

if (smeCartToken == '') {
    fetch('/cart.js')
        .then(response => response.json())
        .then(cartData => {
            smeCartToken = cartData.token;
            smeCartData = cartData;
        });
}

function smePostAjaxApiFn(url, smePostData, externalHeader = '') {
    return new Promise(function (resolve, reject) {
        let smeXhrHttp = new XMLHttpRequest();
        smeXhrHttp.open("POST", url, true);
        let headerObj = (externalHeader['json']) ? { 'Content-type': 'application/json; charset=UTF-8' } : { 'Content-type': 'application/x-www-form-urlencoded' };
        if (externalHeader != '') {
            headerObj = {
                ...headerObj,
                ...externalHeader
            };
        }
        delete headerObj['json'];
        for (let key in headerObj) {
            smeXhrHttp.setRequestHeader(key, headerObj[key])
        }
        smeXhrHttp.onload = function () {

            if (this.status >= 200 && this.status < 300) {
                // Successful response
                resolve(JSON.parse(this.responseText));
            } else if (this.status === 422) {
                // Handle 422 status separately
                resolve({
                    status: this.status,
                    response: JSON.parse(this.responseText)
                });
            } else {
                // Handle other errors
                reject({
                    status: this.status,
                    message: this.responseText
                });
            }
        };
        smeXhrHttp.onerror = function () {
            reject({
                status: this.status,
                message: this.statusText
            });
        };
        smeXhrHttp.send(smePostData);
    });
}

function smeGetAjaxApiFn(url, dataType = null) {
    return new Promise(function (resolve, reject) {
        let smeXhrHttp = new XMLHttpRequest();
        smeXhrHttp.open("GET", url);
        smeXhrHttp.onload = function () {
            if (this.status >= 200 && this.status < 300) {
                if (dataType == 'string') {
                    resolve(smeXhrHttp.responseText);
                } else {
                    if (smeXhrHttp.responseText.indexOf("<!doctype html>") != -1) {
                        resolve({});
                    } else {
                        resolve(JSON.parse(smeXhrHttp.responseText));
                    }
                }
            } else if (this.status === 422) {
                resolve({
                    status: this.status,
                    response: (smeXhrHttp.response) ? JSON.parse(smeXhrHttp.response) : ''
                });
            } else {
                reject({
                    status: this.status,
                    statusText: smeXhrHttp.statusText,
                    response: (smeXhrHttp.response) ? JSON.parse(smeXhrHttp.response) : ''
                });
            }
        };
        smeXhrHttp.onerror = function () {
            reject({
                status: this.status,
                statusText: smeXhrHttp.statusText
            });
        };
        smeXhrHttp.send(dataType);
    });
}


function getdata(smeShop) {
    return new Promise(function (resolve, reject) {

        const payload = {
            method_name: "front_view_html",
            shop: Shopify.shop
        };
        fetch(smeAppUrl + "get_data_api.php", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify(payload),
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(response => {
                if (response.result == 'sucess') {

                    var gminfoTechmodal = document.querySelector('.__salemaximize');
                    if (!gminfoTechmodal) {
                        var smeMainDiv = document.createElement("div");
                        smeMainDiv.className = "__salemaximize";
                        document.body.prepend(smeMainDiv);
                    }
                    resolve(response);

                    sme_gm_dataobj = response;

                } else {
                    reject();
                }
            })

            .catch(error => {
                console.error('Error fetching data:', error);
            });

    });
}

var isswatchproductcall = false;
var cartdrawercall = true;
var horizontaldrawercall = true;
var verticaldrawercall = true;
var checkoutdrawercall = true;
var timerbarcall = true;
var amecheckouadinalpaymentbutton = true;
var amecheckouadinalpaymentbuttononoff = true;
var check_devlopment_plan = ['affiliate', 'partner_test', 'plus_partner_sandbox', 'staff', 'trial'];
var check_user_shop_plan = ['basic', 'professional', 'dormant', 'shopify_plus','unlimited'];
var smetemplates = 1;
cartdata();
async function cartdata() {
    var gminfoTechmodal = document.querySelector('.__salemaximize');
    if (gminfoTechmodal) {

        var sme_gm_get_data = await getdata(smeShop);
        var sme_gm_general_setting = JSON.parse(sme_gm_get_data.general_setting);
        var sme_gm_cart_icon_data = JSON.parse(sme_gm_general_setting.cart_icon);
        var sme_gm_cart_svg = sme_gm_cart_icon_data.default;
        var sme_gm_cart_svg_show = icon_svg(sme_gm_cart_svg);

        var position_class_arr = {
            '0': 'sme__top_left',
            '1': 'sme__top_center',
            '2': 'sme__top_right',
            '3': 'sme__middle_left',
            '4': 'sme__middle_right',
            '5': 'sme__bottom_left',
            '6': 'sme__bottom_center',
            '7': 'sme__bottom_right'
        };

        var sme_gm_html = `<div class="salemaximize__cart-preview">               
        <div class="__salemaximize d-flex justify-content-end">                 
            <div class="salemaximize__cart-logo-container cart_isShowCartIcon_show_hide GScartcartIconBgColor sme__cart_icon_container smeCartIconContainer `+ position_class_arr[sme_gm_general_setting.cart_icon_position] + `" onclick="openSmeCart(this)" style="background-color: ` + sme_gm_general_setting.cart_icon_bg_color + `; ` + (sme_gm_general_setting.is_show_cart_icon == 0 ? 'display:flex' : 'display:none') + `;">
            `+ (sme_gm_general_setting.cart_icon_type == 1 ?
                '<img class="sme__result_cart_icon_image smeCartIconImg" src="' + smecartimage + sme_gm_cart_icon_data.user_upload + '" alt="' + sme_gm_cart_icon_data.user_upload + '">' :
                sme_gm_cart_svg_show) + `
            </div>
            <style>.salemaximize__cart-logo-container svg {fill: `+ sme_gm_general_setting.cart_icon_color + `; } .smeCartIconContainer.salemaximize__cart-logo-container { margin: ` + sme_gm_general_setting.cart_icon_y_offset + `px ` + sme_gm_general_setting.cart_icon_x_offset + `px !important; }</style>
           <div class="salemaximize__drawer-side">
                                 
                <div class="salemaximize__inner" id="salemaximize__body">
                    <div class="salemaximize__overlay"></div>
                    <div class="salemaximize__drawer-side-header skiptranslate GSheaderBgColor GSshowHeaderTitle"  style="background-color: `+ sme_gm_general_setting.header_bg_color + `;height:` + (sme_gm_general_setting.is_show_header === '0' ? 'auto' : '39.41px') + `;">
                        <div class="salemaximize__drawer-heading GSheaderTitle" style="` + (sme_gm_general_setting.is_show_header === '0' ? 'display:block' : 'display:none') + `">` + sme_gm_general_setting.cart_header_text + `</div>
                    </div>
                    <button class="salemaximize__drawer-close" onclick="closeSmeCart(this)">
                        <svg viewBox="0 0 20 20" class="salemaximize_drawer-close-icon" xmlns="http://www.w3.org/2000/svg" style="fill: `+ sme_gm_general_setting.drawer_close_icon_color + `">
                            <path d="M16.7071 4.70711C17.0976 4.31658 17.0976 3.68342 16.7071 3.29289C16.3166 2.90237 15.6834 2.90237 15.2929 3.29289L10 8.58579L4.70711 3.29289C4.31658 2.90237 3.68342 2.90237 3.29289 3.29289C2.90237 3.68342 2.90237 4.31658 3.29289 4.70711L8.58579 10L3.29289 15.2929C2.90237 15.6834 2.90237 16.3166 3.29289 16.7071C3.68342 17.0976 4.31658 17.0976 4.70711 16.7071L10 11.4142L15.2929 16.7071C15.6834 17.0976 16.3166 17.0976 16.7071 16.7071C17.0976 16.3166 17.0976 15.6834 16.7071 15.2929L11.4142 10L16.7071 4.70711Z" fill="' . (!empty($general_setting_data_array['drawer_close_icon_color']) ? $general_setting_data_array['drawer_close_icon_color'] : $general_setting_data_array['drawer_close_icon_color']) . '" class="GSheaderCloseBtnColor" />
                        </svg>
                    </button>
                    <div class="salemaximize__body GScommondrawerBgColor draggable-parent" style="background-color: `+ sme_gm_general_setting.drawer_bg_color + `;">
                    `+ sme_gm_get_data.front_view_html + `
                </div>                        
            </div>
        </div>
    </div> 
    <div class="salemaximize__drawer-side-container-overlay">&nbsp;</div>
    `;

        document.querySelector('.__salemaximize').innerHTML = sme_gm_html;


        if (smeCartData.items.length <= 0) {
            if (document.querySelector('.cartItemMainBlock2')) {
                document.querySelector('.cartItemMainBlock2').remove();
            }
            document.querySelector('.cartItemMainBlock').style.display = 'block';
            document.querySelector('.cartItemMainBlock .smeHideBlockLoadTime').style.display = 'none';
            document.querySelector('.smeCartEmptyMainDiv').style.display = 'block';
            document.querySelector('.widget6').style.visibility = 'hidden';
            document.querySelector('.widget6').style.display = 'none';
        }
        else {
            smeCartCall(1);
            if (document.querySelector('.cartItemMainBlock2')) {
                document.querySelector('.cartItemMainBlock2').remove();
            }
            document.querySelector('.cartItemMainBlock').style.display = 'block';
            document.querySelector('.cartItemMainBlock .smeHideBlockLoadTime').style.display = 'none';
        }

        var gm_shop_plan = sme_gm_dataobj.shop_plan;


        document.querySelector('.__salemaximize').style.display = "block";



        var sme_gm_cart_color_setting = JSON.parse(sme_gm_general_setting.cart_color_setting);
        document.querySelector('.GScartBG').style.backgroundColor = sme_gm_cart_color_setting.upsell_background;

        var sme_gm_cart_widget = JSON.parse(sme_gm_dataobj.cart_widget);
        var firstKey = Object.keys(sme_gm_cart_widget)[0];

        if ((check_user_shop_plan.includes(gm_shop_plan) && sme_gm_dataobj.is_charge_approve == 1) || check_devlopment_plan.includes(gm_shop_plan) || APP_PLAN_STATUS == 0) {

            var upsell_settings = JSON.parse(sme_gm_cart_widget[firstKey].upsell_settings);
            if (upsell_settings[0].is_enable === '0') {
                document.querySelector('.cart_widgetUpsellProductBlock').innerHTML = '';
                smeCartUpsellInit();
            } else {
                document.querySelector('.cart_widgetUpsellProductBlock').innerHTML = '';
            }

            if (sme_gm_cart_widget[firstKey].is_discount_bar_show === '0') {
                document.querySelector('.cart_discountBarTextVal').style.display = 'block';
                document.querySelector('.cart_discountBarTextVal').style.visibility = 'hidden';

                document.querySelector('.cart_discountExpireMsg').innerHTML = sme_gm_cart_widget[firstKey].discount_bar_expire_message;

                timerbarcall = false;
                var replacedHtml = sme_gm_cart_widget[firstKey].discount_bar_text.replace('{{timer-value}}', '<span class="cart_countDownTime"></span>');
                document.querySelector('.cart_discountBarTextVal').innerHTML = replacedHtml;
                const discountBars = document.querySelectorAll('.GScartDiscountbarColor');
                discountBars.forEach(event => {
                    event.style.backgroundColor = sme_gm_cart_color_setting.discount_bar_background;
                });
            } else {
                localStorage.removeItem('cart_smeDiscountBarcall');
                document.querySelector('.cart_Show_timer_bar_show_hide').remove();
                document.querySelector('.cart_discountExpireMsg').remove();
            }

            if (sme_gm_cart_widget[firstKey].is_show_discount_area === '0') {

                if (sme_gm_cart_widget[firstKey]['is_show_coupon_box'] === '0') {
                    var cart_couponCodeSetting = document.querySelector('.cart_couponCodeSetting');
                    cart_couponCodeSetting.style.display = 'block';
                    document.querySelector('.cart_coupTitleHtml_text').placeholder = sme_gm_cart_widget[firstKey].coup_title;
                    document.querySelector('.cart_coupSubmitBtnTextHtml').innerHTML = sme_gm_cart_widget[firstKey].coup_submit_btn_text;

                    const GScartbuttonBgColor = document.querySelectorAll('.GScartbuttonBgColor');
                    GScartbuttonBgColor.forEach(event => {
                        event.style.backgroundColor = sme_gm_cart_color_setting.button_bg_color;
                    });

                    const GScartbuttonTextColor = document.querySelectorAll('.GScartbuttonTextColor');
                    GScartbuttonTextColor.forEach(event => {
                        event.style.color = sme_gm_cart_color_setting.button_text_color;
                    });

                    document.querySelector('.cart_coupSubmitBtnTextHtml').setAttribute("onclick", "smeShopifyCouponGet(this)");
                } else {
                    var cart_couponCodeSetting = document.querySelector('.cart_couponCodeSetting');
                    cart_couponCodeSetting.style.display = 'none';
                }

                var smeCartFotter = document.querySelector(".smeCartFotter");
                smeCartFotter.style.display = 'block';
                smeCartFotter.style.visibility = 'hidden';

                document.querySelector('.cart_cartSubTotalText').innerHTML = sme_gm_cart_widget[firstKey].cart_sub_total_text;
                document.querySelector('.cart_discountnameText').innerHTML = sme_gm_cart_widget[firstKey].discount_name_text;
                document.querySelector('.cart_cartTotalText').innerHTML = sme_gm_cart_widget[firstKey].cart_total_text;

                const GScartdiscountTextColor = document.querySelectorAll('.GScartdiscountTextColor');
                GScartdiscountTextColor.forEach(event => {
                    event.style.color = sme_gm_cart_color_setting.discount_text_color;
                });

                document.querySelector('.cart_cartTotalText').style.backgroundColor = sme_gm_cart_color_setting.subtotal_bg_color;
                document.querySelector('.smeCartTotalVal').style.backgroundColor = sme_gm_cart_color_setting.subtotal_bg_color;

                document.querySelector('.cart_cartTotalText').style.color = sme_gm_cart_color_setting.subtotal_text_color;
                document.querySelector('.smeCartTotalVal').style.color = sme_gm_cart_color_setting.subtotal_text_color;

                const GScartboxBorderColor = document.querySelectorAll('.GScartboxBorderColor');
                GScartboxBorderColor.forEach(event => {
                    event.style.borderColor = sme_gm_cart_color_setting.box_border_color;
                });

                const discount_tag_bg_color = document.querySelectorAll('.smeDiscountTagLable');
                discount_tag_bg_color.forEach(event => {
                    event.style.backgroundColor = sme_gm_cart_color_setting.discount_tag_bg_color;
                });

                const GScartdiscounttagIconColor = document.querySelectorAll('.GScartdiscounttagIconColor');
                GScartdiscounttagIconColor.forEach(event => {
                    event.style.fill = sme_gm_cart_color_setting.discount_tag_icon_color;
                });

                document.querySelector('.smeDiscountTagBlock').innerHTML = '';

            } else {
                document.querySelector('.smeCartFotter').innerHTML = '';
                var smeCartFotter = document.querySelector(".smeCartFotter");
                smeCartFotter.style.display = 'block';
                smeCartFotter.style.visibility = 'hidden';
            }
        } else {
            document.querySelector('.cart_widgetUpsellProductBlock').innerHTML = '';
            document.querySelector('.cart_Show_timer_bar_show_hide').remove();
            document.querySelector('.cart_discountExpireMsg').remove();
            document.querySelector('.smeCartFotter').innerHTML = '';
        }

        var sme_gm_cart_widget = JSON.parse(sme_gm_dataobj.cart_widget);
        var firstKey = Object.keys(sme_gm_cart_widget)[0];

        if (sme_gm_cart_widget[firstKey].smedesign && sme_gm_cart_widget[firstKey].smedesign === '0') {
            smetemplates = 0;
        } else {
            smetemplates = 1;
        }
        if (sme_gm_cart_widget[firstKey].cart_is_show_header === '0') {
            document.querySelector('.cart_Announcement_bar_title_text').style.display = 'block';
            document.querySelector('.cart_Announcement_bar_title_text').style.visibility = 'hidden';
            document.querySelector('.cart_Announcement_bar_title_text').innerHTML = sme_gm_cart_widget[firstKey].header_text;
        } else {
            document.querySelector('.cart_Announcement_bar_title_text').style.display = 'none';
        }

        if (sme_gm_cart_widget[firstKey].cart_is_show_header === '0') {
            document.querySelector('.cart_Announcement_bar_title_text').style.backgroundColor = sme_gm_cart_color_setting.announcement_bar_background;
        }

        document.querySelector('.sme_cart_empty_msg').innerHTML = sme_gm_cart_widget[firstKey].cart_empty_msg;

        if (sme_gm_cart_widget[firstKey].cart_empty_icone !== null) {
            document.querySelector('.cart_EmptyMainimage').style.display = 'block';
            document.querySelector('.sme__result_cart_EmptyMainimage').src = smecartEmptyimage + sme_gm_cart_widget[firstKey].cart_empty_icone;
        }

        var sme_gm_progress_bar_color_setting = JSON.parse(sme_gm_general_setting.progress_bar_color_setting);
        var sme_gm_progress_bar_widget = JSON.parse(sme_gm_dataobj.progress_bar_widget);
        var firstKey = Object.keys(sme_gm_progress_bar_widget)[0];

        if (sme_gm_progress_bar_widget[firstKey].is_active === '0') {

            if ((check_user_shop_plan.includes(gm_shop_plan) && sme_gm_dataobj.is_charge_approve == 1) || check_devlopment_plan.includes(gm_shop_plan) || APP_PLAN_STATUS == 0) {

                if (!document.querySelector('.widget1 canvas')) {
                    document.querySelector('.widget1').insertAdjacentHTML('afterbegin', '<canvas id="canvas" class="position-absolute" style="z-index: 99999999;width: 100%;max-height: 100%;"></canvas>');
                }

                document.querySelector('.widget1').style.backgroundColor = sme_gm_progress_bar_color_setting.upsell_background;

                var progressBarBlock = document.querySelector('.Progress_Bar_smewidgetblock');
                if (progressBarBlock) {
                    progressBarBlock.style.display = 'block';
                    progressBarBlock.style.visibility = 'visible';
                    progressBarBlock.classList.remove('widget-disable');
                }

                if (sme_gm_progress_bar_widget[firstKey].is_show_header === '0') {
                    document.querySelector('.Progress_Bar_Announcement_bar_text').style.display = 'block';
                    document.querySelector('.Progress_Bar_Announcement_bar_text').innerHTML = sme_gm_progress_bar_widget[firstKey].header_text;

                    document.querySelector('.Progress_Bar_Announcement_bar_text').style.backgroundColor = sme_gm_progress_bar_color_setting.announcement_bar_background;
                } else {
                    document.querySelector('.Progress_Bar_Announcement_bar_text').style.display = 'none';
                }

                if (sme_gm_progress_bar_widget[firstKey].is_discount_bar_show === '0') {
                    timerbarcall = false;
                    document.querySelector('.Progress_Bar_discountExpireMsg').innerHTML = sme_gm_progress_bar_widget[firstKey].discount_bar_expire_message;
                    var replacedHtml = sme_gm_progress_bar_widget[firstKey].discount_bar_text.replace('{{timer-value}}', '<span class="Progress_Bar_countDownTime"></span>');
                    document.querySelector('.Progress_Bar_discount_bar_text_show_hied').innerHTML = replacedHtml;
                    document.querySelector('.GSprogressbarEmptyColor').style.backgroundColor = sme_gm_cart_color_setting.bar_empty_color;
                    document.querySelector('.Progress_Bar_is_discount_bar_show_hied').style.visibility = 'hidden';
                    document.querySelector('.Progress_Bar_discountExpireMsg').style.display = 'none';
                    const GSprogressbarDiscountbarColor = document.querySelectorAll('.GSprogressbarDiscountbarColor');
                    GSprogressbarDiscountbarColor.forEach(event => {
                        event.style.backgroundColor = sme_gm_progress_bar_color_setting.discount_bar_background;
                    });
                } else {
                    localStorage.removeItem('progress_bar_smeDiscountBarcall');
                    document.querySelector('.Progress_Bar_is_discount_bar_show_hied').remove();
                    document.querySelector('.Progress_Bar_discountExpireMsg').remove();
                }

                const GSprogressbarFillColor = document.querySelectorAll('.GSprogressbarFillColor');
                GSprogressbarFillColor.forEach(event => {
                    event.style.backgroundColor = sme_gm_progress_bar_color_setting.bar_fill_color;
                });

                const GSprogressbarOfferColor = document.querySelectorAll('.GSprogressbarOfferColor');
                GSprogressbarOfferColor.forEach(event => {
                    event.style.color = sme_gm_progress_bar_color_setting.progress_bar_offer_color;
                });

                document.querySelector('.smeProgressFillDiv').style.width = '0%';

                smeInitConfettiFn();
            } else {
                document.querySelector('.Progress_Bar_smewidgetblock').innerHTML = '';
            }
        } else {
            document.querySelector('.Progress_Bar_smewidgetblock').innerHTML = '';
        }

        var sme_gm_upsell_color_setting = JSON.parse(sme_gm_general_setting.upsell_color_setting);
        var sme_gm_upsell_widget = JSON.parse(sme_gm_dataobj.upsell_widget);
        var firstKey = Object.keys(sme_gm_upsell_widget)[0];

        if (sme_gm_upsell_widget[firstKey].is_active === '0') {

            if ((check_user_shop_plan.includes(gm_shop_plan) && sme_gm_dataobj.is_charge_approve == 1) || check_devlopment_plan.includes(gm_shop_plan) || APP_PLAN_STATUS == 0) {

                document.querySelector('.upsell_widgetUpsellProductBlock').innerHTML = '';

                smeUpsellInit();
                document.querySelector('.Horizontal_upsell_discountExpireMsg').nextElementSibling.style.background = `${sme_gm_upsell_color_setting.upsell_background}`;
                //document.querySelector('.GSUpsellBG').style.backgroundColor = sme_gm_upsell_color_setting.upsell_background;

                if (sme_gm_upsell_widget[firstKey].is_show_header === '0') {
                    document.querySelector('.Horizontal_upsell_Announcement_bar_text').style.display = 'block';
                    document.querySelector('.Horizontal_upsell_Announcement_bar_text').innerHTML = sme_gm_upsell_widget[firstKey].header_text;
                    document.querySelector('.Horizontal_upsell_Announcement_bar_text').style.backgroundColor = sme_gm_upsell_color_setting.announcement_bar_background;
                } else {
                    document.querySelector('.Horizontal_upsell_Announcement_bar_text').style.display = 'none';
                }

                if (sme_gm_upsell_widget[firstKey].is_discount_bar_show === '0') {
                    timerbarcall = false;
                    document.querySelector('.Horizontal_upsell_discountExpireMsg').innerHTML = sme_gm_upsell_widget[firstKey].discount_bar_expire_message;
                    var replacedHtml = sme_gm_upsell_widget[firstKey].discount_bar_text.replace('{{timer-value}}', '<span class="Horizontal_upsell_countDownTime"></span>');
                    document.querySelector('.Horizontal_upsell_discount_bar_text_show_hied').innerHTML = replacedHtml;
                    const GSupsellDiscountbarColor = document.querySelectorAll('.GSupsellDiscountbarColor');
                    GSupsellDiscountbarColor.forEach(event => {
                        event.style.backgroundColor = sme_gm_upsell_color_setting.discount_bar_background;
                    });
                } else {
                    localStorage.removeItem('upsell_smeDiscountBarcall');
                    document.querySelector('.Horizontal_upsell_discount_bar_text_show_hied').remove();
                    document.querySelector('.Horizontal_upsell_discountExpireMsg').remove();
                }

            } else {
                document.querySelector('.widget3').innerHTML = '';
            }
        } else {
            document.querySelector('.widget3').innerHTML = '';
        }

        var sme_gm_recommendation_color_setting = JSON.parse(sme_gm_general_setting.recommendation_color_setting);
        var sme_gm_recommendation_widget = JSON.parse(sme_gm_dataobj.recommendation_widget);
        var firstKey = Object.keys(sme_gm_recommendation_widget)[0];
        if (sme_gm_recommendation_widget[firstKey].is_active === '0') {

            if ((check_user_shop_plan.includes(gm_shop_plan) && sme_gm_dataobj.is_charge_approve == 1) || check_devlopment_plan.includes(gm_shop_plan) || APP_PLAN_STATUS == 0) {

                document.querySelector('.Vertical_upsell_recomFrontProductView').innerHTML = '';

                smeRecommendationInit();

                document.querySelector('.GSRecommendationBG').style.backgroundColor = sme_gm_recommendation_color_setting.upsell_background;

                if (sme_gm_recommendation_widget[firstKey].is_show_header === '0') {
                    document.querySelector('.Vertical_upsellis_Announcement_bar_text').style.display = 'block';
                    document.querySelector('.Vertical_upsellis_Announcement_bar_text').innerHTML = sme_gm_recommendation_widget[firstKey].header_text;
                    document.querySelector('.Vertical_upsellis_Announcement_bar_text').style.backgroundColor = sme_gm_recommendation_color_setting.announcement_bar_background;
                } else {
                    document.querySelector('.Vertical_upsellis_Announcement_bar_text').style.display = 'none';
                }

                if (sme_gm_recommendation_widget[firstKey].is_discount_bar_show === '0') {
                    timerbarcall = false;
                    document.querySelector('.Vertical_upsellis_discountExpireMsg').innerHTML = sme_gm_recommendation_widget[firstKey].discount_bar_expire_message;
                    var replacedHtml = sme_gm_recommendation_widget[firstKey].discount_bar_text.replace('{{timer-value}}', '<span class="Vertical_upsellis_countDownTime"></span>');
                    document.querySelector('.Vertical_upsellis_discount_bar_text_show_hied').innerHTML = replacedHtml;
                    const GSrecommendationDiscountbarColor = document.querySelectorAll('.GSrecommendationDiscountbarColor');
                    GSrecommendationDiscountbarColor.forEach(event => {
                        event.style.backgroundColor = sme_gm_recommendation_color_setting.discount_bar_background;
                    });
                } else {
                    localStorage.removeItem('recommendation_smeDiscountBarcall');
                    document.querySelector('.Vertical_upsellis_discount_bar_text_show_hied').remove();
                    document.querySelector('.Vertical_upsellis_discountExpireMsg').remove();
                }

            } else {
                document.querySelector('.widget4').innerHTML = '';
            }
        } else {
            document.querySelector('.widget4').innerHTML = '';
        }

        var sme_gm_checkout_widget = JSON.parse(sme_gm_dataobj.checkout_widget);
        var firstKey = Object.keys(sme_gm_checkout_widget)[0];

        var checkoutWidget = document.querySelector('.widget6');
        var checkoutWidgetHtml = checkoutWidget.outerHTML;

        if ((check_user_shop_plan.includes(gm_shop_plan) && sme_gm_dataobj.is_charge_approve == 1) || check_devlopment_plan.includes(gm_shop_plan) || APP_PLAN_STATUS == 0) {

            if (sme_gm_checkout_widget[firstKey].checkout_position === '0') {
                document.querySelector('.widget6').remove();
                document.querySelector('.salemaximize__body').insertAdjacentHTML('afterend', checkoutWidgetHtml);
                document.querySelector('.widget6 .salemaximizeBlockMargin').style.boxShadow = '1px 0 5px 2px rgba(0, 0, 0, 0.2), 0 0';
            }

            var checkout_upsell_settings = JSON.parse(sme_gm_checkout_widget[firstKey].upsell_settings);

            if (checkout_upsell_settings[0].is_enable === '0') {

                if (checkout_upsell_settings[0].upsell_type === '0') {
                    document.querySelector('.Checkout_smeshippingBlock').style.display = 'block';
                    var sme_gm_shipping_id = checkout_upsell_settings[0].shipping_product_id;
                    let data_url = smeAppUrl + "checkout_upsell_call.php";
                    const smePostData = JSON.stringify({
                        method_name: "upsell_specific_view",
                        shop: Shopify.shop,
                        token: sme_gm_dataobj.token,
                        product_ids: sme_gm_shipping_id
                    });
                    let authHeader = { 'Authentication': smeReqHeader.Authentication };

                    try {

                        let smeXhrHttp = new XMLHttpRequest();
                        smeXhrHttp.open("POST", data_url, true);
                        let headerObj = (authHeader['json']) ? { 'Content-type': 'application/json; charset=UTF-8' } : { 'Content-type': 'application/x-www-form-urlencoded' };
                        if (authHeader != '') {
                            headerObj = {
                                ...headerObj,
                                ...authHeader
                            };
                        }
                        delete headerObj['json'];
                        for (let key in headerObj) {
                            smeXhrHttp.setRequestHeader(key, headerObj[key])
                        }
                        smeXhrHttp.onload = function () {

                            if (smeXhrHttp.status >= 200 && smeXhrHttp.status < 300) {
                                // Successful response
                                var smeApiResponse = JSON.parse(this.responseText);
                                if (smeApiResponse && smeApiResponse.length > 0) {

                                    document.querySelector('.Checkout_shipping_image').src = smeApiResponse[0].image.src;
                                    document.querySelector('.Checkout_shippingTitleText').innerHTML = smeApiResponse[0].title;
                                    document.querySelector('.Checkout_shippingDescriptionText').innerHTML = smeApiResponse[0].body_html;
                                    document.querySelector('.Checkout_shippingPriceText').innerHTML = smeCurrencyFormate + smeApiResponse[0].variants[0].price;
                                    var variants_id = smeApiResponse[0].variants[0].id;
                                    shipping_variant_id = variants_id;

                                    isswatchproductcall = true;
                                }
                            }
                        };
                        smeXhrHttp.send(smePostData);
                    } catch (error) {
                        console.error('Error fetching data from API:', error);
                    }
                    if (checkout_upsell_settings[0].is_shipping_on === '0') {
                        document.querySelector('.shipping_product_smeSwitchProduct').checked = true;
                    }
                }

                if (checkout_upsell_settings[0].upsell_type === '1') {
                    document.querySelector('.Checkout_smeGiftBlock').style.display = 'block';
                    var sme_gm_gift_product_id = checkout_upsell_settings[0].gift_product_id;
                    let data_url = smeAppUrl + "checkout_upsell_call.php";
                    const smePostData = JSON.stringify({
                        method_name: "upsell_specific_view",
                        shop: Shopify.shop,
                        token: sme_gm_dataobj.token,
                        product_ids: sme_gm_gift_product_id
                    });
                    let authHeader = { 'Authentication': smeReqHeader.Authentication };

                    try {
                        let smeXhrHttp = new XMLHttpRequest();
                        smeXhrHttp.open("POST", data_url, true);
                        let headerObj = (authHeader['json']) ? { 'Content-type': 'application/json; charset=UTF-8' } : { 'Content-type': 'application/x-www-form-urlencoded' };
                        if (authHeader != '') {
                            headerObj = {
                                ...headerObj,
                                ...authHeader
                            };
                        }
                        delete headerObj['json'];
                        for (let key in headerObj) {
                            smeXhrHttp.setRequestHeader(key, headerObj[key])
                        }
                        smeXhrHttp.onload = function () {

                            if (smeXhrHttp.status >= 200 && smeXhrHttp.status < 300) {
                                // Successful response
                                var smeApiResponse = JSON.parse(this.responseText);

                                if (smeApiResponse && smeApiResponse.length > 0) {
                                    document.querySelector('.salemaximize__gift-product-image').src = smeApiResponse[0].image.src;
                                    document.querySelector('.Checkout_giftTitleText').innerHTML = smeApiResponse[0].title;
                                    document.querySelector('.Checkout_giftPriceText').innerHTML = smeCurrencyFormate + smeApiResponse[0].variants[0].price;
                                    var variants_id = smeApiResponse[0].variants[0].id;
                                    gift_variant_id = variants_id;
                                    isswatchproductcall = true;
                                }
                            }
                        };

                        smeXhrHttp.send(smePostData);

                    } catch (error) {
                        console.error('Error fetching data from API:', error);
                    }
                    if (checkout_upsell_settings[0].is_gift_on === '0') {
                        document.querySelector('.gift_product_smeSwitchProduct').checked = true;
                    }
                }

                if (checkout_upsell_settings[0].upsell_type === '2') {
                    smeCheckoutUpsellInit();
                    document.querySelector(".Checkout_upsellSkeletonProductView").style.visibility = 'hidden';
                    document.querySelector(".checkout_widgetUpsellProductBlock").style.visibility = 'hidden';
                }

            } else {
                document.querySelector('.checkout_widgetUpsellProductBlock').innerHTML = '';
            }

            if (sme_gm_checkout_widget[firstKey].is_show_header === '0') {
                document.querySelector('.Checkout_Announcement_bar_show_hide').style.display = 'block';
            } else {
                document.querySelector('.Checkout_Announcement_bar_show_hide').style.display = 'none';
            }

            if (sme_gm_checkout_widget[firstKey].is_enable_calculate_shipping === '0') {
                smeGetShippingZone();

                if (sme_gm_checkout_widget[firstKey].shipping_image_type === '1') {
                    const shippingChargeLabelIMG = document.querySelectorAll('.shippingChargeLabelIMG');
                    shippingChargeLabelIMG.forEach(event => {
                        event.src = smeAppUrl + "assets/img/editor_images/" + sme_gm_checkout_widget[firstKey].shipping_icon_image;
                    });
                } else {
                    const shippingChargeLabelIMG = document.querySelectorAll('.shippingChargeLabelIMG');
                    shippingChargeLabelIMG.forEach(event => {
                        event.src = smeAppUrl + 'assets/img/editor_images/shipping_truck.svg';
                    });
                }
            }

            if (sme_gm_checkout_widget[firstKey].is_enable_confirmation_block === '0') {
                document.querySelector('.Checkout_isEnableConfirmationBlock').style.display = 'block';

            } else {
                document.querySelector('.Checkout_isEnableConfirmationBlock').style.display = 'none';
            }

            if (sme_gm_checkout_widget[firstKey].is_enable_payment_gateway === '0') {
                document.querySelectorAll('.salemaximize_payment_button').forEach(element => {
                    element.style.display = 'none';
                });
                amecheckouadinalpaymentbuttononoff = false;
            }

            if (sme_gm_checkout_widget[firstKey].is_enable_trust_badges === '0') {
                document.querySelector('.Checkout_isEnableTrustBadges').style.display = 'flex';
                if (sme_gm_checkout_widget[firstKey].trust_badge_image_type === '1') {
                    const trustBadgesIMG = document.querySelectorAll('.trustBadgesIMG');
                    trustBadgesIMG.forEach(event => {
                        event.src = smeAppUrl + "assets/img/editor_images/" + sme_gm_checkout_widget[firstKey].trust_badge_image;
                    });
                } else {
                    const trustBadgesIMG = document.querySelectorAll('.trustBadgesIMG');
                    trustBadgesIMG.forEach(event => {
                        event.src = smeAppUrl + 'assets/img/editor_images/payment_icons.png';
                    });
                }
            } else {
                document.querySelector('.Checkout_isEnableTrustBadges').style.display = 'none';
            }


            document.querySelector('.smeShippingCountry').remove('onchange');
            document.querySelector('.smeShippingCountry').setAttribute('onchange', 'smeCheckShippingProvince(this)');
            document.querySelector('.shipping_product_smeSwitchProduct').setAttribute("onclick", "smeSwatchProductAdd(this)");
            document.querySelector('.gift_product_smeSwitchProduct').setAttribute("onclick", "smeSwatchProductAdd(this)");

            document.querySelector('#termNcondition').setAttribute('onchange', 'smeAcceptTermCondition(this)');

        } else {
            document.querySelector('.widget6').remove();
            document.querySelector('.salemaximize__body').insertAdjacentHTML('afterend', checkoutWidgetHtml);
            document.querySelector('.widget6 .salemaximizeBlockMargin').style.boxShadow = '1px 0 5px 2px rgba(0, 0, 0, 0.2), 0 0';

            document.querySelector('.Checkout_Announcement_bar_show_hide').remove();
            document.querySelector('.Checkout_isEnableCalculateShipping').remove();
            document.querySelector('.Checkout_isEnableConfirmationBlock').innerHTML = '';
            document.querySelector('.Checkout_isEnableTrustBadges').innerHTML = '';
            document.querySelector('.Checkout_isEnableTrustBadges').style.height = '0px';
            document.querySelector('.salemaximize_additional_checkout_button').innerHTML = '';
            document.querySelector('.checkout_widgetUpsellProductBlock').innerHTML = '';
            document.querySelector('.smeExpressCheckoutBlock').remove();
        }

        if (sme_gm_checkout_widget[firstKey].is_enable_order_note === '1') {
            document.querySelector('.Checkout_isEnableOrderNote').classList.remove('smeCheckoutSubDiv');
            if (sme_gm_checkout_widget[firstKey].order_note_image_type === '1') {
                const checkoutNoteIMG = document.querySelectorAll('.checkoutNoteIMG');
                checkoutNoteIMG.forEach(event => {
                    event.src = smeAppUrl + "assets/img/editor_images/" + sme_gm_checkout_widget[firstKey].order_note_image;
                });
            } else {
                const checkoutNoteIMG = document.querySelectorAll('.checkoutNoteIMG');
                checkoutNoteIMG.forEach(event => {
                    event.src = smeAppUrl + 'assets/img/editor_images/order_note.svg';
                });
            }

        } else {
            openOrdernote('0');
        }

        if (sme_gm_checkout_widget[firstKey].apply_discount_image_type === '1') {
            const applyDiscountLabelIMG = document.querySelectorAll('.applyDiscountLabelIMG');
            applyDiscountLabelIMG.forEach(event => {
                event.src = smeAppUrl + "assets/img/editor_images/" + sme_gm_checkout_widget[firstKey].apply_discount_image;
            });
        } else {
            const applyDiscountLabelIMG = document.querySelectorAll('.applyDiscountLabelIMG');
            applyDiscountLabelIMG.forEach(event => {
                event.src = smeAppUrl + 'assets/img/editor_images/apply_discount.svg';
            });
        }

        document.querySelector('.checkout_checkoutContinueShoppingTextHtml').setAttribute('onclick', 'closeSmeCart(this)');
        document.querySelector('.smeCheckoutBtn').setAttribute("onclick", "smeCheckoutProcess(this)");
        document.querySelector('.Checkout_applyDiscountSaveBtnTextHtml').setAttribute("onclick", "smeShopifyCouponGet(this)");

        let activeTools = document.querySelectorAll('.smeCheckoutToolsDiv .smeCheckoutTitle');
        activeTools.forEach(tool => {
            tool.classList.remove('borderRight');
        });
        let blockElementsCount = 0;
        let visibleActiveTools = [];

        activeTools.forEach(element => {
            if (window.getComputedStyle(element).display !== 'none') {
                blockElementsCount++;
                visibleActiveTools.push(element);
            }
        });

        if (blockElementsCount === 2) {
            visibleActiveTools[0].classList.add('borderRight');
        }
        if (blockElementsCount === 3) {
            visibleActiveTools.forEach(tool => {
                tool.classList.add('borderRight');
            });
        }

        smeThirdPartyIntegration();
        smeApplyCssJs();
        openPopup('.smeShippingCalculator', '0');
        openPopup('.smeApplyDiscount', '0');
        smeNewLineDisableTextarea();

        if (navigator.userAgent.indexOf('Safari') > -1) {
            const safariVersionMatch = navigator.userAgent.match(/Version\/(\d+)\.(\d+)/);

            if (safariVersionMatch) {
                const majorVersion = parseInt(safariVersionMatch[1], 10);
                const minorVersion = parseInt(safariVersionMatch[2], 10);

                var Safari_version = majorVersion + '.' + minorVersion;
                if (Safari_version < 15.5) {
                    if (document.querySelector('.__salemaximize .salemaximize__recommandation-product-name')) {
                        document.querySelector('.__salemaximize .salemaximize__recommandation-product-name').style.textOverflow = 'inherit';
                        document.querySelector('.__salemaximize .salemaximize__recommandation-product-name').style.maxHeight = 'inherit';
                    }
                }
            }
        }
        document.querySelector('.salemaximize__cart-preview').style.display = "block";
    }
}





var addtocart = true;
var iconclick = true;
async function smeShopifyAtcTrigger(event) {
    document.querySelector('body').classList.add('salemaximize__active');
    document.querySelector('.salemaximize__drawer-side').style.transform = 'translate(0px)';
    document.querySelector('.salemaximize__drawer-side-container-overlay').classList.add('active');
    document.querySelector('.salemaximize__drawer-side-container-overlay').setAttribute('onclick', 'closeSmeCart(this)');;
    if (document.querySelector('.salemaximize__cart-logo-container').getAttribute('onclick') === 'openSmeCart(this)') {
        document.querySelector('.salemaximize__cart-logo-container').removeAttribute('onclick');
    }
    document.querySelector('.salemaximize__cart-logo-container').setAttribute('onclick', 'closeSmeCart(this)');
    if (event && event.target && event.target.closest("form[action*='/cart/add']")) {

        let formData = event.target.closest("form[action*='/cart/add']");

        document.querySelector('.smeCartEmptyMainDiv').style.display = 'none';
        if (smetemplates == 1) {
            var cartItems = document.querySelectorAll('.cartItemMainBlock .salemaximize__cart-item');
        } else {
            var cartItems = document.querySelectorAll('.cartItemMainBlock .salemaximize__cart-item-cart');
        }
        const visibleCartItems = Array.from(cartItems).filter(item => item.offsetParent !== null);

        if (visibleCartItems.length <= 0) {
            if (document.querySelector('.cartEmptyLoader')) {
                document.querySelector('.cartEmptyLoader').remove();
            }
            var newDiv = document.createElement('div');
            newDiv.className = 'cartEmptyLoader';
            newDiv.innerHTML = cartLoader;
            document.querySelector('.smeCartEmptyMainDiv').parentNode.insertBefore(newDiv, document.querySelector('.smeCartEmptyMainDiv'));
        }

        formData = smeSerialize(formData);
        let url = window.Shopify.routes.root + 'cart/add.js';
        let authHeader = { 'x-requested-with': 'XMLHttpRequest' };
        let smeApiResponse = await smePostAjaxApiFn(url, formData, authHeader);
        addtocart = false;
        if (smeApiResponse) {
            if (smeApiResponse.status === 422) {

                var data = smeApiResponse.response;

                let errorMsg = document.createElement('div');
                errorMsg.className = 'product_qty_rich_error_msg';
                errorMsg.innerHTML = data.description;

                // Append the created element to the DOM
                document.querySelector('.cartItemMainBlock').insertAdjacentElement('afterend', errorMsg);

                setTimeout(function () {
                    // Properly select and remove the created error message
                    document.querySelector('.product_qty_rich_error_msg')?.remove();
                }, 3000);

                if (document.querySelector('.cartEmptyLoader')) {
                    document.querySelector('.cartEmptyLoader').remove();
                }

            } else {
                smeFbTracking(smeApiResponse, 'AddToCart');
                smeGoogleAnalytics(smeApiResponse, 'add_to_cart');
            }
        }
    }
    else {
        let q = [];
        var variant_id;
        var qty;
        var addtocartcall = false;

        if (event && event.target.classList.contains('js-grid-cart')) {
            variant_id = event.target.getAttribute("data-id");
            qty = 1;
            addtocartcall = true;
        } else if (event && event.target.closest('.js-grid-cart')) {
            variant_id = event.target.closest('.js-grid-cart').getAttribute("data-id");
            qty = 1;
            addtocartcall = true;
        } else if (event && event.target.closest('.product--quick-add')) {
            variant_id = event.target.closest('.product--quick-add').getAttribute("data-id");
            qty = 1;
            addtocartcall = true;
        }
        else if (event && event.target.closest('.product-item') && event.target.closest('.product-item').querySelector('.variant-selection')) {
            variant_id = event.target.closest('.product-item').querySelector('.variant-selection').getAttribute("variant");
            qty = 1;
            addtocartcall = true;
        } else if (event && event.target.classList.contains('cart-title')) {
            classlist = event.target.closest('.product-item').className;
            let classArray = classlist.split(' ');
            variant_id = classArray.find(cls => /^\d+$/.test(cls));
            qty = 1;
            addtocartcall = true;
        }
        else if (event && event.target.closest('.ecom-collection__product-simple-add-to-cart')) {
            variant_id = event.target.closest('.ecom-collection__product-simple-add-to-cart').getAttribute("data-id");
            qty = 1;
            addtocartcall = true;
        }
        else {
            iconclick = false;
            smeCartCall(1);
        }

        q.push('id' + '=' + encodeURIComponent(variant_id));
        q.push('quantity' + '=' + encodeURIComponent(qty));
        newfordata = q.join('&');
        newsmeShopifyCouponGet();


        if (newfordata && addtocartcall) {
            document.querySelector('.smeCartEmptyMainDiv').style.display = 'none';
            if (smetemplates == 1) {
                var cartItems = document.querySelectorAll('.cartItemMainBlock .salemaximize__cart-item');
            } else {
                var cartItems = document.querySelectorAll('.cartItemMainBlock .salemaximize__cart-item-cart');
            }

            const visibleCartItems = Array.from(cartItems).filter(item => item.offsetParent !== null);

            if (visibleCartItems.length <= 0) {
                if (document.querySelector('.cartEmptyLoader')) {
                    document.querySelector('.cartEmptyLoader').remove();
                }
                var newDiv = document.createElement('div');
                newDiv.className = 'cartEmptyLoader';
                newDiv.innerHTML = cartLoader;
                document.querySelector('.smeCartEmptyMainDiv').parentNode.insertBefore(newDiv, document.querySelector('.smeCartEmptyMainDiv'));
            }

            let url = window.Shopify.routes.root + 'cart/add.js';
            let authHeader = { 'x-requested-with': 'XMLHttpRequest' };
            let smeApiResponse = await smePostAjaxApiFn(url, newfordata, authHeader);
            addtocart = false;
            if (smeApiResponse) {
                if (smeApiResponse.status === 422) {

                    var data = smeApiResponse.response;

                    let errorMsg = document.createElement('div');
                    errorMsg.className = 'product_qty_rich_error_msg';
                    errorMsg.innerHTML = data.description;

                    // Append the created element to the DOM
                    document.querySelector('.cartItemMainBlock').insertAdjacentElement('afterend', errorMsg);

                    setTimeout(function () {
                        // Properly select and remove the created error message
                        document.querySelector('.product_qty_rich_error_msg')?.remove();
                    }, 3000);

                    if (document.querySelector('.cartEmptyLoader')) {
                        document.querySelector('.cartEmptyLoader').remove();
                    }


                } else {
                    smeFbTracking(smeApiResponse, 'AddToCart');
                    smeGoogleAnalytics(smeApiResponse, 'add_to_cart');
                }
            }
        }
    }

    var store_user_id = sme_gm_dataobj.store_user_id;
    var iana_timezone = sme_gm_dataobj.iana_timezone;
    if ((smeCartData.items.length > 0) && iconclick == false || addtocart == false) {
        document.querySelector('.widget1').classList.remove('empty_cart_progress_bar');
        document.querySelector('.GScartBG').classList.remove('empty_cart_div');
        document.querySelector('.salemaximize__body').style.overflowY = 'auto';

        addtocart = true;
        iconclick = true;
        document.querySelector('.cart_Announcement_bar_title_text').style.visibility = 'visible';
        document.querySelector(".widget2 .smeCartFotter").style.visibility = 'visible';

        var sme_gm_cart_widget = JSON.parse(sme_gm_dataobj.cart_widget);
        var tempSecId = Object.keys(sme_gm_cart_widget)[0];
        var upsell_settings = JSON.parse(sme_gm_cart_widget[tempSecId].upsell_settings);

        var smeXhrHandle = window.XMLHttpRequest;
        function smeXHRRequestHandler() {
            var realXHR = new smeXhrHandle();
            realXHR.addEventListener("readystatechange", function () {

                if (realXHR.readyState == 4 && realXHR.status == 200 && (typeof realXHR._url != "undefined" || typeof realXHR.responseURL != "undefined")) {

                    var ajaxUrl = typeof realXHR._url != "undefined" ? realXHR._url : realXHR.responseURL;

                    if (smeCartData.items.length > 0) {

                        if ((check_user_shop_plan.includes(sme_gm_dataobj.shop_plan) && sme_gm_dataobj.is_charge_approve == 1) || check_devlopment_plan.includes(sme_gm_dataobj.shop_plan) || APP_PLAN_STATUS == 0) {

                            if (upsell_settings[0].is_enable === '0') {
                                if (ajaxUrl.includes('sale-max-dev.gminfotech.org/cart_upsell_call.php') || ajaxUrl.includes('/recommendations/products.json')) {

                                    cartdrawercall = false;
                                    document.querySelector(".cart_widgetUpsellProductBlock").style.visibility = 'visible';
                                } else {
                                    cartdrawercall = false;
                                    document.querySelector(".cart_widgetUpsellProductBlock").style.visibility = 'visible';
                                }
                            }

                            let sme_gm_upsell_widget = JSON.parse(sme_gm_dataobj.upsell_widget);
                            let upsell_tempSecId = Object.keys(sme_gm_upsell_widget);
                            if (sme_gm_upsell_widget[upsell_tempSecId].is_active === '0') {

                                if (ajaxUrl.includes('sale-max-dev.gminfotech.org/horizontal_upsell_call.php') || ajaxUrl.includes('/recommendations/products.json')) {
                                    horizontaldrawercall = false;
                                    document.querySelector('.widget3').style.visibility = 'visible';
                                    document.querySelector(".upsell_widgetUpsellProductBlock").style.display = 'flex';
                                } else {
                                    horizontaldrawercall = false;
                                    document.querySelector('.widget3').style.visibility = 'visible';
                                    document.querySelector(".upsell_widgetUpsellProductBlock").style.display = 'flex';
                                }
                            }

                            let sme_gm_recommendation_widget = JSON.parse(sme_gm_dataobj.recommendation_widget);
                            let recommendation_tempSecId = Object.keys(sme_gm_recommendation_widget);
                            if (sme_gm_recommendation_widget[recommendation_tempSecId].is_active === '0') {
                                if (ajaxUrl.includes('sale-max-dev.gminfotech.org/vertical_upsell_call.php') || ajaxUrl.includes('/recommendations/products.json')) {
                                    verticaldrawercall = false;
                                    document.querySelector(".widget4").style.visibility = 'visible';
                                } else {
                                    verticaldrawercall = false;
                                    document.querySelector(".widget4").style.visibility = 'visible';

                                }
                            }

                            var sme_gm_checkout_widget = JSON.parse(sme_gm_dataobj.checkout_widget);
                            var tempSecId = Object.keys(sme_gm_checkout_widget)[0];
                            var checkout_upsell_settings = JSON.parse(sme_gm_checkout_widget[tempSecId].upsell_settings);
                            if (checkout_upsell_settings[0].is_enable === '0') {
                                if (ajaxUrl.includes('sale-max-dev.gminfotech.org/checkout_upsell_call.php') || ajaxUrl.includes('/recommendations/products.json')) {
                                    checkoutdrawercall = false;
                                    document.querySelector(".checkout_widgetUpsellProductBlock").style.visibility = 'visible';
                                } else {
                                    checkoutdrawercall = false;
                                    document.querySelector(".checkout_widgetUpsellProductBlock").style.visibility = 'visible';
                                }
                            }
                        }
                    }
                }
            }, false);

            return realXHR;
        }

        window.XMLHttpRequest = smeXHRRequestHandler;

        var widget_global_settings_id = sme_gm_cart_widget[tempSecId].widget_global_settings_id;
        var cart_smewidgetblock = document.querySelector('.salemaximize__drawer-side');
        if (cart_smewidgetblock) {
            var url = smeAppUrl + "get_data_api.php";
            const smePostData = JSON.stringify({
                method_name: "view_impression",
                shop: Shopify.shop,
                impression_data: JSON.stringify({ "store_user_id": store_user_id, "section_id": 1, "is_upsell": 1, "widget_global_settings_id": widget_global_settings_id, "iana_timezone": iana_timezone, "impression_view": 1, "impression_click": 0 })
            });
            let authHeader = { 'Authentication': smeReqHeader.Authentication };
            let smeApiResponse = smePostAjaxApiFn(url, smePostData, authHeader);
        }

        document.querySelector('.widget6').style.visibility = 'visible';
        document.querySelector('.widget6').style.display = 'block';

        setTimeout(() => {
            smeAllViewImpression(1);
            smeAllViewImpression(2);
            smeAllViewImpression(3);
            smeAllViewImpression(4);
            smeAllViewImpression(5);
            if (document.querySelector('.salemaximize__checkout-container').style.visibility == 'visible') {
                var url = smeAppUrl + "get_data_api.php";
                const smePostData = JSON.stringify({
                    method_name: "view_impression",
                    shop: Shopify.shop,
                    impression_data: JSON.stringify({ "store_user_id": store_user_id, "section_id": 5, "is_upsell": 1, "widget_global_settings_id": widget_global_settings_id, "iana_timezone": iana_timezone, "impression_view": 1, "impression_click": 0 })
                });
                let authHeader = { 'Authentication': smeReqHeader.Authentication };
                let smeApiResponse = smePostAjaxApiFn(url, smePostData, authHeader);
            }

        }, 2000);

        if (!timerbarcall) {
            smeDiscountBarTimer(0, 0);
        }

        if (amecheckouadinalpaymentbutton && !amecheckouadinalpaymentbuttononoff) {
            smepayment_button_get_data();
            amecheckouadinalpaymentbutton = false;
        }

    } else {
        document.querySelector('.widget1').classList.add('empty_cart_progress_bar');
        document.querySelector('.GScartBG').classList.add('empty_cart_div');
        document.querySelector('.salemaximize__body').style.overflowY = 'hidden';
        if (sme_gm_dataobj.progress_bar_positen == 0) {
            document.querySelector('.empty_cart_progress_bar').style.bottom = '0';
        } else {
            document.querySelector('.empty_cart_progress_bar').style.bottom = '';
        }

        var sme_gm_cart_widget = JSON.parse(sme_gm_dataobj.cart_widget);
        var tempSecId = Object.keys(sme_gm_cart_widget)[0];
        var widget_global_settings_id = sme_gm_cart_widget[tempSecId].widget_global_settings_id;
        var cart_smewidgetblock = document.querySelector('.salemaximize__drawer-side');
        if (cart_smewidgetblock) {
            var url = smeAppUrl + "get_data_api.php";
            const smePostData = JSON.stringify({
                method_name: "view_impression",
                shop: Shopify.shop,
                impression_data: JSON.stringify({ "store_user_id": store_user_id, "section_id": 1, "is_upsell": 1, "widget_global_settings_id": widget_global_settings_id, "iana_timezone": iana_timezone, "impression_view": 1, "impression_click": 0 })
            });
            let authHeader = { 'Authentication': smeReqHeader.Authentication };
            let smeApiResponse = smePostAjaxApiFn(url, smePostData, authHeader);
        }
    }
}

async function smeCartCall(initCart = 0) {
    let url = 'https://' + smeSiteDomain + window.Shopify.routes.root + 'cart?view=salemaximize&v=454';

    let smeApiResponse = await smeGetAjaxApiFn(url);
    if (smeApiResponse) {

        smeGlobalCartData = smeApiResponse;
        smeCartData = smeGlobalCartData.smeCartData;



        newsmeShopifyCouponGet();
        if (smeCartData.items.length > 0) {
            document.querySelector('.smeCartEmptyMainDiv').style.display = 'none';
            if (initCart !== 1) {

                if ((check_user_shop_plan.includes(sme_gm_dataobj.shop_plan) && sme_gm_dataobj.is_charge_approve == 1) || check_devlopment_plan.includes(sme_gm_dataobj.shop_plan) || APP_PLAN_STATUS == 0) {
                    document.querySelector('.GScartBG').classList.remove('empty_cart_div');

                    document.querySelector('.cart_Announcement_bar_title_text').style.visibility = 'visible';
                    document.querySelector(".widget2 .smeCartFotter").style.visibility = 'visible';

                    var sme_gm_cart_widget = JSON.parse(sme_gm_dataobj.cart_widget);
                    var tempSecId = Object.keys(sme_gm_cart_widget)[0];
                    var upsell_settings = JSON.parse(sme_gm_cart_widget[tempSecId].upsell_settings);

                    cartSettings = sme_gm_cart_widget[tempSecId];

                    if (upsell_settings[0].is_enable === '0') {
                        smeCartUpsellInit();
                        document.querySelector(".cart_widgetUpsellProductBlock").style.visibility = 'visible';
                    }

                    let smeProductData = smeCartData.items;
                    let smeCartProdHtml = '';

                    var cart_color_setting_data = JSON.parse(sme_gm_dataobj.general_setting);

                    smeCartColorSettings = JSON.parse(cart_color_setting_data.cart_color_setting);

                    smeCartSettingsObj = cartSettings;
                    let smeCartSettings = { ...cartSettings, ...smeCartColorSettings };

                    smeProductData.forEach((val, key) => {

                        if (smetemplates == 1) {
                            smeCartProdHtml += smeCartProdHtmlFn2(val, smeCartSettings);
                        } else {
                            smeCartProdHtml += smeCartProdHtmlFn(val, smeCartSettings, key);
                        }
                        smeJdgmReview(val.handle, val.product_id);
                    });

                    if (document.querySelector('.cartEmptyLoader')) {
                        document.querySelector('.cartEmptyLoader').remove();
                    }

                    document.querySelector('.cartItemMainBlock').innerHTML = smeCartProdHtml;

                    let sme_gm_upsell_widget = JSON.parse(sme_gm_dataobj.upsell_widget);
                    let upsell_tempSecId = Object.keys(sme_gm_upsell_widget);
                    if (sme_gm_upsell_widget[upsell_tempSecId].is_active === '0') {
                        smeUpsellInit();
                        document.querySelector('.widget3').style.visibility = 'visible';
                        document.querySelector(".upsell_widgetUpsellProductBlock").style.display = 'flex';
                    }

                    let sme_gm_recommendation_widget = JSON.parse(sme_gm_dataobj.recommendation_widget);
                    let recommendation_tempSecId = Object.keys(sme_gm_recommendation_widget);
                    if (sme_gm_recommendation_widget[recommendation_tempSecId].is_active === '0') {
                        smeRecommendationInit();
                        document.querySelector('.widget4').style.visibility = 'visible';
                    }

                    var sme_gm_checkout_widget = JSON.parse(sme_gm_dataobj.checkout_widget);
                    var tempSecId = Object.keys(sme_gm_checkout_widget)[0];
                    var checkout_upsell_settings = JSON.parse(sme_gm_checkout_widget[tempSecId].upsell_settings);
                    if (sme_gm_checkout_widget[tempSecId].is_enable_payment_gateway === '0' && amecheckouadinalpaymentbutton) {
                        amecheckouadinalpaymentbutton = false;
                        smepayment_button_get_data();
                    }

                    if (checkout_upsell_settings[0].is_enable === '0') {
                        smeCheckoutUpsellInit();
                        document.querySelector('.widget6').style.display = 'block';
                        document.querySelector('.widget6').style.visibility = 'visible';
                        document.querySelector(".checkout_widgetUpsellProductBlock").style.visibility = 'visible';
                    }
                } else {
                    var sme_gm_cart_widget = JSON.parse(sme_gm_dataobj.cart_widget);
                    var tempSecId = Object.keys(sme_gm_cart_widget)[0];
                    var upsell_settings = JSON.parse(sme_gm_cart_widget[tempSecId].upsell_settings);

                    cartSettings = sme_gm_cart_widget[tempSecId];
                    let smeProductData = smeCartData.items;
                    let smeCartProdHtml = '';

                    var cart_color_setting_data = JSON.parse(sme_gm_dataobj.general_setting);

                    smeCartColorSettings = JSON.parse(cart_color_setting_data.cart_color_setting);

                    smeCartSettingsObj = cartSettings;
                    let smeCartSettings = { ...cartSettings, ...smeCartColorSettings };
                    smeProductData.forEach((val, key) => {
                        if (smetemplates == 1) {
                            smeCartProdHtml += smeCartProdHtmlFn2(val, smeCartSettings);
                        } else {
                            smeCartProdHtml += smeCartProdHtmlFn(val, smeCartSettings, key);
                        }

                        smeJdgmReview(val.handle, val.product_id);
                    });

                    if (document.querySelector('.cartEmptyLoader')) {
                        document.querySelector('.cartEmptyLoader').remove();
                    }
                    document.querySelector('.cartItemMainBlock').innerHTML = smeCartProdHtml;
                }
            } else {


                var sme_gm_cart_widget = JSON.parse(sme_gm_dataobj.cart_widget);
                var tempSecId = Object.keys(sme_gm_cart_widget)[0];
                var upsell_settings = JSON.parse(sme_gm_cart_widget[tempSecId].upsell_settings);

                cartSettings = sme_gm_cart_widget[tempSecId];
                let smeProductData = smeCartData.items;
                let smeCartProdHtml = '';

                var cart_color_setting_data = JSON.parse(sme_gm_dataobj.general_setting);

                smeCartColorSettings = JSON.parse(cart_color_setting_data.cart_color_setting);

                smeCartSettingsObj = cartSettings;
                let smeCartSettings = { ...cartSettings, ...smeCartColorSettings };
                smeProductData.forEach((val, key) => {
                    if (smetemplates == 1) {
                        smeCartProdHtml += smeCartProdHtmlFn2(val, smeCartSettings);
                    } else {
                        smeCartProdHtml += smeCartProdHtmlFn(val, smeCartSettings, key);
                    }

                    smeJdgmReview(val.handle, val.product_id);
                });

                if (document.querySelector('.cartEmptyLoader')) {
                    document.querySelector('.cartEmptyLoader').remove();
                }
                document.querySelector('.cartItemMainBlock').innerHTML = smeCartProdHtml;


            }

            if (isswatchproductcall) {
                swatchProductDefaultOn();
            }
            if (!timerbarcall) {
                smeDiscountBarTimer(0, 0);
            }
            smeDiscountInit();
        } else {
            smeCartClean();
        }
    }
}


function smeCartProdHtmlFn(cartProdData, smeCartSettings, newkey) {

    let productid = cartProdData.id;
    let productadditionalInfo = smeGlobalCartData[productid];
    let smeProdImg = (cartProdData.image != null) ? cartProdData.image : smeAppUrl + 'assets/img/placeholder.png';
    let variantData = productadditionalInfo['variants'];

    let variantkey = variantData.findIndex(function (obj) {
        return obj.id == cartProdData.variant_id;
    });
    let selectedVariantData = variantData[variantkey];

    let isShowComparePrice = (smeCartSettings.is_show_compare_price == 0) ? 'block' : 'none';

    if (cartProdData.discounted_price || cartProdData.discounted_price == 0) {
        var sourcePrice = parseFloat(cartProdData.discounted_price) / 100;
    } else {
        var sourcePrice = parseFloat(cartProdData.original_price) / 100;
    }

    let finalComparePrice = selectedVariantData.compare_at_price !== null && selectedVariantData.compare_at_price !== 0 ? parseFloat(selectedVariantData.compare_at_price) / 100 : parseFloat(cartProdData.original_price / 100);
    let new_comparePrice = (finalComparePrice !== sourcePrice) ? finalComparePrice : isShowComparePrice = 'none';
    if (Shopify.shop === 'fd9769-34.myshopify.com') {
        var display_none = 'display: none !important;';
    } else {
        var display_none = '';
    }

    var comparePrice = '<span class="salemaximize__compare-price-cart smeComparePrice" style="color:' + smeCartSettings.compare_price_color + ';display:' + isShowComparePrice + ';">' + smeCurrencyFormate + parseFloat(finalComparePrice).toFixed(2) + '</span>';

    var price = smeCurrencyFormate + parseFloat(sourcePrice).toFixed(2);

    let variantTitle = (selectedVariantData.title != "Default Title") ? '<div class="salemaximize__product-selected-varient-cart" style="color:' + smeCartSettings.box_text_color + '"><p>' + selectedVariantData.title + '</p></div>' : '';
    let freeProductClass = (cartProdData.properties && cartProdData.properties.__smeProductDiscountType && cartProdData.properties.__smeProductDiscountType == "smeFreeProduct") ? cartProdData.properties.__smeProductDiscountType : '';
    let freeProduct_discount_data = (cartProdData.properties && cartProdData.properties.__smeDiscountTag) ? 'data-DiscountTag="' + cartProdData.properties.__smeDiscountTag + '"' : '';
    let productRemoveIcon = '';
    var disabled_class = '';
    if (freeProductClass) {
        disabled_class = "disabled";
        let variants = smeGetVariantsBox(variantData, selectedVariantData.id, cartProdData.featured_image);
        if (variantData.length > 1) {
            variantTitle = '<div class="salemaximize__recommandation-product-varients salemaximize__product-varients-cart freeProdVarient" style="border-color:' + smeCartSettings.box_border_color + '">\n' +
                '               <select class="salemaximize__product-varients-cart" data-discount-type="smeFreeProduct" data-discount-val="' + cartProdData.properties.__smeProductDiscount + '" data-variant-id="' + cartProdData.variant_id + '" onchange="smeChangeVariant(this, 1)" name="" style="color:' + smeCartSettings.box_text_color + '">\n' +
                '                  ' + variants + '\n' +
                '               </select>\n' +
                '           </div>';
        }
    } else {
        disabled_class = '';
        productRemoveIcon = '<span class="salemaximize__product-remove-icon cartProdRemove" data-product-id="' + cartProdData.product_id + '" data-variant-id="' + cartProdData.variant_id + '"  data-price="' + sourcePrice + '" data-qty="' + cartProdData.quantity + '" onclick="smeCartProdRemove(this)">\
                    <svg xmlns="http://www.w3.org/2000/svg" class="salemaximize__product-remove-icon" viewBox="0 0 10 11" fill="'+ smeCartSettings.delete_icon_color + '">\
                      <path d="M3.59961 1.75908C3.59961 0.988381 4.22611 0.363281 4.99961 0.363281C5.77311 0.363281 6.39961 0.988381 6.39961 1.75908H9.19961C9.58601 1.75908 9.89961 2.07128 9.89961 2.45698C9.89961 2.84198 9.58601 3.15488 9.19961 3.15488H0.799609C0.413209 3.15488 0.0996094 2.84198 0.0996094 2.45698C0.0996094 2.07198 0.413209 1.75908 0.799609 1.75908H3.59961ZM1.49961 9.11888V4.56328H2.89961V9.11888C2.89998 9.21146 2.93702 9.30013 3.00262 9.36546C3.06821 9.4308 3.15703 9.46748 3.24961 9.46748H4.29961V4.56328H5.69961V9.46748H6.74961C6.84219 9.46748 6.93101 9.4308 6.9966 9.36546C7.0622 9.30013 7.09924 9.21146 7.09961 9.11888V4.56328H8.49961V9.11888C8.49924 9.34833 8.45368 9.57545 8.36554 9.78729C8.2774 9.99913 8.14839 10.1915 7.98589 10.3535C7.82338 10.5155 7.63057 10.6439 7.41845 10.7314C7.20633 10.8188 6.97905 10.8636 6.74961 10.8633H3.24961C2.28361 10.8633 1.49961 10.0821 1.49961 9.11888Z"></path>\
                    </svg>\
                </span>';
    }
    productadditionalInfo['sku'] = cartProdData.sku;
    let reviewHtml = smeReviewFn(cartProdData.product_id, cartProdData.handle, '', productadditionalInfo);

    var reviewHtml_calss = '';

    if (reviewHtml == '') {
        reviewHtml_calss = '';
    } else {
        reviewHtml_calss = 'salemaximize__star-review-cart salemaximize__m-0-cart';
    }

    let cartQtyHtml = '';
    let swatchProductClass = "";
    let swatchProductShow = '';

    var sme_gm_checkout_widget = JSON.parse(sme_gm_dataobj.checkout_widget);
    var tempSecId = Object.keys(sme_gm_checkout_widget)[0];
    var upsell_settings = JSON.parse(sme_gm_checkout_widget[tempSecId].upsell_settings);

    if (cartProdData.properties && cartProdData.properties.__smeSwatchProduct) {

        if (document.querySelector('.shipping_product_smeSwitchProduct')) {
            document.querySelector('.shipping_product_smeSwitchProduct').checked = true;
        }
        if (document.querySelector('.gift_product_smeSwitchProduct')) {
            document.querySelector('.gift_product_smeSwitchProduct').checked = true;
        }

        swatchProductShow = 'display:none;';
        swatchProductClass = "isSwatchProduct";

        if ((upsell_settings[0].upsell_type == '0' && upsell_settings[0].is_shipping_show_cart && upsell_settings[0].is_shipping_show_cart === '0') || (upsell_settings[0].upsell_type == '1' && upsell_settings[0].is_gift_show_cart && upsell_settings[0].is_gift_show_cart === '0')) {
            swatchProductShow = 'display:flex;';
        }
        cartQtyHtml = '<div class="salemaximize__product-counter smeQtyBoxBlock">\
            <button class="salemaximize__minus-btn" disabled data-variant-id="' + cartProdData.variant_id + '" style="color:' + smeCartSettings.box_text_color + '; border-color:' + smeCartSettings.box_border_color + ';' + display_none + '">-</button>\
            <input type="number" min="0" disabled data-variant-id="' + cartProdData.variant_id + '" value="' + cartProdData.quantity + '" class="salemaximize__input-number smeCartQty" style="color:' + smeCartSettings.box_text_color + '; border-color:' + smeCartSettings.box_border_color + ';" />\
            <button class="salemaximize__puls-btn" disabled data-variant-id="' + cartProdData.variant_id + '" style="color:' + smeCartSettings.box_text_color + '; border-color:' + smeCartSettings.box_border_color + ';' + display_none + '">+</button>\
        </div>';
    } else {
        cartQtyHtml = '<div class="salemaximize__product-counter smeQtyBoxBlock">\
            <button class="salemaximize__minus-btn smeQtyMinus" data-variant-id="' + cartProdData.variant_id + '" data-max-qty="' + cartProdData.quantity + '" onclick="smeAddRemoveQuantity(this, -1);" style="color:' + smeCartSettings.box_text_color + '; border-color:' + smeCartSettings.box_border_color + ';' + display_none + '">-</button>\
            <input type="number" min="0" value="'+ cartProdData.quantity + '" data-variant-id="' + cartProdData.variant_id + '" data-max-qty="' + cartProdData.quantity + '" onfocus="smeAddRemoveQuantity(this,0)" onfocusout="smeAddRemoveQuantity(this, 2)" class="salemaximize__input-number smeCartQty" style="color:' + smeCartSettings.box_text_color + '; border-color:' + smeCartSettings.box_border_color + ';" ' + disabled_class + ' />\
            <button class="salemaximize__puls-btn smeQtyPlus" data-variant-id="' + cartProdData.variant_id + '" data-max-qty="' + cartProdData.quantity + '" onclick="smeAddRemoveQuantity(this, 1);" style="color:' + smeCartSettings.box_text_color + '; border-color:' + smeCartSettings.box_border_color + ';' + display_none + '">+</button>\
        </div>';
    }
    var styletag = '';
    var smebottomcartitmes = smeCartData.items[smeCartData.items.length - 1];
    var smebottomcartitmescount = smeCartData.items.length - 1;
    var hasSwatchProductbottomline = Object.keys(smebottomcartitmes.properties).find(key => key === '__smeSwatchProduct');

    if ((hasSwatchProductbottomline !== undefined) && ((upsell_settings[0].upsell_type == '0' && upsell_settings[0].is_shipping_show_cart && upsell_settings[0].is_shipping_show_cart === '1') || (upsell_settings[0].upsell_type == '1' && upsell_settings[0].is_gift_show_cart && upsell_settings[0].is_gift_show_cart === '1'))) {

        var smecartbottomnewlenght = smebottomcartitmescount - 1;
    } else {
        var smecartbottomnewlenght = smebottomcartitmescount;
    }

    if (newkey === smecartbottomnewlenght) {
        if (newkey === 0) {
            styletag = '';
        } else {
            styletag = 'padding-bottom: 5px; padding-top: 15px;';
        }

    } else {
        if (newkey === 0) {
            styletag = 'padding-bottom: 15px; padding-top: 5px; border-bottom: 1px solid #EAEAEA;';
        } else {
            styletag = 'padding-bottom: 15px; padding-top: 15px; border-bottom: 1px solid #EAEAEA;';
        }

    }
    let cartprodHtml = '\
        <div class="salemaximize__cart-item-cart salemaximizeProductDiv smeCartLineItem '+ freeProductClass + ' ' + swatchProductClass + '" ' + freeProduct_discount_data + ' data-product-id="' + cartProdData.product_id + '" data-variant-id="' + selectedVariantData.id + '" style="' + swatchProductShow + styletag + '">\
            <div class="salemaximize__product-detail">\
                <div class="salemaximize__product-image-div-cart">\
                    <img src="'+ smeProdImg + '" class="salemaximize__product-image-cart salemaximizeProductImg" draggable="false" />\
                </div>\
                <div>\
                    <div class="salemaximize__product-name-cart" style="color:'+ smeCartSettings.product_title_color + '"><a href="https://' + smeShop + '/products/' + cartProdData.handle + '" target="_blank" class="salemaximize__product_redirect_link" title="' + cartProdData.title + '">' + cartProdData.product_title + '</a></div>\
                    <div class="salemaximize__product-buttom-section">\
                        <div>\
                            <div class="salemaximize__product-info-cart">\
                                '+ variantTitle + '\
                                <div class="salemaximize__product-price-cart">\
                                    '+ comparePrice + '\
                                    <span class="salemaximize__selling-price-cart smeSellingPrice notranslate" data-product-selling-price="'+ price + '" style="color:' + smeCartSettings.selling_price_color + '">' + price + '</span>\
                                </div>\
                                <div class="'+ reviewHtml_calss + '">\
                                    '+ reviewHtml + '\
                                </div>\
                                <div class="salemaximize__line-discount-tag-block smeLineDiscountTagBlock"></div>\
                            </div>\
                            <div class="salemaximize__product-action-cart '+ disabled_class + '">\
                                '+ productRemoveIcon + '\
                                '+ cartQtyHtml + '\
                            </div>\
                        </div>\
                        <div>\
                        </div>\
                    </div>\
                </div>\
            </div>\
        </div>';
    return cartprodHtml;
}

function smeCartProdHtmlFn2(cartProdData, smeCartSettings) {

    let productid = cartProdData.id;
    let productadditionalInfo = smeGlobalCartData[productid];
    let smeProdImg = (cartProdData.image != null) ? cartProdData.image : smeAppUrl + 'assets/img/placeholder.png';
    let variantData = productadditionalInfo['variants'];

    let variantkey = variantData.findIndex(function (obj) {
        return obj.id == cartProdData.variant_id;
    });
    let selectedVariantData = variantData[variantkey];

    let isShowComparePrice = (smeCartSettings.is_show_compare_price == 0) ? 'block' : 'none';

    if (cartProdData.discounted_price || cartProdData.discounted_price == 0) {
        var sourcePrice = parseFloat(cartProdData.discounted_price) / 100;
    } else {
        var sourcePrice = parseFloat(cartProdData.original_price) / 100;
    }

    let finalComparePrice = selectedVariantData.compare_at_price !== null && selectedVariantData.compare_at_price !== 0 ? parseFloat(selectedVariantData.compare_at_price) / 100 : parseFloat(cartProdData.original_price / 100);
    let new_comparePrice = (finalComparePrice !== sourcePrice) ? finalComparePrice : isShowComparePrice = 'none';
    if (Shopify.shop === 'fd9769-34.myshopify.com') {
        var display_none = 'display: none !important;';
    } else {
        var display_none = '';
    }

    var comparePrice = '<span class="salemaximize__compare-price smeComparePrice" style="color:' + smeCartSettings.compare_price_color + ';display:' + isShowComparePrice + ';">' + smeCurrencyFormate + parseFloat(finalComparePrice).toFixed(2) + '</span>';

    var price = smeCurrencyFormate + parseFloat(sourcePrice).toFixed(2);

    let variantTitle = (selectedVariantData.title != "Default Title") ? '<div class="salemaximize__product-selected-varient" style="color:' + smeCartSettings.box_text_color + '"><p>' + selectedVariantData.title + '</p></div>' : '';
    let freeProductClass = (cartProdData.properties && cartProdData.properties.__smeProductDiscountType && cartProdData.properties.__smeProductDiscountType == "smeFreeProduct") ? cartProdData.properties.__smeProductDiscountType : '';
    let freeProduct_discount_data = (cartProdData.properties && cartProdData.properties.__smeDiscountTag) ? 'data-DiscountTag="' + cartProdData.properties.__smeDiscountTag + '"' : '';
    let productRemoveIcon = '';
    var disabled_class = '';
    if (freeProductClass) {
        disabled_class = "disabled";
        let variants = smeGetVariantsBox(variantData, selectedVariantData.id, cartProdData.featured_image);
        if (variantData.length > 1) {
            variantTitle = '<div class="salemaximize__recommandation-product-varients salemaximize__product-varients freeProdVarient" style="border-color:' + smeCartSettings.box_border_color + '">\n' +
                '               <select class="salemaximize__product-varients" data-discount-type="smeFreeProduct" data-discount-val="' + cartProdData.properties.__smeProductDiscount + '" data-variant-id="' + cartProdData.variant_id + '" onchange="smeChangeVariant(this, 1)" name="" style="color:' + smeCartSettings.box_text_color + '">\n' +
                '                  ' + variants + '\n' +
                '               </select>\n' +
                '           </div>';
        }
    } else {
        disabled_class = '';
        productRemoveIcon = '<span class="salemaximize__product-remove-icon cartProdRemove" data-product-id="' + cartProdData.product_id + '" data-variant-id="' + cartProdData.variant_id + '"  data-price="' + sourcePrice + '" data-qty="' + cartProdData.quantity + '" onclick="smeCartProdRemove(this)">\
                    <svg xmlns="http://www.w3.org/2000/svg" class="salemaximize__product-remove-icon" viewBox="0 0 10 11" fill="'+ smeCartSettings.delete_icon_color + '">\
                      <path d="M3.59961 1.75908C3.59961 0.988381 4.22611 0.363281 4.99961 0.363281C5.77311 0.363281 6.39961 0.988381 6.39961 1.75908H9.19961C9.58601 1.75908 9.89961 2.07128 9.89961 2.45698C9.89961 2.84198 9.58601 3.15488 9.19961 3.15488H0.799609C0.413209 3.15488 0.0996094 2.84198 0.0996094 2.45698C0.0996094 2.07198 0.413209 1.75908 0.799609 1.75908H3.59961ZM1.49961 9.11888V4.56328H2.89961V9.11888C2.89998 9.21146 2.93702 9.30013 3.00262 9.36546C3.06821 9.4308 3.15703 9.46748 3.24961 9.46748H4.29961V4.56328H5.69961V9.46748H6.74961C6.84219 9.46748 6.93101 9.4308 6.9966 9.36546C7.0622 9.30013 7.09924 9.21146 7.09961 9.11888V4.56328H8.49961V9.11888C8.49924 9.34833 8.45368 9.57545 8.36554 9.78729C8.2774 9.99913 8.14839 10.1915 7.98589 10.3535C7.82338 10.5155 7.63057 10.6439 7.41845 10.7314C7.20633 10.8188 6.97905 10.8636 6.74961 10.8633H3.24961C2.28361 10.8633 1.49961 10.0821 1.49961 9.11888Z"></path>\
                    </svg>\
                </span>';
    }
    productadditionalInfo['sku'] = cartProdData.sku;
    let reviewHtml = smeReviewFn(cartProdData.product_id, cartProdData.handle, '', productadditionalInfo);

    var reviewHtml_calss = '';

    if (reviewHtml == '') {
        reviewHtml_calss = '';
    } else {
        reviewHtml_calss = 'salemaximize__star-review-cart salemaximize__m-0-cart';
    }

    let cartQtyHtml = '';
    let swatchProductClass = "";
    let swatchProductShow = '';
    if (cartProdData.properties && cartProdData.properties.__smeSwatchProduct) {
        swatchProductShow = 'display:none';
        swatchProductClass = "isSwatchProduct";


        var sme_gm_checkout_widget = JSON.parse(sme_gm_dataobj.checkout_widget);
        var tempSecId = Object.keys(sme_gm_checkout_widget)[0];
        var upsell_settings = JSON.parse(sme_gm_checkout_widget[tempSecId].upsell_settings);

        if (upsell_settings[0].upsell_type == '0' && upsell_settings[0].is_shipping_show_cart && upsell_settings[0].is_shipping_show_cart === '0') {
            swatchProductShow = 'display:flex';
        } else if (upsell_settings[0].upsell_type == '1' && upsell_settings[0].is_gift_show_cart && upsell_settings[0].is_gift_show_cart === '0') {
            swatchProductShow = 'display:flex';
        }
        cartQtyHtml = '<div class="salemaximize__product-counter smeQtyBoxBlock">\
            <button class="salemaximize__minus-btn" disabled data-variant-id="' + cartProdData.variant_id + '" style="color:' + smeCartSettings.box_text_color + '; border-color:' + smeCartSettings.box_border_color + ';' + display_none + '">-</button>\
            <input type="number" min="0" disabled data-variant-id="' + cartProdData.variant_id + '" value="' + cartProdData.quantity + '" class="salemaximize__input-number smeCartQty" style="color:' + smeCartSettings.box_text_color + '; border-color:' + smeCartSettings.box_border_color + ';" />\
            <button class="salemaximize__puls-btn" disabled data-variant-id="' + cartProdData.variant_id + '" style="color:' + smeCartSettings.box_text_color + '; border-color:' + smeCartSettings.box_border_color + ';' + display_none + '">+</button>\
        </div>';
    } else {
        cartQtyHtml = '<div class="salemaximize__product-counter smeQtyBoxBlock">\
            <button class="salemaximize__minus-btn smeQtyMinus" data-variant-id="' + cartProdData.variant_id + '" data-max-qty="' + cartProdData.quantity + '" onclick="smeAddRemoveQuantity(this, -1);" style="color:' + smeCartSettings.box_text_color + '; border-color:' + smeCartSettings.box_border_color + ';' + display_none + '">-</button>\
            <input type="number" min="0" value="'+ cartProdData.quantity + '" data-variant-id="' + cartProdData.variant_id + '" data-max-qty="' + cartProdData.quantity + '" onfocus="smeAddRemoveQuantity(this,0)" onfocusout="smeAddRemoveQuantity(this, 2)" class="salemaximize__input-number smeCartQty" style="color:' + smeCartSettings.box_text_color + '; border-color:' + smeCartSettings.box_border_color + ';" ' + disabled_class + ' />\
            <button class="salemaximize__puls-btn smeQtyPlus" data-variant-id="' + cartProdData.variant_id + '" data-max-qty="' + cartProdData.quantity + '" onclick="smeAddRemoveQuantity(this, 1);" style="color:' + smeCartSettings.box_text_color + '; border-color:' + smeCartSettings.box_border_color + ';' + display_none + '">+</button>\
        </div>';
    }

    let cartprodHtml = '\
        <div class="salemaximize__cart-item salemaximizeProductDiv smeCartLineItem '+ freeProductClass + ' ' + swatchProductClass + '" ' + freeProduct_discount_data + ' data-product-id="' + cartProdData.product_id + '" data-variant-id="' + selectedVariantData.id + '" style="' + swatchProductShow + '">\
            <div class="salemaximize__product-detail">\
                <div class="salemaximize__product-image-div">\
                    <img src="'+ smeProdImg + '" class="salemaximize__product-image salemaximizeProductImg" draggable="false" />\
                </div>\
                <div class="salemaximize__product-info">\
                    <div class="salemaximize__product-name" style="color:'+ smeCartSettings.product_title_color + '"><a href="https://' + smeShop + '/products/' + cartProdData.handle + '" target="_blank" class="salemaximize__product_redirect_link" title="' + cartProdData.title + '">' + cartProdData.product_title + '</a></div>\
                    '+ variantTitle + '\
                    <div class="salemaximize__product-price">\
                        '+ comparePrice + '\
                        <span class="salemaximize__selling-price smeSellingPrice notranslate" data-product-selling-price="'+ price + '" style="color:' + smeCartSettings.selling_price_color + '">' + price + '</span>\
                    </div>\
                    <div class="'+ reviewHtml_calss + '">\
                        '+ reviewHtml + '\
                    </div>\
                    <div class="salemaximize__line-discount-tag-block smeLineDiscountTagBlock"></div>\
                </div>\
            </div>\
            <div class="salemaximize__product-action '+ disabled_class + '">\
                '+ productRemoveIcon + '\
                '+ cartQtyHtml + '\
            </div>\
        </div>';
    return cartprodHtml;
}

function smeReviewFn(productId, productHandle, html, productData) {
    const settingsData = (sme_gm_dataobj.settings) ? JSON.parse(sme_gm_dataobj.settings) : '';
    const reviewSetting = (settingsData && settingsData.review_setting) ? (typeof settingsData.review_setting == 'string') ? JSON.parse(settingsData.review_setting) : settingsData.review_setting : '';
    const reviewType = parseInt(reviewSetting.review_type);
    let productSku = [];
    productSku.push(productData.handle);
    if (reviewType === 6 && productData && productData.variants) {
        productData.variants.map((item) => {
            (item.sku != null) ? productSku.push(item.sku) : '';
            (item.id != null) ? productSku.push(item.id) : '';
        });
    }
    let join_sku = productSku.join(';');
    let reviewObj = {
        '0': '',
        '1': `<div class="smejudgemeRating jdgm-widget jdgm-review-widget jdgm-preview-badge jdgm-preview-badge--with-link jdgm--done-setup" data-id="${productId}" data-template="manual-installation"></div>`,
        // '2': `<div class="loox-rating looxRating" data-fetch data-id="${productId}" style="${(reviewSetting.review_count_option == 1) ? 'color:' + reviewSetting.review_count_color : ''};"></div>`,
        '2': `<div class="loox-rating looxRating" data-fetch data-id="${productId}"></div>`,
        '5': `<div class='alireviews-review-star-rating' product-id='${productId}'>${html}</div>`,
        '6': `<div class="ruk_rating_snippet" data-sku="${join_sku}"></div>`,
        '7': `<span class="shopify-product-reviews-badge" data-id="${productId}"></span>`,
        '8': `<div class="yotpo bottomLine" data-product-id="${productId}"></div>`,
    }

    return reviewObj[reviewType];
}

function smeJdgmReview(producthandle, productId) {
    smeYotpoStarReview();
    smeReviewsioStarReview();
    smeAliReviewInitFn();
    let checkJdgm = setInterval(function () {
        if (window.jdgm && jdgm.batchRenderBadges && document.querySelectorAll('.smejudgemeRating[data-id="' + productId + '"]').length > 0) {
            let productDetailsObj = [];
            productDetailsObj[0] = {
                productHandle: producthandle,
                badgePlaceholder: ".smejudgemeRating[data-id=" + productId + "]"
            };

            jdgm.batchRenderBadges(productDetailsObj)
            document.querySelector('.smejudgemeRating[data-id="' + productId + '"]').style.display = 'block';
            clearInterval(checkJdgm);
        }
    }, 100)
}

function smeYotpoStarReview() {
    if (typeof yotpo !== 'undefined') {
        var smeYotpoApi = new Yotpo.API(yotpo);
        if (typeof smeYotpoApi.refreshWidgets === "function") {
            smeYotpoApi.refreshWidgets();
        }
    }
}

function smeReviewsioStarReview() {
    typeof ratingSnippet == 'function' && ratingSnippet("ruk_rating_snippet", {
        store: smeSiteDomain,
        color: "#fffff",
        linebreak: false,
        text: "Reviews"
    });
}

async function smeAliReviewInitFn() {
    if (document.querySelector(".__salemaximize .alireviews-review-star-rating") && document.querySelectorAll(".__salemaximize .alireviews-review-star-rating").length > 0) {
        let productIds = [];

        document.querySelectorAll(".__salemaximize .alireviews-review-star-rating").forEach(function (element) {
            productIds.push(element.getAttribute('product-id'));
        });
        productIds = [...new Set(productIds)];
        let productUrl = 'https://widget-hub-api.alireviews.io/api/storefront/star-rating?myshopify_domain=' + smeShop + '&product_ids=' + productIds.join(',');
        let smeApiResponseData = await smeGetAjaxApiFn(productUrl);
        var aliReviewCss;
        if (smeApiResponseData.status) {
            if (document.querySelector('.ali-widget-star-rating .alireviews-review-star-rating')) {
                aliReviewCss = document.querySelector('.ali-widget-star-rating .alireviews-review-star-rating').getAttribute('style');
            } else {
                document.querySelectorAll('.alireviews-review-star-rating').forEach(function (event) {
                    aliReviewCss = event.getAttribute('style');
                });
            }


            Object.entries(smeApiResponseData.data).forEach(([key, val]) => {
                let product_key = key; // Assuming the API returns `product_id`
                let ratingVal = parseInt(val.average_rating);
                let rattingBlock = '';
                if (val.review_number > 0) {
                    for (let i = 0; i < 5; i++) {
                        let rateFill = (ratingVal <= i) ? 'style="width:0%"' : '';
                        rattingBlock += `
                            <div class="alr-wh-star-rating-icon">
                                <div class="alr-wh-star-rating-icon-bound">
                                    <svg viewBox="0 0 17 16" aria-hidden="true">
                                        <path fill="currentColor" d="M16.6744 7.11837C16.9845 6.8136 17.0731 6.45442 16.9402 6.04082C16.8073 5.62721 16.5193 5.38776 16.0762 5.32245L11.4906 4.66939L9.46364 0.587755C9.26427 0.195916 8.94306 0 8.5 0C8.05694 0 7.73573 0.195916 7.53636 0.587755L5.50938 4.66939L0.923769 5.32245C0.480712 5.38776 0.19273 5.62721 0.0598129 6.04082C-0.0731041 6.45442 0.0155059 6.8136 0.325646 7.11837L3.64855 10.2857L2.85106 14.7918C2.7846 15.2054 2.92859 15.5429 3.28303 15.8041C3.46026 15.9347 3.67071 16 3.91439 16C4.09161 16 4.25775 15.9565 4.41282 15.8694L8.5 13.7469L12.5872 15.8694C12.7422 15.9565 12.9084 16 13.0856 16C13.3293 16 13.5397 15.9347 13.717 15.8041C14.0714 15.5429 14.2154 15.2054 14.1489 14.7918L13.3514 10.2857L16.6744 7.11837Z"></path>
                                    </svg>
                                </div>
                                <div class="alr-wh-star-rating-icon-fill" ${rateFill}>
                                    <svg viewBox="0 0 17 16" aria-hidden="true">
                                        <path fill="currentColor" d="M16.6744 7.11837C16.9845 6.8136 17.0731 6.45442 16.9402 6.04082C16.8073 5.62721 16.5193 5.38776 16.0762 5.32245L11.4906 4.66939L9.46364 0.587755C9.26427 0.195916 8.94306 0 8.5 0C8.05694 0 7.73573 0.195916 7.53636 0.587755L5.50938 4.66939L0.923769 5.32245C0.480712 5.38776 0.19273 5.62721 0.0598129 6.04082C-0.0731041 6.45442 0.0155059 6.8136 0.325646 7.11837L3.64855 10.2857L2.85106 14.7918C2.7846 15.2054 2.92859 15.5429 3.28303 15.8041C3.46026 15.9347 3.67071 16 3.91439 16C4.09161 16 4.25775 15.9565 4.41282 15.8694L8.5 13.7469L12.5872 15.8694C12.7422 15.9565 12.9084 16 13.0856 16C13.3293 16 13.5397 15.9347 13.717 15.8041C14.0714 15.5429 14.2154 15.2054 14.1489 14.7918L13.3514 10.2857L16.6744 7.11837Z"></path>
                                    </svg>
                                </div>
                            </div>`;
                    }
                    var rattingBlock_text = `<div class="alr-wh-star-rating-average-number">${ratingVal}.0 (${val.review_number} reviews)</div>`;

                    let reviewContent = `
                    <div class="alr-wh-star-rating smeCustomReviewSet">
                        <div class="alr-wh-star-rating-list">
                            ${rattingBlock}
                        </div>
                        <div class="alr-wh-star-rating-list">
                        ${rattingBlock_text}
                        </div>
                    </div>`;

                    let targetElement = document.querySelectorAll('.__salemaximize .alireviews-review-star-rating[product-id="' + product_key + '"]');
                    if (targetElement) {
                        targetElement.forEach(function (newtargetElement) {
                            newtargetElement.innerHTML = reviewContent;
                            newtargetElement.setAttribute('style', aliReviewCss);
                        });

                    }

                }
            });
        }
    }
}


var smeCartTotalAmount = 0;
async function smeDiscountInit(cartData = {}) {
    var smeCartDiscount = total_allocated_amount = lineordersmeCartDiscount = smeCartTotalAmount = discountVal_data_value = smeCartTotalPrice = ordersmeCartDiscount = salemax_smeCartDiscount = progrses_bar_discount = 0.00;

    cartData = smeCartData;
    let smeDiscounttagHtml = '';
    let smeTempIdArry = [];
    let smeDiscounttag = [];
    let progress_variantid = [];
    let progressbarminusdiscount = 0;
    let generalDiscount = smeGeneralDiscountGet(smeLocalStorageList.smeGeneralDiscount);

    var smeLineDiscountTagBlock = document.querySelectorAll('.smeLineDiscountTagBlock');
    if (smeLineDiscountTagBlock) {
        smeLineDiscountTagBlock.forEach(function (element) {
            element.innerHTML = '';
        });
    }

    if (cartData.items.length > 0) {
        var progressBarFreeProdLen = lineAutoDiscountStatus = 0;
        smeProgressBarCartItem = cartData.item_count;
        cartData.items.forEach(function (productData, index) {
            var product_discount_data = 0.00;
            if (productData.properties.__smeProductDiscountType && productData.properties.__smeProductDiscountType != 0) {
                let itemDiscountType = productData.properties.__smeProductDiscountType;
                var itemDiscount = (itemDiscountType != 3) ? parseFloat(productData.properties.__smeProductDiscount) * parseInt(productData.quantity) : parseFloat(productData.properties.__smeProductDiscount);
                let discountDataObj = {};
                if (productData.properties.__smeProductDiscountType === '3') {
                    let newvalue = productData.properties.__smeProductdiscount_value * Shopify.currency.rate;
                    discountDataObj = { "discountType": productData.properties.__smeProductDiscountType, "discountVal": newvalue, "price": productData.price, "priceOver": 0, "qty": productData.quantity };
                } else if (productData.properties.__smeProductDiscountType === 'smeFreeProduct') {
                    let freeproductvalue = productData.original_line_price / 100;
                    discountDataObj = { "discountType": productData.properties.__smeProductDiscountType, "discountVal": freeproductvalue, "price": productData.original_line_price, "priceOver": 0, "qty": productData.quantity };
                } else {
                    discountDataObj = { "discountType": productData.properties.__smeProductDiscountType, "discountVal": productData.properties.__smeProductdiscount_value, "price": productData.price, "priceOver": 0, "qty": productData.quantity };

                }

                var discountCalCulation = smeDiscountCalculator(discountDataObj);
                salemax_smeCartDiscount += Number(discountCalCulation.appliedDiscount);
                product_discount_data += Number(discountCalCulation.appliedDiscount) / productData.quantity;
                smeCartDiscount = parseFloat(smeCartDiscount) + Number(discountCalCulation.appliedDiscount);

                if (productData.properties.__smeProductDiscount > 0) {
                    smeLineDiscounttag(productData.properties.__smeDiscountTag, productData.variant_id);
                    if (!smeDiscounttag.includes(productData.properties.__smeDiscountTag)) {
                        smeDiscounttag.push(productData.properties.__smeDiscountTag);
                        smeDiscounttagHtml += smePrepareDisTagHtml(productData.properties.__smeDiscountTag, 0);
                    }
                }
            }

            if (productData.properties.__smeProgreesBar != undefined) {
                smeAddedFreeProdIds[productData.properties.__smeProgreesBar] = productData;
                progressBarFreeProdLen += productData.quantity;
                progressbarminusdiscount += productData.final_line_price / 100;
            }
            if (productData.properties.__smeSwatchId != undefined) {
                progressBarFreeProdLen += productData.quantity;
                progressbarminusdiscount += productData.final_line_price / 100;
            }

            if (Array.isArray(generalDiscount)) {
                for (var Discountdata of generalDiscount) {
                    if (Discountdata && Object.keys(Discountdata).length > 0) {

                        let couponCode = Discountdata.couponCode;

                        const filtered_cart_level_discount_applications = smeCartData.cart_level_discount_applications.filter(item => item.title === couponCode);
                        const filtered_line_level_allocations = smeCartData.items.map(item =>
                            item.line_level_discount_allocations.filter(
                                allocation => allocation.discount_application.title === couponCode
                            )
                        );
                        const allAreBlank = filtered_line_level_allocations.every(arr => arr.length === 0);

                        if (filtered_cart_level_discount_applications.length <= 0 && allAreBlank) {
                            const variantIds = Discountdata.variantid.split(',');

                            if (Discountdata.discount_option == 'PRODUCT' && Discountdata.variantid && variantIds.includes(productData.id.toString())) {

                                if (Discountdata.discount_type == 'fixed_amount') {
                                    smeLineDiscounttag(couponCode, productData.id, 1);
                                    smeTempIdArry.push(productData.id); // Store the id in the array
                                    if (!smeDiscounttag.includes(couponCode)) {
                                        smeDiscounttag.push(couponCode);

                                        smeDiscounttagHtml += smePrepareDisTagHtml(couponCode, 1);
                                    }
                                    var variantIds_length = variantIds.length;
                                    if (Discountdata.appliesOnEachItem == false) {
                                        ordersmeCartDiscount += Number(Discountdata.discountVal) / variantIds_length;
                                        smeCartDiscount += Number(Discountdata.discountVal) / variantIds_length;
                                        product_discount_data += Number(Discountdata.discountVal) / variantIds_length;

                                    } else {
                                        ordersmeCartDiscount += Number(Discountdata.discountVal) / variantIds_length;
                                        smeCartDiscount += Number(Discountdata.discountVal) / variantIds_length;
                                        product_discount_data += Number(Discountdata.discountVal) / variantIds_length / productData.quantity;

                                    }
                                }

                                if (Discountdata.discount_type == 'percentage') {
                                    smeTempIdArry.push(productData.id);
                                    smeLineDiscounttag(couponCode, productData.id, 1);
                                    if (!smeDiscounttag.includes(couponCode)) {
                                        smeDiscounttag.push(couponCode);

                                        smeDiscounttagHtml += smePrepareDisTagHtml(couponCode, 1);
                                    }
                                    let cartproductsubtotal = productData.original_line_price / 100;

                                    let newproductdiscount = cartproductsubtotal * Discountdata.discount_type_value / 100;
                                    ordersmeCartDiscount += Number(newproductdiscount);
                                    smeCartDiscount += Number(newproductdiscount);
                                    product_discount_data += Number(newproductdiscount);
                                }
                            }
                        }
                    }
                }
            }

            if (productData.line_level_discount_allocations.length > 0 && productData.line_level_total_discount > 0) {
                productData.line_level_discount_allocations.forEach(function (newlineleveldiscount, index) {
                    if (!smeTempIdArry.includes(productData.id)) {
                        let shopifyAutoDiscountObj = newlineleveldiscount['discount_application'];

                        smeLineDiscounttag(shopifyAutoDiscountObj.title, productData.variant_id);

                        if (!smeDiscounttag.includes(shopifyAutoDiscountObj.title)) {
                            smeDiscounttag.push(shopifyAutoDiscountObj.title);
                            smeDiscounttagHtml += smePrepareDisTagHtml(shopifyAutoDiscountObj.title, 0);
                        }

                        smeCartDiscount += newlineleveldiscount.amount / 100;
                        product_discount_data += newlineleveldiscount.amount / 100 / productData.quantity;
                    } else {
                        lineordersmeCartDiscount += Number(newlineleveldiscount.amount / 100);
                    }
                });
            }

            let finalPrice = parseFloat(productData.original_price / 100 - product_discount_data).toFixed(2);

            if (finalPrice < 0) {
                finalPrice = 0;
            }

            document.querySelector('.smeCartLineItem[data-variant-id="' + productData.variant_id + '"] .smeSellingPrice').innerHTML = smeCurrencyFormate + finalPrice;
            document.querySelector('.smeCartLineItem[data-variant-id="' + productData.variant_id + '"] .smeSellingPrice').setAttribute('data-new-product-selling-price', finalPrice);

            let productid = productData.id;
            let productadditionalInfo = smeGlobalCartData[productid];
            let variantData = productadditionalInfo['variants'];

            let variantkey = variantData.findIndex(function (obj) {
                return obj.id == productData.variant_id;
            });
            let selectedVariantData = variantData[variantkey];

            var sme_gm_cart_widget = JSON.parse(sme_gm_dataobj.cart_widget);
            var tempSecId = Object.keys(sme_gm_cart_widget)[0];

            cartSettings = sme_gm_cart_widget[tempSecId];

            let isShowComparePrice = (cartSettings.is_show_compare_price == 0) ? 'block' : 'none';

            let finalComparePrice = selectedVariantData.compare_at_price !== null && selectedVariantData.compare_at_price !== 0 ? parseFloat(selectedVariantData.compare_at_price) / 100 : parseFloat(productData.original_price / 100);
            let new_comparePrice = (finalComparePrice !== parseFloat(finalPrice)) ? finalComparePrice : isShowComparePrice = 'none';
            if (new_comparePrice == 'none') {
                if (smetemplates == 1) {
                    document.querySelector('.smeCartLineItem[data-variant-id="' + productData.variant_id + '"] .salemaximize__compare-price').style.display = 'none';
                } else {
                    document.querySelector('.smeCartLineItem[data-variant-id="' + productData.variant_id + '"] .salemaximize__compare-price-cart').style.display = 'none';
                }

            } else {
                if (smetemplates == 1) {
                    document.querySelector('.smeCartLineItem[data-variant-id="' + productData.variant_id + '"] .salemaximize__compare-price').style.display = 'block';
                } else {
                    document.querySelector('.smeCartLineItem[data-variant-id="' + productData.variant_id + '"] .salemaximize__compare-price-cart').style.display = 'block';
                }
            }
        });

        if (cartData.cart_level_discount_applications.length > 0) {

            cartData.cart_level_discount_applications.forEach(function (shopifyAutoDiscount, index) {
                shopifyAutoDiscount = (shopifyAutoDiscount.title) ? shopifyAutoDiscount : shopifyAutoDiscount.discount_application;
                let discountTitle = shopifyAutoDiscount.title;
                if (discountTitle.substring(0, 3) != "SME") {

                    if (shopifyAutoDiscount.value_type == 'percentage') {

                        let cartlinesubtotal = cartData.items_subtotal_price / 100 + lineordersmeCartDiscount;
                        let newlinetotal = cartlinesubtotal - ordersmeCartDiscount;
                        let newlinediscount = newlinetotal * shopifyAutoDiscount.value / 100;
                        if (!smeDiscounttag.includes(shopifyAutoDiscount.title)) {
                            smeDiscounttag.push(shopifyAutoDiscount.title);
                            smeDiscounttagHtml += smePrepareDisTagHtml(shopifyAutoDiscount.title, 0);
                        }
                        smeLineDiscounttag(shopifyAutoDiscount.title);
                        smeCartDiscount += Number(newlinediscount);
                        total_allocated_amount += Number(newlinediscount);

                    }

                    if (shopifyAutoDiscount.value_type == 'fixed_amount') {
                        smeLineDiscounttag(shopifyAutoDiscount.title);
                        if (!smeDiscounttag.includes(shopifyAutoDiscount.title)) {
                            smeDiscounttag.push(shopifyAutoDiscount.title);
                            smeDiscounttagHtml += smePrepareDisTagHtml(shopifyAutoDiscount.title, 0);
                        }
                        smeCartDiscount += Number(shopifyAutoDiscount.value);
                        total_allocated_amount += Number(shopifyAutoDiscount.value);
                    }
                }
            });
        }

        smeProgressBarCartItem = smeProgressBarCartItem - progressBarFreeProdLen;
        var smeCartTotalAmountforprogress = parseFloat(cartData.original_total_price) / 100;
        var progress_total = smeCartTotalAmountforprogress - progressbarminusdiscount;
        let progressBarDiscount = await smeProgressBarInit(progress_total, smeCartDiscount);


        if (progressBarDiscount.smeDiscounttagHtml) {
            smeCartDiscount += progressBarDiscount.progresssmeCartDiscount;
            progrses_bar_discount = progressBarDiscount.progresssmeCartDiscount;
            total_allocated_amount += Number(progressBarDiscount.progresssmeCartDiscount);
            progress_variantid = progressBarDiscount.sme_variant_id;
            var specifprogressbarqty = 0;
            cartData.items.forEach(function (progressproductData, index) {
                if (progress_variantid.includes(progressproductData.id)) {
                    specifprogressbarqty += progressproductData.quantity;
                }
            });

            smeDiscounttagHtml += progressBarDiscount.smeDiscounttagHtml;
        }

        if (Array.isArray(generalDiscount)) {

            for (var Discountdata of generalDiscount) {
                if (Discountdata && Object.keys(Discountdata).length > 0) {
                    let couponCode = Discountdata.couponCode;
                    const filtered_cart_level_discount_applications = smeCartData.cart_level_discount_applications.filter(item => item.title === couponCode);
                    const filtered_line_level_allocations = smeCartData.items.map(item =>
                        item.line_level_discount_allocations.filter(
                            allocation => allocation.discount_application.title === couponCode
                        )
                    );
                    const allAreBlank = filtered_line_level_allocations.every(arr => arr.length === 0);

                    if (filtered_cart_level_discount_applications.length <= 0 && allAreBlank) {

                        if (Discountdata.discount_option == 'ORDER') {

                            if (Discountdata.discount_type == 'fixed_amount') {
                                if (!smeDiscounttag.includes(couponCode)) {
                                    smeLineDiscounttag(couponCode, '', 1);
                                    smeDiscounttag.push(couponCode);
                                    smeDiscounttagHtml += smePrepareDisTagHtml(couponCode, 1);
                                }
                                smeCartDiscount += Number(Discountdata.discountVal);
                                total_allocated_amount += Number(Discountdata.discountVal);
                            }

                            if (Discountdata.discount_type == 'percentage') {
                                if (!smeDiscounttag.includes(couponCode)) {
                                    smeLineDiscounttag(couponCode, '', 1);
                                    smeDiscounttag.push(couponCode);
                                    smeDiscounttagHtml += smePrepareDisTagHtml(couponCode, 1);
                                }
                                let cartsubtotal = cartData.items_subtotal_price / 100 + lineordersmeCartDiscount;

                                let newtotal = cartsubtotal - ordersmeCartDiscount;
                                let newdiscount = newtotal * Discountdata.discount_type_value / 100;

                                smeCartDiscount += Number(newdiscount);
                                total_allocated_amount += Number(newdiscount);
                            }
                        }
                    }
                }
            }
        }
        const filteredItems = smeCartData.items.filter(item => !item.properties.hasOwnProperty('__smeSwatchProduct') && !item.properties.hasOwnProperty('__smeProgreesBar'));

        var product_par_discount = total_allocated_amount / filteredItems.length;

        cartData.items.forEach(function (productData, index) {

            if (!productData.properties.hasOwnProperty('__smeSwatchProduct') && !productData.properties.hasOwnProperty('__smeProgreesBar')) {

                if (progress_variantid.length > 0 && progress_variantid.includes(productData.id)) {
                    var progres_minus = progrses_bar_discount / filteredItems.length;
                    var afterprogressbarminus = product_par_discount - progres_minus;
                    var actual_perproduct_progressbar = progrses_bar_discount / specifprogressbarqty;
                    new_product_par_discount = afterprogressbarminus / productData.quantity + actual_perproduct_progressbar;
                }
                else {
                    if (progress_variantid.length > 0) {
                        var progres_minus = progrses_bar_discount / filteredItems.length;
                        var afterprogressbarminus = product_par_discount - progres_minus;
                        new_product_par_discount = afterprogressbarminus / productData.quantity;
                    } else {
                        new_product_par_discount = product_par_discount / productData.quantity;
                    }

                }

                var get_old_amount = document.querySelector('.smeCartLineItem[data-variant-id="' + productData.variant_id + '"] .smeSellingPrice').getAttribute('data-new-product-selling-price');
                let finalPrice = parseFloat(get_old_amount - new_product_par_discount).toFixed(2);

                if (finalPrice < 0) {
                    finalPrice = 0;
                }

                document.querySelector('.smeCartLineItem[data-variant-id="' + productData.variant_id + '"] .smeSellingPrice').innerHTML = smeCurrencyFormate + parseFloat(finalPrice).toFixed(2);
                document.querySelector('.smeCartLineItem[data-variant-id="' + productData.variant_id + '"] .smeSellingPrice').setAttribute('data-new-product-selling-price', parseFloat(finalPrice).toFixed(2));

                let productid = productData.id;
                let productadditionalInfo = smeGlobalCartData[productid];
                let variantData = productadditionalInfo['variants'];

                let variantkey = variantData.findIndex(function (obj) {
                    return obj.id == productData.variant_id;
                });
                let selectedVariantData = variantData[variantkey];

                var sme_gm_cart_widget = JSON.parse(sme_gm_dataobj.cart_widget);
                var tempSecId = Object.keys(sme_gm_cart_widget)[0];

                cartSettings = sme_gm_cart_widget[tempSecId];

                let isShowComparePrice = (cartSettings.is_show_compare_price == 0) ? 'block' : 'none';

                let finalComparePrice = selectedVariantData.compare_at_price !== null && selectedVariantData.compare_at_price !== 0 ? parseFloat(selectedVariantData.compare_at_price) / 100 : parseFloat(productData.original_price / 100);
                let new_comparePrice = (finalComparePrice !== parseFloat(finalPrice)) ? finalComparePrice : isShowComparePrice = 'none';
                if (new_comparePrice == 'none') {
                    if (smetemplates == 1) {
                        document.querySelector('.smeCartLineItem[data-variant-id="' + productData.variant_id + '"] .salemaximize__compare-price').style.display = 'none';
                    } else {
                        document.querySelector('.smeCartLineItem[data-variant-id="' + productData.variant_id + '"] .salemaximize__compare-price-cart').style.display = 'none';
                    }
                } else {
                    if (smetemplates == 1) {
                        document.querySelector('.smeCartLineItem[data-variant-id="' + productData.variant_id + '"] .salemaximize__compare-price').style.display = 'block';
                    } else {
                        document.querySelector('.smeCartLineItem[data-variant-id="' + productData.variant_id + '"] .salemaximize__compare-price-cart').style.display = 'block';
                    }
                }

            }
        });

        var salemax_discount = parseFloat(salemax_smeCartDiscount + progrses_bar_discount) / Shopify.currency.rate;

        smeGeneralDiscountStore(salemax_discount, 'salemax_discount');

        smeCartTotalPrice = parseFloat(cartData.original_total_price) / 100;
        smeCartTotalAmount = smeCartTotalPrice - parseFloat(smeCartDiscount);

    }

    if (document.querySelector('.smeSubtotalVal')) {
        document.querySelector('.smeSubtotalVal').innerHTML = smeCurrencyFormate + (parseFloat(cartData.original_total_price) / 100).toFixed(2);
    }

    if (document.querySelector('.salemaximize__coupon-price.smeDiscountVal')) {

        document.querySelector('.salemaximize__coupon-price.smeDiscountVal').innerHTML = smeCurrencyFormate + parseFloat(smeCartDiscount).toFixed(2);
    }

    if (document.querySelector('.smeCartTotalVal')) {
        document.querySelector('.smeCartTotalVal').innerHTML = smeCurrencyFormate + parseFloat(smeCartTotalAmount).toFixed(2);
    }

    if (smeCartTotalAmount < 0) {
        smeCartTotalAmount = 0;
    }

    var sme_gm_checkout_widget = JSON.parse(sme_gm_dataobj.checkout_widget);
    var firstKey = Object.keys(sme_gm_checkout_widget)[0];

    let cartTotalBtnHtml = sme_gm_checkout_widget[firstKey].checkout_btn_text.replace('{{total-text}}', '<span class="inBtncartTotal notranslate"></span>');
    smeCartTotalAmount = parseFloat(smeCartTotalAmount).toFixed(2);
    document.querySelector('.smeCheckoutBtn').innerHTML = cartTotalBtnHtml;

    var inBtncartTotal = document.querySelector('.inBtncartTotal');
    if (inBtncartTotal) {
        inBtncartTotal.innerHTML = smeCurrencyFormate + smeCartTotalAmount;
    }

    if (smeDiscounttagHtml != '' && document.querySelector('.smeDiscountTagBlock')) {
        document.querySelector('.smeDiscountTagBlock').style.display = 'block';
        document.querySelector('.smeDiscountTagBlock').style.visibility = 'visible';
        document.querySelector('.smeDiscountTagBlock').innerHTML = smeDiscounttagHtml;
    } else {
        if (document.querySelector('.smeDiscountTagBlock')) {
            document.querySelector('.smeDiscountTagBlock').style.display = 'none';
        }
    }
}

function smeDiscountCalculator(discountData) {
    let discountedPrice = 0;
    let discountVal = parseFloat(discountData.discountVal);
    let actualPrice = parseFloat(discountData.price) / 100;
    let priceOver = (discountData.priceOver) ? parseFloat(discountData.priceOver) : 0;
    let qty = discountData.qty;
    let appliedDiscount = 0;

    switch (discountData.discountType) {
        case "0":
            appliedDiscount = 0.00;
            discountedPrice = actualPrice;
            break;
        case "1":
            discountVal = (discountVal <= 100) ? discountVal : 100;
            appliedDiscount = smeDiscountSource(actualPrice, discountVal);
            appliedDiscount = (appliedDiscount / qty).toFixed(2) * qty;
            discountedPrice = (discountVal <= 100) ? (actualPrice - appliedDiscount).toFixed(2) : actualPrice.toFixed(2);
            break;
        case "2":
            if (priceOver == '' || actualPrice > priceOver) {
                appliedDiscount = (actualPrice > discountVal) ? discountVal * qty : actualPrice * qty;
                discountedPrice = (actualPrice > appliedDiscount) ? (actualPrice - appliedDiscount).toFixed(2) : 0.00;
            } else {
                discountedPrice = actualPrice;
            }
            break;
        case "3":
            appliedDiscount = (discountVal < actualPrice) ? discountVal : actualPrice;
            discountedPrice = (actualPrice - appliedDiscount).toFixed(2);
            break;
        case "smeFreeProduct":
            appliedDiscount = (discountVal).toFixed(2);
            discountedPrice = (actualPrice - appliedDiscount).toFixed(2);
            break;
    }
    let response = { "discountedPrice": discountedPrice, "actualPrice": actualPrice, "appliedDiscount": appliedDiscount };
    return response;
}

function smeDiscountSource(actualPrice, discountVal) {
    var discount = actualPrice * (discountVal / 100);
    discount = parseFloat(discount * Math.pow(10, 2));
    discount = discount / Math.pow(10, 2);
    let pos = discount.toString().indexOf('.');
    let sub_str = discount.toString().substr(pos + 3, 1);
    let final_discount = 0;
    if (pos != 0 && sub_str == 5) {
        final_discount = Math.floor(discount * 100) / 100;
    } else {
        final_discount = Math.round((discount + Number.EPSILON) * 100) / 100;
    }
    return final_discount;
}

const smeGeneralDiscountGet = (storageName) => {
    if (typeof (Storage) !== "undefined") {
        let presentedCookie = localStorage.getItem(storageName);
        return (presentedCookie != '' && presentedCookie != null) ? JSON.parse(decodeURIComponent(escape(atob(presentedCookie)))) : {};
    } else {
        console.log("Sorry, your browser does not support Web Storage...!");
    }
}


var progressBarSpecificIds = [];
async function smeProgressBarInit(smeCartTotalAmount, smeCartDiscount) {

    if (document.querySelector('.widget1').innerHTML === '') {
        return false;
    }
    let smeResponse = { "smeCartTotalAmount": smeCartTotalAmount, "smeCartDiscount": smeCartDiscount, "smeDiscounttagHtml": '' };

    if (sme_gm_dataobj.progress_bar_widget && sme_gm_dataobj.progress_bar_widget != '[]') {

        let tempSecId = document.querySelector('.widget1').getAttribute('data-id');
        let progressBarSettings = JSON.parse(sme_gm_dataobj.progress_bar_widget);

        progressBarSettings = progressBarSettings[tempSecId];
        let tierSettings = JSON.parse(progressBarSettings.tier_settings);
        let discountTarget = (progressBarSettings && progressBarSettings.discount_target) ? progressBarSettings.discount_target : '';
        tierSettings.sort(function (a, b) {
            return a.tier_reach_value * Shopify.currency.rate - b.tier_reach_value * Shopify.currency.rate;
        });
        let tierOfferMsg = '';
        let tierLength = tierSettings.length;
        let smetierActualRange = 100 / tierLength;
        let smeTierRange = 0;
        let activeTierKey = '';
        let tierFiiledVal = 0;
        let lasttierkey = '';
        var variant_id_data = [];

        let tierConditionVal = (progressBarSettings.discount_target === '0') ? smeCartTotalAmount : smeProgressBarCartItem;
        let stopLoop = false;

        tierSettings.forEach(function (value, key) {
            if (stopLoop) return;
            if (progressBarSettings.discount_target === '0') {
                var tierReachVal = parseFloat(value.tier_reach_value * Shopify.currency.rate);
            } else {
                var tierReachVal = parseFloat(value.tier_reach_value);
            }

            if (tierConditionVal <= tierReachVal) {
                tierFiiledVal = (tierConditionVal * smetierActualRange / tierReachVal) + smeTierRange;
                activeTierKey = (tierConditionVal == tierReachVal) ? tierSettings[key + 1] !== undefined ? key + 1 : key : key;
                stopLoop = true;
            } else {
                tierFiiledVal = 100;
                activeTierKey = key;
                smeTierRange = smeTierRange + (100 / tierSettings.length);

            }

        });

        let tierCongratulationMsg = progressBarSettings.tier_completed_msg;
        let upComingTierKey = activeTierKey;
        let upComingTierData = tierSettings[upComingTierKey];
        let upComingTierReachVal = '';

        let lastierkey = lasttierkey;
        if (upComingTierData && progressBarSettings.discount_target === '0') {
            upComingTierReachVal = smeCurrencyFormate + Math.abs(parseFloat(upComingTierData.tier_reach_value * Shopify.currency.rate) - parseFloat(smeCartTotalAmount)).toFixed(2);
        } else if (upComingTierData) {
            upComingTierReachVal = parseFloat(upComingTierData.tier_reach_value) - smeProgressBarCartItem;
        }

        let upComingTierDiscountVal = (upComingTierData) ? upComingTierData.discount_value : '';
        let upComingTierDiscountType = (upComingTierData) ? upComingTierData.discount_type : '';

        let upComingTierProductName = '';
        switch (parseInt(upComingTierDiscountType)) {
            case 0:
                upComingTierDiscountVal = "SECRET";
                break;
            case 1:
                if (upComingTierData.discount_option == '2') {
                    upComingTierDiscountVal = upComingTierData.discount_name;
                } else {
                    upComingTierDiscountVal = (upComingTierData.discount_option == '1') ? smeCurrencyFormate + parseFloat(upComingTierDiscountVal * Shopify.currency.rate).toFixed(2) : upComingTierDiscountVal + '%';
                    upComingTierDiscountVal = upComingTierDiscountVal.replace(".00", "");
                }

                break;
            case 2:

                if (!smeProgressBarProductObj[upComingTierData.product_id] && upComingTierData.product_id != '') {
                    let productHandle = upComingTierData.product_handle;
                    let productUrl = 'https://' + smeSiteDomain + '/products/' + productHandle + '.js?currency=' + smeUserCurrency;
                    let smeApiResponseData = await smeGetAjaxApiFn(productUrl);
                    if (!smeApiResponseData.status) {
                        smeProgressBarProductObj[smeApiResponseData.id] = smeApiResponseData;
                        upComingTierProductName = smeApiResponseData.title;
                    }
                } else if (upComingTierData.product_id != '') {
                    let productData = smeProgressBarProductObj[upComingTierData.product_id];
                    upComingTierProductName = productData.title;
                }

                break;
            case 3:

                if (upComingTierData.discount_option == '0') {
                    upComingTierDiscountVal = upComingTierDiscountVal + '%';
                } else if (upComingTierData.discount_option == '1') {
                    upComingTierDiscountVal = smeCurrencyFormate + parseFloat(upComingTierDiscountVal * Shopify.currency.rate).toFixed(2);
                } else {
                    upComingTierDiscountVal = upComingTierData.discount_name;
                }
                //upComingTierDiscountVal = (upComingTierData.discount_option == '1') ? smeCurrencyFormate + parseFloat(upComingTierDiscountVal * Shopify.currency.rate).toFixed(2) : upComingTierDiscountVal + '%';
                upComingTierDiscountVal = upComingTierDiscountVal.replace(".00", "");
                break;
        }

        if (upComingTierData && tierFiiledVal < 100) {
            const correction = {
                "{{sum-left-for-offer}}": upComingTierReachVal,
                "{{discount-value}}": upComingTierDiscountVal,
                "{{product-title}}": upComingTierProductName
            };
            let upComingTierMsg = upComingTierData.tier_reach_message;

            tierOfferMsg = upComingTierMsg.replace(/{{sum-left-for-offer}}|{{discount-value}}|{{product-title}}/g, matched => correction[matched]);
            smeConfitteStatus = 0;

        }

        if (document.querySelector('.smeProgressFillDiv')) {
            document.querySelector('.smeProgressFillDiv').style.width = tierFiiledVal + "%";
        }

        let congratesMsg = '';
        var freeProductElements = document.querySelectorAll('.smeCartLineItem.smeFreeProduct');
        if (tierSettings[activeTierKey]) {
            let activeTier = tierSettings[activeTierKey];

            activeTier.tierKey = activeTierKey;
            var nextFreeProd = 0;
            switch (parseInt(activeTier.discount_type)) {
                case 0:
                    congratesMsg = "SECRET";

                    progressBarSpecificIds = [];
                    break;
                case 1:
                    if (activeTier.discount_option == '2') {
                        smeIsProgressBarDiscountApplied = 1;
                        congratesMsg = activeTier.discount_name;
                    } else {
                        let discountType = (activeTier.discount_option == '0') ? 1 : ((activeTier.discount_option == '1') ? 3 : 0);

                        congratesMsg = (discountType == 1) ? activeTier.discount_value + '%' : smeCurrencyFormate + parseFloat(activeTier.discount_value * Shopify.currency.rate).toFixed(2);
                        progressBarSpecificIds = [];
                    }

                    break;
                case 2:

                    break;
                case 3:
                    progressBarSpecificIds = [];

                    if (activeTier.discount_option == '0') {
                        congratesMsg = activeTier.discount_value + '%';
                    } else if (activeTier.discount_option == '1') {
                        congratesMsg = smeCurrencyFormate + parseFloat(activeTier.discount_value * Shopify.currency.rate).toFixed(2);
                    } else {
                        congratesMsg = activeTier.discount_name;
                    }

                    break;
            }

            tierSettings.forEach(function (value, keymain) {

                if (progressBarSettings.discount_target == 0) {
                    if (value.discount_type == 2) {
                        if (value.product_id != "NULL") {

                            let next_tierkey = tierSettings[keymain + 1];
                            if (tierSettings[keymain + 1] !== undefined) {
                                next_tierkey = tierSettings[keymain + 1].tier_reach_value * Shopify.currency.rate;
                            }
                            else {
                                next_tierkey = 0;
                            }

                            let next_tier_reach_value = next_tierkey;
                            var tier_reach_value_data = value.tier_reach_value * Shopify.currency.rate;
                            if (smeCartTotalAmount >= tier_reach_value_data && (next_tier_reach_value !== 0 ? smeCartTotalAmount < next_tier_reach_value : true)) {

                                if (!smeAddedFreeProdIds[0]) {

                                    smeProgressBarFreeProduct(value, tempSecId);
                                    nextFreeProd = 1;
                                }
                                let smeProductQty = value.product_qty;
                                setTimeout(function () {
                                    document.querySelectorAll('.smeFreeProduct').forEach(function (element) {
                                        element.setAttribute('data-product-qty', smeProductQty);
                                    });
                                }, 1500);
                                congratesMsg = upComingTierProductName;
                                smeResponse.progresssmeCartDiscount = Number(0);
                                smeResponse.sme_variant_id = variant_id_data;
                            }
                            else {
                                var smeFreeProduct = document.querySelector('.smeCartLineItem.smeFreeProduct[data-product-id="' + value.product_id + '"]');
                                if (smeFreeProduct) {

                                    var smefreeproductid = document.querySelector('.smeCartLineItem.smeFreeProduct').getAttribute('data-product-id');

                                    if (value.product_id == smefreeproductid) {
                                        smeTierFreeProductRemove(value, nextFreeProd);
                                    }
                                }
                            }
                        }
                        progressBarSpecificIds = [];
                    }

                    if (value.discount_type == 1) {

                        if (value.discount_option == 2) {
                            let next_tierkey = tierSettings[keymain + 1];
                            if (tierSettings[keymain + 1] !== undefined) {
                                next_tierkey = tierSettings[keymain + 1].tier_reach_value * Shopify.currency.rate;
                            }
                            else {
                                next_tierkey = 0;
                            }

                            let next_tier_reach_value = next_tierkey;
                            var tier_reach_value_data = value.tier_reach_value * Shopify.currency.rate;

                            if (smeCartTotalAmount >= tier_reach_value_data && (next_tier_reach_value !== 0 ? smeCartTotalAmount < next_tier_reach_value : true)) {

                                smeLineDiscounttag(value.discount_name);
                                smeResponse.smeDiscounttagHtml += smePrepareDisTagHtml(value.discount_name, 0);
                                smeResponse.progresssmeCartDiscount = Number(0);
                                smeResponse.sme_variant_id = variant_id_data;

                            }
                        } else {
                            let next_tierkey = tierSettings[keymain + 1];
                            if (tierSettings[keymain + 1] !== undefined) {
                                next_tierkey = tierSettings[keymain + 1].tier_reach_value * Shopify.currency.rate;
                            }
                            else {
                                next_tierkey = 0;
                            }

                            let next_tier_reach_value = next_tierkey;
                            var tier_reach_value_data = value.tier_reach_value * Shopify.currency.rate;

                            if (smeCartTotalAmount >= tier_reach_value_data && (next_tier_reach_value !== 0 ? smeCartTotalAmount < next_tier_reach_value : true)) {

                                let discountType = (value.discount_option == '0') ? '1' : ((value.discount_option == '1') ? '3' : '0');

                                if (discountType === '3') {
                                    value.discount_value = value.discount_value * Shopify.currency.rate;
                                }
                                let discountDataObj = {
                                    "discountType": discountType,
                                    "discountVal": value.discount_value,
                                    "price": smeCartTotalAmount * 100,
                                    "priceOver": 0,
                                    "qty": 1
                                };
                                var discountCalCulation = smeDiscountCalculator(discountDataObj);
                                smeResponse.progresssmeCartDiscount = Number(discountCalCulation.appliedDiscount);
                                smeResponse.smeCartTotalAmount = parseFloat(discountCalCulation.discountedPrice);

                                smeResponse.smeDiscounttagHtml += smePrepareDisTagHtml(value.discount_name, 0);
                                smeLineDiscounttag(value.discount_name);
                                smeResponse.sme_variant_id = variant_id_data;
                            }
                        }
                    }

                    if (value.discount_type == 3) {

                        let next_tierkey = tierSettings[keymain + 1];
                        if (tierSettings[keymain + 1] !== undefined) {
                            next_tierkey = tierSettings[keymain + 1].tier_reach_value * Shopify.currency.rate;
                        }
                        else {
                            next_tierkey = 0;
                        }

                        let next_tier_reach_value = next_tierkey;
                        var tier_reach_value_data = value.tier_reach_value * Shopify.currency.rate;

                        if (smeCartTotalAmount >= tier_reach_value_data && (next_tier_reach_value !== 0 ? smeCartTotalAmount < next_tier_reach_value : true)) {

                            if (value.product_discount_type && value.product_discount_type == '0') {
                                let cartData = smeCartData.items;
                                const filteredCartData = cartData.filter(item => !item.properties.hasOwnProperty('__smeSwatchProduct') && !item.properties.hasOwnProperty('__smeProgreesBar'));

                                const cheapestProduct = filteredCartData.reduce((previous, current) => {
                                    return current.original_price < previous.original_price ? current : previous;
                                });

                                variant_id_data.push(cheapestProduct.id);

                                if (cheapestProduct.quantity >= value.specific_product_qty) {
                                    var sme_original_price = cheapestProduct.original_price * value.specific_product_qty;
                                } else {
                                    var sme_original_price = cheapestProduct.original_price * cheapestProduct.quantity;
                                }
                                let discountType = (value.discount_option == '0') ? '1' : ((value.discount_option == '1') ? '3' : '0');
                                if (discountType === '3') {
                                    value.discount_value = value.discount_value * Shopify.currency.rate;
                                }
                                let discountDataObj = {
                                    "discountType": discountType,
                                    "discountVal": value.discount_value,
                                    "price": sme_original_price,
                                    "priceOver": 0,
                                    "qty": value.product_qty
                                };

                                var discountCalCulation = smeDiscountCalculator(discountDataObj);

                                smeResponse.progresssmeCartDiscount = Number(discountCalCulation.appliedDiscount);
                                smeResponse.smeCartTotalAmount = smeCartTotalAmount - discountCalCulation.appliedDiscount;
                                smeResponse.smeDiscounttagHtml += smePrepareDisTagHtml(value.discount_name, 0);
                                smeLineDiscounttag(value.discount_name, cheapestProduct.variant_id);
                                smeResponse.sme_variant_id = variant_id_data;

                            }

                            if (value.product_discount_type && value.product_discount_type === '1') {
                                var discountCalCulation = {};
                                if (value.product_discount_option && value.product_discount_option == '0' && value.discount_product_ids != '') {

                                    let specifiProdId = value.discount_product_ids;
                                    specifiProdId = String(specifiProdId).split(",").map((specifiProdId) => {
                                        return Number(specifiProdId)
                                    });

                                    var matchingProducts = smeCartData.items.filter(cartItem => specifiProdId.includes(cartItem.product_id));
                                    if (matchingProducts.length > 0) {

                                        let total_price = matchingProducts.reduce((sum, product) => {
                                            smeLineDiscounttag(value.discount_name, product.variant_id);
                                            variant_id_data.push(product.id);
                                            if (product.quantity >= value.specific_product_qty) {
                                                return sum + (product.original_price * value.specific_product_qty);
                                            } else {
                                                return sum + (product.original_price) * product.quantity;
                                            }
                                        }, 0);

                                        let discountType = (value.discount_option == '0') ? '1' : ((value.discount_option == '1') ? '3' : '0');
                                        if (discountType === '3') {
                                            value.discount_value = value.discount_value * Shopify.currency.rate;
                                        }
                                        let discountDataObj = {
                                            "discountType": discountType,
                                            "discountVal": value.discount_value,
                                            "price": total_price,
                                            "priceOver": 0,
                                            "qty": value.specific_product_qty
                                        };
                                        var discountCalCulation = smeDiscountCalculator(discountDataObj);

                                    }

                                } else {
                                    let specifiProdId = value.discount_product_ids;
                                    specifiProdId = String(specifiProdId).split(",").map((specifiProdId) => {
                                        return Number(specifiProdId)
                                    });
                                    var matchingProducts = smeCartData.items.filter(cartItem => specifiProdId.includes(cartItem.product_id));

                                    if (matchingProducts.length > 0) {
                                        var cheapestProduct = matchingProducts.reduce((minProduct, product) => {
                                            return product.original_price < minProduct.original_price ? product : minProduct;
                                        }, matchingProducts[0]);
                                        variant_id_data.push(cheapestProduct.id);
                                        if (cheapestProduct.quantity >= value.specific_product_qty) {
                                            var sme_original_price = cheapestProduct.original_price * value.specific_product_qty;
                                        } else {
                                            var sme_original_price = cheapestProduct.original_price * cheapestProduct.quantity;
                                        }

                                        smeLineDiscounttag(value.discount_name, cheapestProduct.variant_id);

                                        let discountType = (value.discount_option == '0') ? '1' : ((value.discount_option == '1') ? '3' : '0');
                                        if (discountType === '3') {
                                            value.discount_value = value.discount_value * Shopify.currency.rate;
                                        }
                                        let discountDataObj = {
                                            "discountType": discountType,
                                            "discountVal": value.discount_value,
                                            "price": sme_original_price,
                                            "priceOver": 0,
                                            "qty": value.specific_product_qty
                                        };
                                        var discountCalCulation = smeDiscountCalculator(discountDataObj);

                                    }
                                }

                                if (discountCalCulation.appliedDiscount && discountCalCulation.appliedDiscount != '0') {
                                    smeResponse.progresssmeCartDiscount = Number(discountCalCulation.appliedDiscount);
                                    smeResponse.smeCartTotalAmount = smeCartTotalAmount - discountCalCulation.appliedDiscount;
                                    smeResponse.smeDiscounttagHtml += smePrepareDisTagHtml(value.discount_name, 0);
                                    smeResponse.sme_variant_id = variant_id_data;
                                }
                            }
                        }
                    }
                }
                if (progressBarSettings.discount_target == 1) {

                    if (value.discount_type == 2) {

                        if (value.product_id != "NULL") {

                            let next_tierkey = tierSettings[keymain + 1];
                            if (tierSettings[keymain + 1] !== undefined) {
                                next_tierkey = tierSettings[keymain + 1].tier_reach_value;
                            }
                            else {
                                next_tierkey = 0;
                            }
                            let next_tier_reach_value = next_tierkey;
                            var tier_reach_value_data = value.tier_reach_value;
                            if (smeProgressBarCartItem >= tier_reach_value_data && (next_tier_reach_value !== 0 ? smeProgressBarCartItem < next_tier_reach_value : true)) {
                                if (!smeAddedFreeProdIds[0]) {
                                    smeProgressBarFreeProduct(value, tempSecId);
                                    nextFreeProd = 1;
                                }
                                let smeProductQty = value.product_qty;
                                setTimeout(function () {
                                    document.querySelectorAll('.smeFreeProduct').forEach(function (element) {
                                        element.setAttribute('data-product-qty', smeProductQty);
                                    });
                                }, 1500);
                                congratesMsg = upComingTierProductName;
                                smeResponse.progresssmeCartDiscount = Number(0);
                                smeResponse.sme_variant_id = variant_id_data;
                            }
                            else {

                                var smeFreeProduct = document.querySelector('.smeCartLineItem.smeFreeProduct[data-product-id="' + value.product_id + '"]');
                                if (smeFreeProduct) {
                                    var smefreeproductid = document.querySelector('.smeCartLineItem.smeFreeProduct').getAttribute('data-product-id');
                                    if (value.product_id == smefreeproductid) {
                                        smeTierFreeProductRemove(value, nextFreeProd);
                                    }
                                }
                            }
                        }
                        progressBarSpecificIds = [];
                    }

                    if (value.discount_type == 1) {

                        if (value.discount_option == 2) {
                            let next_tierkey = tierSettings[keymain + 1];
                            if (tierSettings[keymain + 1] !== undefined) {
                                next_tierkey = tierSettings[keymain + 1].tier_reach_value;
                            }
                            else {
                                next_tierkey = 0;
                            }
                            let next_tier_reach_value = next_tierkey;
                            var tier_reach_value_data = value.tier_reach_value;
                            if (smeProgressBarCartItem >= tier_reach_value_data && (next_tier_reach_value !== 0 ? smeProgressBarCartItem < next_tier_reach_value : true)) {

                                smeLineDiscounttag(value.discount_name);
                                smeResponse.progresssmeCartDiscount = Number(0);
                                smeResponse.smeDiscounttagHtml += smePrepareDisTagHtml(value.discount_name, 0);
                                smeResponse.sme_variant_id = variant_id_data;

                            }
                        } else {
                            let next_tierkey = tierSettings[keymain + 1];
                            if (tierSettings[keymain + 1] !== undefined) {
                                next_tierkey = tierSettings[keymain + 1].tier_reach_value;
                            }
                            else {
                                next_tierkey = 0;
                            }
                            let next_tier_reach_value = next_tierkey;
                            var tier_reach_value_data = value.tier_reach_value;
                            if (smeProgressBarCartItem >= tier_reach_value_data && (next_tier_reach_value !== 0 ? smeProgressBarCartItem < next_tier_reach_value : true)) {
                                let discountType = (value.discount_option == '0') ? '1' : ((value.discount_option == '1') ? '3' : '0');
                                if (discountType === '3') {
                                    value.discount_value = value.discount_value * Shopify.currency.rate;
                                }
                                let discountDataObj = {
                                    "discountType": discountType,
                                    "discountVal": value.discount_value,
                                    "price": smeCartTotalAmount * 100,
                                    "priceOver": 0,
                                    "qty": 1
                                };
                                var discountCalCulation = smeDiscountCalculator(discountDataObj);

                                smeResponse.progresssmeCartDiscount = Number(discountCalCulation.appliedDiscount);
                                smeResponse.smeCartTotalAmount = parseFloat(discountCalCulation.discountedPrice);

                                smeResponse.smeDiscounttagHtml += smePrepareDisTagHtml(value.discount_name, 0);
                                smeLineDiscounttag(value.discount_name);
                                smeResponse.sme_variant_id = variant_id_data;
                            }
                        }
                    }

                    if (value.discount_type == 3) {

                        let next_tierkey = tierSettings[keymain + 1];
                        if (tierSettings[keymain + 1] !== undefined) {
                            next_tierkey = tierSettings[keymain + 1].tier_reach_value;
                        }
                        else {
                            next_tierkey = 0;
                        }

                        let next_tier_reach_value = next_tierkey;
                        var tier_reach_value_data = value.tier_reach_value;

                        if (smeProgressBarCartItem >= tier_reach_value_data && (next_tier_reach_value !== 0 ? smeProgressBarCartItem < next_tier_reach_value : true)) {

                            let producDiscountType = (value.discount_option == '0') ? 1 : ((value.discount_option == '1') ? 3 : 0);
                            if (value.product_discount_type && value.product_discount_type == '0') {
                                let cartData = smeCartData.items;
                                const filteredCartData = cartData.filter(item => !item.properties.hasOwnProperty('__smeSwatchProduct') && !item.properties.hasOwnProperty('__smeProgreesBar'));

                                const cheapestProduct = filteredCartData.reduce((previous, current) => {
                                    return current.original_price < previous.original_price ? current : previous;
                                });
                                variant_id_data.push(cheapestProduct.id);
                                if (cheapestProduct.quantity >= value.specific_product_qty) {
                                    var sme_original_price = cheapestProduct.original_price * value.specific_product_qty;
                                } else {
                                    var sme_original_price = cheapestProduct.original_price * cheapestProduct.quantity;
                                }

                                let discountType = (value.discount_option == '0') ? '1' : ((value.discount_option == '1') ? '3' : '0');
                                if (discountType === '3') {
                                    value.discount_value = value.discount_value * Shopify.currency.rate;
                                }
                                let discountDataObj = {
                                    "discountType": discountType,
                                    "discountVal": value.discount_value,
                                    "price": sme_original_price,
                                    "priceOver": 0,
                                    "qty": value.product_qty
                                };

                                var discountCalCulation = smeDiscountCalculator(discountDataObj);

                                smeResponse.progresssmeCartDiscount = Number(discountCalCulation.appliedDiscount);

                                smeResponse.smeCartTotalAmount = smeCartTotalAmount - discountCalCulation.appliedDiscount;
                                smeResponse.smeDiscounttagHtml += smePrepareDisTagHtml(value.discount_name, 0);
                                smeLineDiscounttag(value.discount_name, cheapestProduct.variant_id);
                                smeResponse.sme_variant_id = variant_id_data;

                            }
                            if (value.product_discount_type && value.product_discount_type === '1') {
                                var discountCalCulation = {};
                                if (value.product_discount_option && value.product_discount_option == '0' && value.discount_product_ids != '') {
                                    let specifiProdId = value.discount_product_ids;
                                    specifiProdId = String(specifiProdId).split(",").map((specifiProdId) => {
                                        return Number(specifiProdId)
                                    });

                                    var matchingProducts = smeCartData.items.filter(cartItem => specifiProdId.includes(cartItem.product_id));
                                    if (matchingProducts.length > 0) {
                                        let total_price = matchingProducts.reduce((sum, product) => {
                                            smeLineDiscounttag(value.discount_name, product.variant_id);
                                            variant_id_data.push(product.id);
                                            if (product.quantity >= value.specific_product_qty) {
                                                return sum + (product.original_price * value.specific_product_qty);
                                            } else {
                                                return sum + (product.original_price) * product.quantity;
                                            }
                                        }, 0);


                                        let discountType = (value.discount_option == '0') ? '1' : ((value.discount_option == '1') ? '3' : '0');
                                        if (discountType === '3') {
                                            value.discount_value = value.discount_value * Shopify.currency.rate;
                                        }
                                        let discountDataObj = {
                                            "discountType": discountType,
                                            "discountVal": value.discount_value,
                                            "price": total_price,
                                            "priceOver": 0,
                                            "qty": value.specific_product_qty
                                        };

                                        var discountCalCulation = smeDiscountCalculator(discountDataObj);

                                    }

                                } else {

                                    let specifiProdId = value.discount_product_ids;
                                    specifiProdId = String(specifiProdId).split(",").map((specifiProdId) => {
                                        return Number(specifiProdId)
                                    });

                                    var matchingProducts = smeCartData.items.filter(cartItem => specifiProdId.includes(cartItem.product_id));

                                    if (matchingProducts.length > 0) {

                                        var cheapestProduct = matchingProducts.reduce((minProduct, product) => {
                                            return product.original_price < minProduct.original_price ? product : minProduct;
                                        }, matchingProducts[0]);

                                        variant_id_data.push(cheapestProduct.id);

                                        if (cheapestProduct.quantity >= value.specific_product_qty) {
                                            var sme_original_price = cheapestProduct.original_price * value.specific_product_qty;
                                        } else {
                                            var sme_original_price = cheapestProduct.original_price * cheapestProduct.quantity;
                                        }
                                        smeLineDiscounttag(value.discount_name, cheapestProduct.variant_id);

                                        let discountType = (value.discount_option == '0') ? '1' : ((value.discount_option == '1') ? '3' : '0');
                                        if (discountType === '3') {
                                            value.discount_value = value.discount_value * Shopify.currency.rate;
                                        }
                                        let discountDataObj = {
                                            "discountType": discountType,
                                            "discountVal": value.discount_value,
                                            "price": sme_original_price,
                                            "priceOver": 0,
                                            "qty": value.specific_product_qty
                                        };
                                        var discountCalCulation = smeDiscountCalculator(discountDataObj);

                                    }
                                }

                                if (discountCalCulation.appliedDiscount && discountCalCulation.appliedDiscount != '0') {
                                    smeResponse.progresssmeCartDiscount = Number(discountCalCulation.appliedDiscount);
                                    smeResponse.smeCartTotalAmount = smeCartTotalAmount - discountCalCulation.appliedDiscount;
                                    smeResponse.smeDiscounttagHtml += smePrepareDisTagHtml(value.discount_name, 0);
                                    smeResponse.sme_variant_id = variant_id_data;
                                }
                            }
                        }
                    }
                }
            });

            var nextFreeProd = 0;

        } else if (freeProductElements.length > 0 && smeCartData.items.length === freeProductElements.length) {
            smeTierFreeProductRemove({}, 0);
        }

        if (tierOfferMsg == '') {
            tierOfferMsg = tierCongratulationMsg.replace('{{offer-value}}', congratesMsg);
            if (document.querySelector(".shortCodeValReplace")) {
                document.querySelector(".shortCodeValReplace").innerHTML = tierOfferMsg;
            }
            document.querySelector("#canvas").width = document.querySelector('.widget1').offsetWidth;
            document.querySelector("#canvas").height = document.querySelector('.widget1').offsetHeight;
            (smeConfitteStatus == 0 && progressBarSettings.is_show_confetti == '0') ? setTimeout(function () { initConfetti() }, 1000) : '';
            smeConfitteStatus = 1;
        } else {
            if (document.querySelector(".shortCodeValReplace")) {
                document.querySelector(".shortCodeValReplace").innerHTML = tierOfferMsg;
            }
        }

    } else {
        /*smeJsObj('.widget1').hide();*/
    }
    return smeResponse;
}


async function smeTierFreeProductRemove(activeTier, nextFreeProd) {

    if (Object.keys(smeAddedFreeProdIds).length !== 0 || (!smeAddedFreeProdIds[0] || activeTier.discount_type !== '2')) {
        smeAddedFreeProdIds = {};
        let smeCartLineItems = document.querySelectorAll('.smeCartLineItem.smeFreeProduct');
        let removeItemNo = Array.from(smeCartLineItems).findIndex(item => item.classList.contains('smeFreeProduct')) + 1;
        let variantId = document.querySelector('.smeFreeProduct[data-product-id="' + activeTier.product_id + '"]').getAttribute('data-variant-id');
        let url = window.Shopify.routes.root + 'cart/change.js';
        let smePostData = 'id=' + variantId + '&quantity=0';
        let authHeader = { 'x-requested-with': 'XMLHttpRequest' };

        try {
            let smeApiResponse = await smePostAjaxApiFn(url, smePostData, authHeader);
            if (!smeApiResponse.status) {
                smeCartLineItems.forEach(item => item.remove());
            }
        } catch (error) {
            console.error("Error occurred while processing smeTierFreeProductRemove:", error);
        }
    } else {
        smeAddedFreeProdIds = {};
        let smeCartLineItems = document.querySelectorAll('.smeCartLineItem.smeFreeProduct');
        let removeItemNo = Array.from(smeCartLineItems).findIndex(item => item.classList.contains('smeFreeProduct')) + 1;

        let url = window.Shopify.routes.root + 'cart/change.js';
        let smePostData = 'line=' + removeItemNo + '&quantity=0';
        let authHeader = { 'x-requested-with': 'XMLHttpRequest' };

        try {
            let smeApiResponse = await smePostAjaxApiFn(url, smePostData, authHeader);
            if (smeApiResponse.status) {
                smeCartLineItems.forEach(item => item.remove());
            }
        } catch (error) {
            console.error("Error occurred while processing smeTierFreeProductRemove:", error);
        }
    }
}

async function smeProgressBarFreeProduct(activeTier, tempSecId) {
    let productHandle = activeTier.product_handle;
    let productUrl = 'https://' + smeSiteDomain + '/products/' + productHandle + '.js?currency=' + smeUserCurrency;
    let smeApiResponseData = await smeGetAjaxApiFn(productUrl);
    if (!smeApiResponseData.status) {
        let productData = smeApiResponseData;
        let variantData = productData['variants'][0];
        let variantId = variantData['id'];
        let propertieObj = {
            "__smeDiscountTag": activeTier.discount_name,
            "__smeProductDiscountType": "smeFreeProduct",
            "__smeProductforshiiping": "__smeProductforshiiping",
            "__smeProductDiscount": variantData.price / 100 * activeTier.product_qty,
            "__smeProductdiscount_value": variantData.price / 100 * activeTier.product_qty,
            "__smeWidgetProduct": "1-" + tempSecId,
            "__smeProgreesBar": 0,
        };
        let url = window.Shopify.routes.root + 'cart/add.js';
        let smePostData = JSON.stringify({ "id": variantId, "quantity": activeTier.product_qty, "properties": propertieObj });
        let authHeader = { "json": "true", 'x-requested-with': 'XMLHttpRequest' };
        let smeApiResponse = await smePostAjaxApiFn(url, smePostData, authHeader);
        if (!smeApiResponse.status) {
        } else {
            if (document.querySelector('.product_qty_rich_error_msg')) {
                document.querySelector('.product_qty_rich_error_msg').remove(); // previous error msg remove
            }
            let errorMsg = smeApiResponse.response.description ? smeApiResponse.response.description : smeApiResponse.response.message;
            let errorDiv = document.createElement('div');
            errorDiv.classList.add('product_qty_rich_error_msg');
            errorDiv.textContent = errorMsg;
            let cartItemMainBlock = document.querySelector('.cartItemMainBlock');
            cartItemMainBlock.parentNode.insertBefore(errorDiv, cartItemMainBlock.nextSibling);
            setTimeout(function () {
                errorDiv.style.display = 'none';
            }, 2000);
        }
    }
}

function smePrepareDisTagHtml(smeDiscountTag, isShopifyDiscouint) {
    let discountRemoveIcon = (isShopifyDiscouint) ?
        '<svg viewBox="0 0 20 20" class="salemaximize_discount-tag-icon" onclick="smeShopifyCouponRemove(this)" xmlns="http://www.w3.org/2000/svg">\
            <path d="M16.7071 4.70711C17.0976 4.31658 17.0976 3.68342 16.7071 3.29289C16.3166 2.90237 15.6834 2.90237 15.2929 3.29289L10 8.58579L4.70711 3.29289C4.31658 2.90237 3.68342 2.90237 3.29289 3.29289C2.90237 3.68342 2.90237 4.31658 3.29289 4.70711L8.58579 10L3.29289 15.2929C2.90237 15.6834 2.90237 16.3166 3.29289 16.7071C3.68342 17.0976 4.31658 17.0976 4.70711 16.7071L10 11.4142L15.2929 16.7071C15.6834 17.0976 16.3166 17.0976 16.7071 16.7071C17.0976 16.3166 17.0976 15.6834 16.7071 15.2929L11.4142 10L16.7071 4.70711Z" fill="'+ smeCartColorSettings.discount_tag_icon_color + '" class="GScartdiscounttagIconColor"></path>\
        </svg>'
        : '';
    let html = '\
        <div class="salemaximize__discount-tag-title smeDiscountTagLable" style="background: '+ smeCartColorSettings.discount_tag_bg_color + ';color: ' + smeCartColorSettings.discount_tag_text_color + '">\
            <div class="salemaximize__discount-tag-sub-title">\
                <p>'+ smeDiscountTag + '</p>  \
                '+ discountRemoveIcon + '\
            </div> \
        </div>';
    return html;
}

function smeLineDiscounttag(discountTag, target = '', coupon_code_remove = '') {

    if (coupon_code_remove == 1) {

        var lineDiscountTagHtml = '\
        <div class="salemaximize__discount-tag-title smeDiscountTagLable" style="background: '+ smeCartColorSettings.discount_tag_bg_color + ';color: ' + smeCartColorSettings.discount_tag_text_color + '">\
            <div class="salemaximize__discount-tag-sub-title">\
                <p>'+ discountTag + '</p>  \
                <svg viewBox="0 0 20 20" class="salemaximize_discount-tag-icon" onclick="smeShopifyCouponRemove(this)" xmlns="http://www.w3.org/2000/svg">\
            <path d="M16.7071 4.70711C17.0976 4.31658 17.0976 3.68342 16.7071 3.29289C16.3166 2.90237 15.6834 2.90237 15.2929 3.29289L10 8.58579L4.70711 3.29289C4.31658 2.90237 3.68342 2.90237 3.29289 3.29289C2.90237 3.68342 2.90237 4.31658 3.29289 4.70711L8.58579 10L3.29289 15.2929C2.90237 15.6834 2.90237 16.3166 3.29289 16.7071C3.68342 17.0976 4.31658 17.0976 4.70711 16.7071L10 11.4142L15.2929 16.7071C15.6834 17.0976 16.3166 17.0976 16.7071 16.7071C17.0976 16.3166 17.0976 15.6834 16.7071 15.2929L11.4142 10L16.7071 4.70711Z" fill="'+ smeCartColorSettings.discount_tag_icon_color + '" class="GScartdiscounttagIconColor"></path>\
        </svg>\
            </div> \
        </div>';
    } else {
        var lineDiscountTagHtml = '<div class="salemaximize_line_item_discount-tag-title smeLineItemDiscountTag" style="background:' + smeCartColorSettings.discount_tag_bg_color + ';color:' + smeCartColorSettings.discount_tag_text_color + '">\
        <div class="salemaximize_line_item_tag-sub-title">\
            <span class="salemaximize_line_discountText">'+ discountTag + '</span>\
        </div>\
    </div>';
    }


    if (status_code !== 1) {
        if (target) {
            let cartLineItems = document.querySelectorAll('.smeCartLineItem[data-variant-id="' + target + '"] .smeLineDiscountTagBlock');
            if (cartLineItems.length > 0) {
                cartLineItems.forEach(item => {
                    item.insertAdjacentHTML('beforeend', lineDiscountTagHtml);
                });
            }
        } else {

            var status_code = 0;
            document.querySelectorAll('.salemaximize_line_discountText').forEach(function (event) {
                if (event.innerHTML === discountTag) {
                    status_code = 1;
                }
            })
            let cartLineItems = document.querySelectorAll('.smeCartLineItem:not(.smeFreeProduct) .smeLineDiscountTagBlock');
            cartLineItems.forEach(function (item) {
                item.insertAdjacentHTML('beforeend', lineDiscountTagHtml);
            });
        }
    }
}

const smeFbTracking = (productData, eventName) => {
    let smeSettingsData = JSON.parse(sme_gm_dataobj.settings);
    let trackSetting = JSON.parse(smeSettingsData.track_pixels_event);
    if (typeof fbq != 'undefined' && trackSetting && trackSetting.facebook_pixel == 1) {
        if (eventName == 'AddToCart') {
            fbq('track', eventName, {
                value: parseFloat((productData.price / 100)).toFixed(2),
                currency: smeUserCurrency,
                content_ids: [productData.product_id],
                content_name: productData.title,
                content_type: 'product_group'
            });
        }
        if (eventName == 'InitiateCheckout') {
            let content_ids = [];
            productData.items.map((item, index) => {
                content_ids.push(item.product_id);
            });
            fbq('track', eventName, {
                value: parseFloat((productData.total_price / 100)).toFixed(2),
                currency: smeUserCurrency,
                content_ids: content_ids,
            });
        }
    }
};

const smeGoogleAnalytics = (productData, ga4Event) => {
    let smeSettingsData = JSON.parse(sme_gm_dataobj.settings);
    let trackSetting = JSON.parse(smeSettingsData.track_pixels_event);
    let dataLayer = [];
    if (typeof gtag != 'undefined' && trackSetting) {
        if (ga4Event == 'add_to_cart') {
            let discount = productData.properties && productData.properties.__smeProductDiscount ? parseFloat(productData.properties.__smeProductDiscount) : 0;
            var lineItem = {
                'item_id': productData.id,
                'item_name': productData.title ? productData.title : '',
                'affiliation': null,
                'coupon': null,
                'discount': discount,
                'index': 0,
                'item_brand': productData.vendor ? productData.vendor : '',
                'item_variant': productData.variant_title,
                'location_id': null,
                'price': (productData.price / 100).toFixed(2),
                'quantity': productData.quantity
            };

            if (trackSetting.google_analytics && trackSetting.google_analytics == 1) {
                dataLayer.push({ ecommerce: null });
                dataLayer.push({
                    'event': ga4Event,
                    'ecommerce': {
                        'currency': smeUserCurrency,
                        'value': (productData.final_line_price / 100).toFixed(2),
                        'items': [lineItem]
                    }
                });
            }

            if (trackSetting.google_tag_manager && trackSetting.google_tag_manager == 1) {
                gtag('event', 'add_to_cart', {
                    'currency': smeUserCurrency,
                    'value': (productData.final_line_price / 100).toFixed(2),
                    'items': [lineItem]
                });
            }
        }

        if (ga4Event == 'begin_checkout') {
            let items = [];
            productData.items.map((item, index) => {
                let discount = item.properties && item.properties.__smeProductDiscount ? parseFloat(item.properties.__smeProductDiscount) : 0;
                let items_onj = {
                    'item_id': item.id,
                    'item_name': item.title ? item.title : '',
                    'affiliation': null,
                    'coupon': null,
                    'discount': discount,
                    'index': index,
                    'item_brand': item.vendor ? item.vendor : '',
                    'item_variant': item.variant_title,
                    'location_id': null,
                    'price': (item.price / 100).toFixed(2),
                    'quantity': item.quantity
                }
                items.push(items_onj);
            });

            if (trackSetting.google_analytics && trackSetting.google_analytics == 1) {
                dataLayer.push({ ecommerce: null });
                dataLayer.push({
                    'event': ga4Event,
                    'ecommerce': {
                        'currency': smeUserCurrency,
                        'value': parseFloat((productData.total_price / 100)).toFixed(2),
                        'items': items
                    }
                });
            }

            if (trackSetting.google_tag_manager && trackSetting.google_tag_manager == 1) {
                gtag('event', 'begin_checkout', {
                    'currency': smeUserCurrency,
                    'value': parseFloat((productData.total_price / 100)).toFixed(2),
                    'items': items
                });
            }
        }
    }
};

const smeAcceptTermCondition = (thisObj) => {
    const obj = thisObj;

    if (obj.checked) {
        let checkoutWdata = JSON.parse(sme_gm_dataobj.checkout_widget);
        let tempSecId = document.querySelector('.widget6').getAttribute('data-id');
        checkoutWdata = checkoutWdata[tempSecId];
        document.querySelector('.Checkout_confirmationMessageHtml').innerHTML = checkoutWdata['confirmation_message'];
    }
}

var smeShippingData = {};
async function smeGetShippingZone() {
    const smeShippingCountry = document.querySelector('.smeShippingCountry');
    if (smeShippingCountry) {
        const smeShippingCalculatorBtn = document.querySelector('.smeShippingCalculatorBtn');
        smeShippingCalculatorBtn.setAttribute("onclick", "smeShippingCalculator(this)");
        document.querySelector('.smeShippingProvinceBlock').style.display = 'none';
        document.querySelector('.smeShippingZipCodeBlock').style.display = 'none';
        let token = sme_gm_dataobj.token;
        let url = smeAppUrl + "get_data_api.php";
        const smePostData = JSON.stringify({
            method_name: "get_shipping_zone",
            shop: Shopify.shop,
            country: Shopify.country,
            token: token
        });
        const authHeader = { 'Authentication': smeReqHeader.Authentication };

        let smeXhrHttp = new XMLHttpRequest();
        smeXhrHttp.open("POST", url, true);
        let headerObj = (authHeader['json']) ? { 'Content-type': 'application/json; charset=UTF-8' } : { 'Content-type': 'application/x-www-form-urlencoded' };
        if (authHeader != '') {
            headerObj = {
                ...headerObj,
                ...authHeader
            };
        }
        delete headerObj['json'];
        for (let key in headerObj) {
            smeXhrHttp.setRequestHeader(key, headerObj[key])
        }
        smeXhrHttp.onload = function () {

            if (smeXhrHttp.status >= 200 && smeXhrHttp.status < 300) {
                var smeApiResponse = JSON.parse(this.responseText);
                if (!smeApiResponse.status && smeApiResponse.res != 'fail') {
                    if (smeApiResponse.info && smeApiResponse.country_list) {
                        const countries = smeApiResponse.country_list;
                        let countryOption = '';
                        countries.forEach(function (data) {
                            let selectedCountry = (Shopify.country && Shopify.country == data.c_code) ? 'selected' : '';
                            countryOption += '<option value="' + data.c_code + '" ' + selectedCountry + '>' + data.c_name + '</option>';
                            smeShippingData[data.c_code] = { 'postalStatus': data.c_postal_code, 'provinces': data.c_provinces };
                        });
                        smeShippingCountry.innerHTML = countryOption;
                        smeShippingCountry.dispatchEvent(new Event('change'));
                    }
                }
            }
        };

        smeXhrHttp.send(smePostData);
    }
}


async function smeShippingCalculator(thisObj) {

    thisObj.classList.add('disabled');
    let oldBtnText = thisObj.innerHTML;
    thisObj.innerHTML = btnLoader;
    let shippingCalError = document.querySelector('.smeShippingCalError');
    if (shippingCalError) {
        shippingCalError.parentNode.removeChild(shippingCalError);
    }
    document.querySelector('.smeShippingdetails').innerHTML = '';
    let country = document.querySelector('.smeShippingCountry').value;
    let province = document.querySelector('.smeShippingProvince').value;
    let zipCode = document.querySelector('.smeZipCode').value;
    let provinceStr = (province) ? '&shipping_address[province]=' + province : '';
    let zipCodeStr = (zipCode) ? '&shipping_address[zip]=' + zipCode : '';
    let productUrl = '/cart/shipping_rates.json?shipping_address[country]=' + country + provinceStr + zipCodeStr;
    let smeApiResponseData = await smeGetAjaxApiFn(productUrl);
    let errorHtml = '';
    if (!smeApiResponseData.status) {


        let checkoutData = JSON.parse(sme_gm_dataobj.checkout_widget);
        let checkoutId = document.querySelector(".widget6").dataset.id;
        checkoutData = checkoutData[checkoutId];
        if (smeApiResponseData.shipping_rates && smeApiResponseData.shipping_rates.length > 0) {
            let ratesLengthText = (checkoutData.shipping_charge_available_text != '') ? checkoutData.shipping_charge_available_text.replace('{{numOfRates}}', smeApiResponseData.shipping_rates.length) : '';
            let detailsHtml = ratesLengthText;
            smeApiResponseData.shipping_rates.forEach(function (data) {
                let priceHtml = (data.price != '0.00') ? smeCurrencyFormate + data.price : 'Free';
                detailsHtml += '<p>' + data.code + ': ' + priceHtml + '</p>';
            });
            document.querySelector('.smeShippingdetails').innerHTML = detailsHtml;
        } else {
            errorHtml = (checkoutData.shipping_charge_empty_text != '') ? '<div class="salemaximize__shipping-error-text">' + checkoutData.shipping_charge_empty_text + '</div>' : '';
        }
    } else if (smeApiResponseData.response) {

        Object.entries(smeApiResponseData.response).forEach(([key, data]) => {
            errorHtml += '<div class="salemaximize__shipping-error-text">' + data[0] + '</div>';
        });
    }
    thisObj.innerHTML = oldBtnText;

    let errorContainer = document.createElement('div');
    errorContainer.classList.add('salemaximize__shipping-error', 'smeShippingCalError');
    let innerContainer = document.createElement('div');
    innerContainer.classList.add('salemaximize__error-required');
    innerContainer.innerHTML = errorHtml;

    errorContainer.appendChild(innerContainer);

    let shippingZipCodeBlock = document.querySelector('.smeShippingZipCodeBlock');
    shippingZipCodeBlock.parentNode.insertBefore(errorContainer, shippingZipCodeBlock.nextSibling);

    setTimeout(() => {
        let shippingCalError = document.querySelector('.smeShippingCalError');
        if (shippingCalError) {
            shippingCalError.parentNode.removeChild(shippingCalError);
        }
        thisObj.innerHTML = oldBtnText;
    }, 4000);
    thisObj.classList.remove('disabled');
}

const smeNewLineDisableTextarea = () => {
    document.querySelectorAll('.smeTextareaInput').forEach(element => {
        element.addEventListener('keydown', function (e) {
            if (e.keyCode == 13) {
                e.preventDefault();
            }
        });
    });
}

const smeCheckShippingProvince = (thisObj) => {
    let provinceCode = thisObj.value;
    let CountryData = smeShippingData[provinceCode];
    if (CountryData.provinces) {
        document.querySelector('.smeShippingProvinceBlock').style.display = 'block';
        let provinceList = JSON.parse(CountryData['provinces']);
        let provinceOption = '';
        provinceList.forEach(data => {
            provinceOption += '<option value="' + data.code + '">' + data.name + '</option>';
        });
        document.querySelector('.smeShippingProvince').innerHTML = provinceOption;
    } else {
        document.querySelector('.smeShippingProvinceBlock').style.display = 'none';
        document.querySelector('.smeShippingProvince').innerHTML = '';
    }

    if (CountryData.postalStatus != '' && CountryData.postalStatus == '1') {
        document.querySelector('.smeShippingZipCodeBlock').style.display = 'block';
    } else {
        document.querySelector('.smeShippingZipCodeBlock').style.display = 'none';
    }
}



function smeRecommendationInit() {
    var sme_gm_recommendation_widget = JSON.parse(sme_gm_dataobj.recommendation_widget);
    var tempSecId = Object.keys(sme_gm_recommendation_widget);

    var viewType = sme_gm_recommendation_widget[tempSecId].product_type;
    if (viewType === '0') {
        smeRecomShopifyProductView();
    }

    if (viewType === '1') {
        smeRecomSpecificProductView();
    }

    if (viewType === '4') {
        smeRecomAbandonedProductView();
    }
}

var Vertical_slideContainer;
async function smeRecomShopifyProductView() {
    if (smeCartData.items.length > 0) {
        document.querySelector(".Vertical_upsell_recomFrontProductView").removeAttribute('style');

        let productIdArray = smeCartData.items.map(function (productData) {
            return productData.product_id;
        });

        var Vertical_upsell_recomSkeletonProductView = document.querySelector('.recomSkeletonProductView.Vertical_upsell_recomSkeletonProductView');
        if (Vertical_upsell_recomSkeletonProductView) {
            Vertical_upsell_recomSkeletonProductView.remove();
        }

        let cartItemLength = Math.floor(Math.random() * productIdArray.length);
        let productId = productIdArray[cartItemLength];
        let url = '/recommendations/products.json?currency=' + smeUserCurrency + '&product_id=' + productId;
        let smeApiResponse = await smeGetAjaxApiFn(url);

        let maxRecommendedProducts = 10;
        let recommendedProducts = [];

        let shuffledProducts = smeApiResponse.products.sort(() => Math.random() - 0.5);
        recommendedProducts = shuffledProducts.slice(0, maxRecommendedProducts);

        //recommProductlength = recommendedProducts.length;
        if (!smeApiResponse.status && recommendedProducts.length > 0) {
            var sme_gm_recommendation_widget = JSON.parse(sme_gm_dataobj.recommendation_widget);
            var tempSecId = Object.keys(sme_gm_recommendation_widget);
            let upsellHtml = '';

            recommendedProducts.forEach(function (recomProductData) {
                upsellHtml += smePrepareRecommendationHtml(recomProductData, tempSecId);
                smeJdgmReview(recomProductData.handle, recomProductData.id);

            });

            document.querySelector('.Vertical_upsell_recomFrontProductView').innerHTML = upsellHtml;

            document.querySelector('.widget4').style.display = 'block';

            Vertical_slideContainer = document.querySelector('.Vertical_upsell_recomProductSlider');

            if (document.querySelectorAll('.Vertical_upsell_recomProductSlider .Vertical_upsell_smeProductBlock').length > 3) {

                document.querySelector('.Vertical_upsell_recomProductSlider').style.height = '';
                document.querySelector('.Vertical_upsell_recomProductSlider').style.transform = '';

                Vertical_currentSlide = 0;
                var Vertical_divcopynode = document.querySelectorAll('.Vertical_upsell_recomProductSlider .Vertical_upsell_smeProductBlock');
                
                Vertical_startX = 0;
                Vertical_isDragging = false;
                Vertical_hasSwiped = false;
                Vertical_startPosition = 0;
                Vertical_currentTranslate = 0;
                Vertical_previousTranslate = 0;
                Vertical_swipeThreshold = 50;

                var Vertical_slider_button = `<button id="Vertical_prevBtn" onclick="Vertical_prevSlide()" class="salemaximize__slick-previous-arrow" aria-label="Previous" type="button" style=""><svg xmlns="http://www.w3.org/2000/svg" width="8" height="14" viewBox="0 0 8 14" fill="none"><path d="M7 1L1 7L7 13" stroke="#666666" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg></button>
                    <button id="Vertical_nextBtn" onclick="Vertical_nextSlide()" class="salemaximize__slick-next-arrow" aria-label="Next" type="button" style=""><svg xmlns="http://www.w3.org/2000/svg" width="8" height="14" viewBox="0 0 8 14" fill="none"><path d="M1 1L7 7L1 13" stroke="#666666" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg></button>`;

                if (!document.querySelector('#Vertical_nextBtn') && !document.querySelector('#Vertical_prevBtn')) {
                    document.querySelector('.Vertical_upsell_recomProductSlider').insertAdjacentHTML('afterend', Vertical_slider_button);
                }

                Vertical_divcopynode.forEach((element, key) => {
                    element.style.height = `${element.offsetHeight}px`;
                });
                Vertical_slideContainer.style.height = `${document.querySelectorAll('.Vertical_upsell_recomProductSlider .Vertical_upsell_smeProductBlock')[0].offsetHeight}px`;

                Vertical_slideContainer.addEventListener('touchstart', Vertical_startTouch);
                Vertical_slideContainer.addEventListener('touchmove', Vertical_moveTouch);
                Vertical_slideContainer.addEventListener('touchend', Vertical_endTouch);
                Vertical_slideContainer.addEventListener('touchcancel', Vertical_endTouch); // Fallback for when touchend is not fired
                window.addEventListener('touchend', Vertical_endTouch);// Ensure touchend is captured globally
            } else {

                if (document.querySelector('#Vertical_nextBtn')) {
                    document.querySelector('#Vertical_nextBtn').remove();
                }

                if (document.querySelector('#Vertical_prevBtn')) {
                    document.querySelector('#Vertical_prevBtn').remove();
                }

                Vertical_slideContainer.removeEventListener('touchstart', Vertical_startTouch);
                Vertical_slideContainer.removeEventListener('touchmove', Vertical_moveTouch);
                Vertical_slideContainer.removeEventListener('touchend', Vertical_endTouch);
                Vertical_slideContainer.removeEventListener('touchcancel', Vertical_endTouch); // Fallback for when touchend is not fired
                window.removeEventListener('touchend', Vertical_endTouch);
            }
            var varients_status = true;
            var review_status = true;
            var recommandation_style = setInterval(() => {
                var recomProductMainDiv_styles = '';
                document.querySelectorAll('.salemaximize__recommandation-product-info .salemaximize__star-review').forEach(function (event) {
                    if (event.offsetHeight > 0 && review_status) {
                        recomProductMainDiv_styles += '.salemaximize__recommandation-product-info .salemaximize__star-review{height: ' + event.offsetHeight + 'px;}'
                        review_status = false;
                    }
                });
                document.querySelectorAll('.GSrecommendationboxBorderColor').forEach(function (event) {
                    if (event.offsetHeight > 0 && varients_status) {
                        recomProductMainDiv_styles += '.GSrecommendationboxBorderColor{display: block !important;}';
                        varients_status = false;
                    }
                });

                if (recomProductMainDiv_styles) {
                    document.querySelector('.recomProductMainDiv').insertAdjacentHTML('afterbegin', '<style>' + recomProductMainDiv_styles + '</style>');
                    clearInterval(recommandation_style);
                }

            }, 800);

            if (verticaldrawercall == true) {
                document.querySelector('.widget4').style.visibility = 'hidden';
                verticaldrawercall = true;
            } else {
                document.querySelector('.widget4').style.visibility = 'visible';
            }

        } else {
            document.querySelector('.widget4').style.display = 'none';
        }

    }
}

function smeRecomSpecificProductView() {

    document.querySelector(".Vertical_upsell_recomFrontProductView").removeAttribute('style');

    var Vertical_upsell_recomSkeletonProductView = document.querySelector('.recomSkeletonProductView.Vertical_upsell_recomSkeletonProductView');
    if (Vertical_upsell_recomSkeletonProductView) {
        Vertical_upsell_recomSkeletonProductView.remove();
    }

    let productIdArray = smeCartData.items.map(function (productData) {
        return productData.product_id;
    });

    var sme_gm_recommendation_widget = JSON.parse(sme_gm_dataobj.recommendation_widget);
    var tempSecId = Object.keys(sme_gm_recommendation_widget);
    let product_id = sme_gm_recommendation_widget[tempSecId].product_ids.split(",");
    let upsellHtml = '';
    let productIndex = 0;

    let productIdSet = new Set(productIdArray);
    let filteredProductIds = product_id.filter(id => !productIdSet.has(Number(id)));
    if (filteredProductIds.length > 0) {
        var filteredProduct_Ids = filteredProductIds.join(",");
        let data_url = smeAppUrl + "vertical_upsell_call.php";
        const smePostData = JSON.stringify({
            method_name: "upsell_specific_view",
            shop: Shopify.shop,
            token: sme_gm_dataobj.token,
            product_ids: filteredProduct_Ids
        });
        let authHeader = { 'Authentication': smeReqHeader.Authentication };

        let smeXhrHttp = new XMLHttpRequest();
        smeXhrHttp.open("POST", data_url, true);
        let headerObj = (authHeader['json']) ? { 'Content-type': 'application/json; charset=UTF-8' } : { 'Content-type': 'application/x-www-form-urlencoded' };
        if (authHeader != '') {
            headerObj = {
                ...headerObj,
                ...authHeader
            };
        }
        delete headerObj['json'];
        for (let key in headerObj) {
            smeXhrHttp.setRequestHeader(key, headerObj[key])
        }
        smeXhrHttp.onload = function () {

            if (smeXhrHttp.status >= 200 && smeXhrHttp.status < 300) {
                var smeApiResponse = JSON.parse(this.responseText);

                for (let recomProductData of smeApiResponse) {
                    upsellHtml += smePrepareRecommendationHtml(recomProductData, tempSecId);
                    smeJdgmReview(recomProductData.handle, recomProductData.id);
                }

                document.querySelector(".Vertical_upsell_recomFrontProductView").innerHTML = upsellHtml;
                document.querySelector('.widget4').style.display = 'block';

                Vertical_slideContainer = document.querySelector('.Vertical_upsell_recomProductSlider');

                if (document.querySelectorAll('.Vertical_upsell_recomProductSlider .Vertical_upsell_smeProductBlock').length > 3) {

                    document.querySelector('.Vertical_upsell_recomProductSlider').style.height = '';
                    document.querySelector('.Vertical_upsell_recomProductSlider').style.transform = '';

                    Vertical_currentSlide = 0;
                    var Vertical_divcopynode = document.querySelectorAll('.Vertical_upsell_recomProductSlider .Vertical_upsell_smeProductBlock');
                    
                    Vertical_startX = 0;
                    Vertical_isDragging = false;
                    Vertical_hasSwiped = false;
                    Vertical_startPosition = 0;
                    Vertical_currentTranslate = 0;
                    Vertical_previousTranslate = 0;
                    Vertical_swipeThreshold = 50;

                    var Vertical_slider_button = `<button id="Vertical_prevBtn" onclick="Vertical_prevSlide()" class="salemaximize__slick-previous-arrow" aria-label="Previous" type="button" style=""><svg xmlns="http://www.w3.org/2000/svg" width="8" height="14" viewBox="0 0 8 14" fill="none"><path d="M7 1L1 7L7 13" stroke="#666666" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg></button>
                    <button id="Vertical_nextBtn" onclick="Vertical_nextSlide()" class="salemaximize__slick-next-arrow" aria-label="Next" type="button" style=""><svg xmlns="http://www.w3.org/2000/svg" width="8" height="14" viewBox="0 0 8 14" fill="none"><path d="M1 1L7 7L1 13" stroke="#666666" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg></button>`;

                    if (!document.querySelector('#Vertical_nextBtn') && !document.querySelector('#Vertical_prevBtn')) {
                        document.querySelector('.Vertical_upsell_recomProductSlider').insertAdjacentHTML('afterend', Vertical_slider_button);
                    }

                    Vertical_divcopynode.forEach((element, key) => {
                        element.style.height = `${element.offsetHeight}px`;
                    });
                    Vertical_slideContainer.style.height = `${document.querySelectorAll('.Vertical_upsell_recomProductSlider .Vertical_upsell_smeProductBlock')[0].offsetHeight}px`;

                    Vertical_slideContainer.addEventListener('touchstart', Vertical_startTouch);
                    Vertical_slideContainer.addEventListener('touchmove', Vertical_moveTouch);
                    Vertical_slideContainer.addEventListener('touchend', Vertical_endTouch);
                    Vertical_slideContainer.addEventListener('touchcancel', Vertical_endTouch); // Fallback for when touchend is not fired
                    window.addEventListener('touchend', Vertical_endTouch); // Ensure touchend is captured globally
                } else {

                    if (document.querySelector('#Vertical_nextBtn')) {
                        document.querySelector('#Vertical_nextBtn').remove();
                    }

                    if (document.querySelector('#Vertical_prevBtn')) {
                        document.querySelector('#Vertical_prevBtn').remove();
                    }

                    Vertical_slideContainer.removeEventListener('touchstart', Vertical_startTouch);
                    Vertical_slideContainer.removeEventListener('touchmove', Vertical_moveTouch);
                    Vertical_slideContainer.removeEventListener('touchend', Vertical_endTouch);
                    Vertical_slideContainer.removeEventListener('touchcancel', Vertical_endTouch); // Fallback for when touchend is not fired
                    window.removeEventListener('touchend', Vertical_endTouch);
                }

                var varients_status = true;
                var review_status = true;
                var recommandation_style = setInterval(() => {
                    var recomProductMainDiv_styles = '';
                    document.querySelectorAll('.salemaximize__recommandation-product-info .salemaximize__star-review').forEach(function (event) {
                        if (event.offsetHeight > 0 && review_status) {
                            recomProductMainDiv_styles += '.salemaximize__recommandation-product-info .salemaximize__star-review{height: ' + event.offsetHeight + 'px;}'
                            review_status = false;
                        }
                    });
                    document.querySelectorAll('.GSrecommendationboxBorderColor').forEach(function (element) {
                        if (element.style.visibility !== 'hidden' && varients_status) {
                            recomProductMainDiv_styles += '.GSrecommendationboxBorderColor{display: block !important;}';
                            varients_status = false;
                        }
                    });

                    if (recomProductMainDiv_styles) {
                        document.querySelector('.recomProductMainDiv').insertAdjacentHTML('afterbegin', '<style>' + recomProductMainDiv_styles + '</style>');
                        clearInterval(recommandation_style);
                    }

                }, 800);


                if (verticaldrawercall == true) {
                    document.querySelector('.widget4').style.visibility = 'hidden';
                    verticaldrawercall = true;
                } else {
                    document.querySelector('.widget4').style.visibility = 'visible';
                }
            }
        };

        smeXhrHttp.send(smePostData);

    } else {
        setTimeout(() => {
            document.querySelector('.widget4').style.display = 'none';
        }, 1000);
        
    }
}

async function smeRecomAbandonedProductView() {

    document.querySelector(".Vertical_upsell_recomFrontProductView").removeAttribute('style');

    var Vertical_upsell_recomSkeletonProductView = document.querySelector('.recomSkeletonProductView.Vertical_upsell_recomSkeletonProductView');
    if (Vertical_upsell_recomSkeletonProductView) {
        Vertical_upsell_recomSkeletonProductView.remove();
    }

    let productIdArray = smeCartData.items.map(function (productData) {
        return productData.handle;
    });

    let sme_gm_recommendation_widget = JSON.parse(sme_gm_dataobj.recommendation_widget);
    var tempSecId = Object.keys(sme_gm_recommendation_widget);
    var token = sme_gm_dataobj.token;
    let url = smeAppUrl + "vertical_upsell_call.php";
    const smePostData = JSON.stringify({
        method_name: "upsell_abandoned_view",
        shop: Shopify.shop,
        token: token
    });
    let authHeader = { 'Authentication': smeReqHeader.Authentication };
    let smeApiResponse = await smePostAjaxApiFn(url, smePostData, authHeader);
    if (smeApiResponse.res === 'success') {

        if (smeApiResponse.info) {
            let product_id = JSON.parse(smeApiResponse.info);
            let upsellHtml = '';
            let productIdSet = new Set(productIdArray);
            let filteredProductIds = product_id.filter(id => !productIdSet.has(id));
            if (filteredProductIds.length > 0) {
                for (let handleVal of filteredProductIds) {

                    const url = 'https://' + smeSiteDomain + '/products/' + handleVal + '.js?currency=' + smeUserCurrency;
                    try {
                        const response = await fetch(url, {
                            method: 'GET',
                            headers: {
                                'Content-Type': 'application/json',
                                'X-Shopify-Access-Token': `${sme_gm_dataobj.token}`
                            }
                        });

                        if (!response.ok) {
                            throw new Error('Failed to fetch product. HTTP status code: ' + response.status);
                        }

                        const data = await response.json();

                        upsellHtml += smePrepareRecommendationHtml(data, tempSecId);
                        smeJdgmReview(data.handle, data.id);
                    } catch (error) {
                        console.error('Error fetching product:', error);
                        document.querySelector('.widget4').style.display = 'none';
                        return null;
                    }
                }

                document.querySelector(".Vertical_upsell_recomFrontProductView").innerHTML = upsellHtml;

                document.querySelector('.widget4').style.display = 'block';

                Vertical_slideContainer = document.querySelector('.Vertical_upsell_recomProductSlider');

                if (document.querySelectorAll('.Vertical_upsell_recomProductSlider .Vertical_upsell_smeProductBlock').length > 3) {

                    document.querySelector('.Vertical_upsell_recomProductSlider').style.height = '';
                    document.querySelector('.Vertical_upsell_recomProductSlider').style.transform = '';

                    Vertical_currentSlide = 0;
                    var Vertical_divcopynode = document.querySelectorAll('.Vertical_upsell_recomProductSlider .Vertical_upsell_smeProductBlock');
                    
                    Vertical_startX = 0;
                    Vertical_isDragging = false;
                    Vertical_hasSwiped = false;
                    Vertical_startPosition = 0;
                    Vertical_currentTranslate = 0;
                    Vertical_previousTranslate = 0;
                    Vertical_swipeThreshold = 50;

                    var Vertical_slider_button = `<button id="Vertical_prevBtn" onclick="Vertical_prevSlide()" class="salemaximize__slick-previous-arrow" aria-label="Previous" type="button" style=""><svg xmlns="http://www.w3.org/2000/svg" width="8" height="14" viewBox="0 0 8 14" fill="none"><path d="M7 1L1 7L7 13" stroke="#666666" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg></button>
                        <button id="Vertical_nextBtn" onclick="Vertical_nextSlide()" class="salemaximize__slick-next-arrow" aria-label="Next" type="button" style=""><svg xmlns="http://www.w3.org/2000/svg" width="8" height="14" viewBox="0 0 8 14" fill="none"><path d="M1 1L7 7L1 13" stroke="#666666" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg></button>`;

                    if (!document.querySelector('#Vertical_nextBtn') && !document.querySelector('#Vertical_prevBtn')) {
                        document.querySelector('.Vertical_upsell_recomProductSlider').insertAdjacentHTML('afterend', Vertical_slider_button);
                    }

                    Vertical_divcopynode.forEach((element, key) => {
                        element.style.height = `${element.offsetHeight}px`;
                    });
                    Vertical_slideContainer.style.height = `${document.querySelectorAll('.Vertical_upsell_recomProductSlider .Vertical_upsell_smeProductBlock')[0].offsetHeight}px`;

                    Vertical_slideContainer.addEventListener('touchstart', Vertical_startTouch);
                    Vertical_slideContainer.addEventListener('touchmove', Vertical_moveTouch);
                    Vertical_slideContainer.addEventListener('touchend', Vertical_endTouch);
                    Vertical_slideContainer.addEventListener('touchcancel', Vertical_endTouch); // Fallback for when touchend is not fired
                    window.addEventListener('touchend', Vertical_endTouch); // Ensure touchend is captured globally
                } else {

                    if (document.querySelector('#Vertical_nextBtn')) {
                        document.querySelector('#Vertical_nextBtn').remove();
                    }

                    if (document.querySelector('#Vertical_prevBtn')) {
                        document.querySelector('#Vertical_prevBtn').remove();
                    }

                    Vertical_slideContainer.removeEventListener('touchstart', Vertical_startTouch);
                    Vertical_slideContainer.removeEventListener('touchmove', Vertical_moveTouch);
                    Vertical_slideContainer.removeEventListener('touchend', Vertical_endTouch);
                    Vertical_slideContainer.removeEventListener('touchcancel', Vertical_endTouch); // Fallback for when touchend is not fired
                    window.removeEventListener('touchend', Vertical_endTouch);
                }

                var varients_status = true;
                var review_status = true;
                var recommandation_style = setInterval(() => {
                    var recomProductMainDiv_styles = '';
                    document.querySelectorAll('.salemaximize__recommandation-product-info .salemaximize__star-review').forEach(function (event) {
                        if (event.offsetHeight > 0 && review_status) {
                            recomProductMainDiv_styles += '.salemaximize__recommandation-product-info .salemaximize__star-review{height: ' + event.offsetHeight + 'px;}'
                            review_status = false;
                        }
                    });
                    document.querySelectorAll('.GSrecommendationboxBorderColor').forEach(function (event) {
                        if (event.offsetHeight > 0 && varients_status) {
                            recomProductMainDiv_styles += '.GSrecommendationboxBorderColor{display: block !important;}';
                            varients_status = false;
                        }
                    });

                    if (recomProductMainDiv_styles) {
                        document.querySelector('.recomProductMainDiv').insertAdjacentHTML('afterbegin', '<style>' + recomProductMainDiv_styles + '</style>');
                        clearInterval(recommandation_style);
                    }

                }, 800);

                if (verticaldrawercall == true) {
                    document.querySelector('.widget4').style.visibility = 'hidden';
                    verticaldrawercall = true;
                } else {
                    document.querySelector('.widget4').style.visibility = 'visible';
                }
            } else {
                document.querySelector('.widget4').style.display = 'none';
            }
        } else {
            document.querySelector('.widget4').style.display = 'none';
        }
    }
}

let Vertical_currentSlide = 0;
let Vertical_startX = 0;
let Vertical_isDragging = false;
let Vertical_hasSwiped = false;
let Vertical_startPosition = 0;
let Vertical_currentTranslate = 0;
let Vertical_previousTranslate = 0;
var Vertical_swipeThreshold = 50;

function Vertical_showSlide(index) {
    const slides = document.querySelector('.Vertical_upsell_recomProductSlider');
    if (!slides) return;

    const slideWidth = document.querySelector('.Vertical_upsell_recomProductSlider .Vertical_upsell_smeProductBlock').clientWidth;
    slides.style.transform = `translateX(${-index * slideWidth}px)`;
    Vertical_currentTranslate = (-index * slideWidth);
    slides.style.transition = 'transform 600ms, height 600ms';
    requestAnimationFrame(() => {
        document.querySelectorAll('.Vertical_upsell_recomProductSlider .Vertical_upsell_smeProductBlock')[index].offsetHeight;
        slides.style.height = `${document.querySelectorAll('.Vertical_upsell_recomProductSlider .Vertical_upsell_smeProductBlock')[index].offsetHeight}px`;
    });
    Vertical_currentSlide = index;

}

function Vertical_nextSlide() {
    const totalSlides = document.querySelectorAll('.Vertical_upsell_recomProductSlider .Vertical_upsell_smeProductBlock').length;
    Vertical_currentSlide = (Vertical_currentSlide + 1) % totalSlides;
    Vertical_showSlide(Vertical_currentSlide);
}

function Vertical_prevSlide() {
    const totalSlides = document.querySelectorAll('.Vertical_upsell_recomProductSlider .Vertical_upsell_smeProductBlock').length;
    Vertical_currentSlide = (Vertical_currentSlide - 1 + totalSlides) % totalSlides;
    Vertical_showSlide(Vertical_currentSlide);
}

// Touch Events for Swipe Detection on Mobile Devices
function Vertical_startTouch(e) {
    Vertical_startX = e.touches[0].clientX;
    Vertical_isDragging = true;
    Vertical_hasSwiped = false;
    Vertical_startPosition = Vertical_currentTranslate;
    Vertical_slideContainer.style.transition = 'none';
}

function Vertical_moveTouch(e) {
    if (!Vertical_isDragging) return;
    const currentPosition = e.touches[0].clientX;
    const moveDistance = currentPosition - Vertical_startX;


    Vertical_hasSwiped = true;
    Vertical_currentTranslate = Vertical_startPosition + moveDistance;
    Vertical_slideContainer.style.transform = `translateX(${Vertical_currentTranslate}px)`;
}

function Vertical_endTouch() {
    if (!Vertical_isDragging) return;
    Vertical_isDragging = false;

    // Only slide if a swipe was detected
    if (Vertical_hasSwiped) {

        const slideWidth = document.querySelector('.Vertical_upsell_recomProductSlider .Vertical_upsell_smeProductBlock').clientWidth;
        const movedBy = Vertical_currentTranslate - Vertical_previousTranslate;

        if (movedBy < -Vertical_swipeThreshold) {
            Vertical_nextSlide();
        } else if (movedBy > Vertical_swipeThreshold) {
            Vertical_prevSlide();
        } else {
            Vertical_showSlide(Vertical_currentSlide);
        }

        Vertical_previousTranslate = -Vertical_currentSlide * slideWidth;
    } else {
        // Reset position if no swipe was detected
        Vertical_showSlide(Vertical_currentSlide);
    }
}


function smePrepareRecommendationHtml(recomProductData, tempSecId) {
    let sourceId = document.querySelector('.widget4').getAttribute('data-source-id');
    let dbSettings = JSON.parse(sme_gm_dataobj.recommendation_widget);
    var tempSecId = Object.keys(dbSettings);

    var variantData = recomProductData.variants;

    let selectedVariantData = variantData[0];

    let recommendationSettings = dbSettings[tempSecId];
    let general_setting = JSON.parse(sme_gm_dataobj.general_setting);
    let colorSettings = JSON.parse(general_setting.recommendation_color_setting);
    if (recommendationSettings === '') {
        console.log("prepare Upsell product in upsell setting not found.")
        return false;
    }
    recommendationSettings = {
        ...recommendationSettings,
        ...colorSettings
    };


    let isShowComparePrice = (recommendationSettings.is_show_compare_price === '0') ? 'block' : 'none';

    if (dbSettings[tempSecId].product_type === '0' || dbSettings[tempSecId].product_type === '4') {
        if (recomProductData.featured_image === null) {
            recomProductData.featured_image = smeAppUrl + "assets/img/placeholder.png";
        }

        var variantsHtml = smeGetVariantsBox(variantData, variantData[0].id, recomProductData.featured_image);
        var sme_images = recomProductData.featured_image;
        var sourceComparePrice = selectedVariantData.compare_at_price !== 0 && selectedVariantData.compare_at_price !== null ? (parseFloat(selectedVariantData.compare_at_price) / 100).toFixed(2) : (parseFloat(selectedVariantData.price) / 100).toFixed(2);
        let discountDataObj = { "discountType": recommendationSettings.discount_type, "discountVal": recommendationSettings.discount_value, "price": selectedVariantData.price, "priceOver": recommendationSettings.price_over_value, "qty": 1 };
        var discountCalCulation = smeDiscountCalculator(discountDataObj);
        var sourcePrice = parseFloat(discountCalCulation.discountedPrice).toFixed(2);
    }

    if (dbSettings[tempSecId].product_type === '1') {
        if (recomProductData.image.src === null) {
            recomProductData.image.src = smeAppUrl + "assets/img/placeholder.png";
        }
        var variantsHtml = smeGetVariantsBox(variantData, variantData[0].id, recomProductData.images, 1);
        var sme_images = recomProductData.image.src;

        var sourceComparePrice = 0;
        const presentmentPrice = selectedVariantData.presentment_prices.find(priceData =>
            priceData.price.currency_code === Shopify.currency.active

        );
        if (presentmentPrice.compare_at_price !== null) {
            sourceComparePrice = presentmentPrice.compare_at_price.amount;
        } else {
            sourceComparePrice = selectedVariantData.compare_at_price !== 0 && selectedVariantData.compare_at_price !== null ? parseFloat(selectedVariantData.compare_at_price * Shopify.currency.rate).toFixed(2) : parseFloat(selectedVariantData.price * Shopify.currency.rate).toFixed(2);
        }

        let discountDataObj = { "discountType": recommendationSettings.discount_type, "discountVal": recommendationSettings.discount_value, "price": presentmentPrice.price.amount * 100, "priceOver": recommendationSettings.price_over_value, "qty": 1 };
        var discountCalCulation = smeDiscountCalculator(discountDataObj);

        var sourcePrice = parseFloat(discountCalCulation.discountedPrice).toFixed(2);
    }

    comparePrice = (sourceComparePrice !== sourcePrice && sourceComparePrice !== 0) ? '<span class="salemaximize__compare-price salemaximize__m-0 recomcomparePriceShow' + tempSecId + ' GSrecommendationcomparePriceColor notranslate" style="color:' + recommendationSettings.compare_price_color + ';display:' + isShowComparePrice + ';">' + smeCurrencyFormate + sourceComparePrice + '</span>' : '';
    sourcePrice = smeCurrencyFormate + sourcePrice;
    if (recommendationSettings.is_active === '1') {
        document.querySelector('.smeRecommendationWidget[data-id="' + tempSecId + '"]').style.display = 'none';
    } else {
        document.querySelector('.smeRecommendationWidget[data-id="' + tempSecId + '"]').classList.remove('widget-disable');
    }
    let discountTagName = (recommendationSettings.discount_name) ? '<input type="hidden" name="properties[__smeDiscountTag]" value="' + recommendationSettings.discount_name + '">' : '';
    let reviewHtml = smeReviewFn(recomProductData.id, recomProductData.handle, '', recomProductData);
    let recommendationHtml = '' +
        '<div class="salemaximize__recommandation-product salemaximizeProductDiv smeRecomProduct' + recomProductData.id + ' smeProductBlock' + tempSecId + ' Vertical_upsell_smeProductBlock" data-temp-id="' + tempSecId + '" style="text-align: center">\n' +
        '    <div class="salemaximize__recommandation-product-img-div">\n' +
        '        <img src="' + sme_images + '" class="salemaximize__recommandation-product-image salemaximizeProductImg" draggable="false">\n' +
        '    </div>\n' +
        '    <div class="salemaximize__recommandation-product-info">\n' +
        '        <div class="salemaximize__recommandation-product-name GSrecommendationproductTitleColor" style="color:' + recommendationSettings.product_title_color + '"><a href="https://' + smeShop + '/products/' + recomProductData.handle + '" class="salemaximize__product_redirect_link" target="_blank" title="' + recomProductData.title + '">' + recomProductData.title + '</a></div>\n' +
        '        <div class="salemaximize__recommandation-product-varients salemaximize__product-varients GSrecommendationboxBorderColor" style="' + (variantsHtml == '' ? "visibility: hidden;" : "") + 'display:' + (variantsHtml != '' ? "block" : "none") + ';border-color: ' + recommendationSettings.box_border_color + ';">\n' +
        '            <style>.__salemaximize .GSrecommendationboxBorderColor::after { border-top: 6px solid ' + recommendationSettings.box_border_color + '; }</style>\n' +
        '            <select class="salemaximize__product-varients" data-discount-type="' + recommendationSettings.discount_type + '" data-discount-val="' + recommendationSettings.discount_value + '" data-price-over-val="' + recommendationSettings.price_over_value + '" onchange="smeChangeVariant(this)" name="" style="color: ' + recommendationSettings.box_text_color + ';">\n ' +
        '               ' + variantsHtml + '\n' +
        '            </select>\n' +
        '        </div>\n' +
        '        <div class="salemaximize__recommandation-product-price">\n' +
        '            ' + comparePrice + '\n' +
        '            <span class="salemaximize__selling-price GSrecommendationsellingPriceColor notranslate" style="color: ' + recommendationSettings.selling_price_color + ';">' + sourcePrice + '</span>\n' +
        '        </div>\n' +
        '        <div class="salemaximize__star-review" style="justify-content: center;">\n' +
        '           ' + reviewHtml + '\n' +
        '        </div>\n' +
        '        <div class="salemaximize__product-add">\n' +
        '            <form class="smeProductForm">\n' +
        '               <input type="hidden" name="id" value="' + selectedVariantData.id + '">\n' +
        '               <input type="hidden" name="quantity" value="1">\n' +
        '               <input type="hidden" name="properties[__smeWidgetProduct]" value="' + sourceId + '-' + tempSecId + '-' + recomProductData.id + '">\n' +
        '               <input type="hidden" name="properties[__smeProductDiscount]" value="' + discountCalCulation.appliedDiscount + '">\n' +
        '               <input type="hidden" name="properties[__smeProductDiscountType]" value="' + recommendationSettings.discount_type + '">\n' +
        '               <input type="hidden" name="properties[__smeProductdiscount_value]" value="' + recommendationSettings.discount_value + '">\n' +
        '               ' + discountTagName + '\n' +
        '               <button type="button" class="salemaximize__add-btn recomAtcBtn3802 GSrecommendationbuttonBgColor GSrecommendationbuttonTextColor " onclick="smeAtcProcess(this)" style="color:' + recommendationSettings.button_text_color + '; background-color: ' + recommendationSettings.button_bg_color + ';">' + recommendationSettings.button_text + '</button>\n' +
        '            </form>\n' +
        '        </div>\n' +
        '    </div>\n' +
        '</div>';
    return recommendationHtml;
}

function smeCartUpsellInit() {
    var sme_gm_cart_widget = JSON.parse(sme_gm_dataobj.cart_widget);
    var tempSecId = Object.keys(sme_gm_cart_widget)[0];
    var upsell_settings = JSON.parse(sme_gm_cart_widget[tempSecId].upsell_settings);

    var viewType = upsell_settings[0].product_type;

    if (viewType === '0') {
        smeCartUpsellRecomView();
    }
    if (viewType === '1') {
        smeCartUpsellSpecificview();
    }
    if (viewType === '4') {
        smeCartUpsellAbandonedView();
    }
}

var cart_slideContainer;
async function smeCartUpsellRecomView() {
    if (smeCartData.items.length > 0) {
        document.querySelector(".cart_widgetUpsellProductBlock").removeAttribute('style');

        let productIdArray = smeCartData.items.map(function (productData) {
            return productData.product_id;
        });

        let cartItemLength = Math.floor(Math.random() * productIdArray.length);
        let productId = productIdArray[cartItemLength];

        let url = '/recommendations/products.json?currency=' + smeUserCurrency + '&product_id=' + productId;
        let smeApiResponse = await smeGetAjaxApiFn(url);

        let maxProducts = 10;
        let recommendedProducts = [];

        let shuffledProducts = smeApiResponse.products.sort(() => Math.random() - 0.5);
        recommendedProducts = shuffledProducts.slice(0, maxProducts);

        if (!smeApiResponse.status && recommendedProducts.length > 0) {

            let productObj = recommendedProducts;
            var sme_gm_cart_widget = JSON.parse(sme_gm_dataobj.cart_widget);
            var tempSecId = Object.keys(sme_gm_cart_widget)[0];
            let upsellHtml = '<div class="salemaximizeSliderUpsellRow sme_slider_upsell_row">';
            var upsell_settings = JSON.parse(sme_gm_cart_widget[tempSecId].upsell_settings);
            var row = upsell_settings[0].products_row_count ? upsell_settings[0].products_row_count : 1;
            var new_row = row;
            var i = 1;


            for (let recomProductData of productObj) {

                upsellHtml += smePrepareCartUpsellHtml(recomProductData, tempSecId);
                smeJdgmReview(recomProductData.handle, recomProductData.id);

                if (new_row == i) {

                    upsellHtml += '</div>';
                    if (i < recommendedProducts.length) {  // Check if not at the end of product_id array

                        new_row = Number(i) + Number(row);  // Update new_row based on the current index and row count
                        upsellHtml += '<div class="salemaximizeSliderUpsellRow sme_slider_upsell_row">';
                    }
                } else {
                    if (i == recommendedProducts.length) {
                        upsellHtml += '</div>';
                    }
                }

                i++;
            }


            document.querySelector(".cart_widgetUpsellProductBlock").innerHTML = upsellHtml;

            document.querySelector(".cart_widgetUpsellProductBlock").style.display = 'flex';

            cart_slideContainer = document.querySelector('.cart_widgetUpsellProductBlock');

            if (document.querySelectorAll('.cart_widgetUpsellProductBlock .salemaximizeSliderUpsellRow').length > 1) {


                cart_currentSlide = 0;
                var cart_divcopynode = document.querySelectorAll('.cart_widgetUpsellProductBlock .salemaximizeSliderUpsellRow');
                
                cart_startX = 0;
                cart_isDragging = false;
                cart_hasSwiped = false;
                cart_startPosition = 0;
                cart_currentTranslate = 0;
                cart_previousTranslate = 0;
                cart_swipeThreshold = 50;

                var slider_button = `<button id="cart_prevBtn" onclick="cart_prevSlide()" class="salemaximize__slick-previous-arrow" aria-label="Previous" type="button" style=""><svg xmlns="http://www.w3.org/2000/svg" width="8" height="14" viewBox="0 0 8 14" fill="none"><path d="M7 1L1 7L7 13" stroke="#666666" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg></button>
                        <button id="cart_nextBtn" onclick="cart_nextSlide()" class="salemaximize__slick-next-arrow" aria-label="Next" type="button" style=""><svg xmlns="http://www.w3.org/2000/svg" width="8" height="14" viewBox="0 0 8 14" fill="none"><path d="M1 1L7 7L1 13" stroke="#666666" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg></button>`;
                if (!document.querySelector('#cart_nextBtn') && !document.querySelector('#cart_prevBtn')) {
                    document.querySelector('.cart_widgetUpsellProductBlock').insertAdjacentHTML('afterend', slider_button);
                }

                cart_divcopynode.forEach((element, key) => {
                    element.style.height = `${element.offsetHeight}px`;
                });
                cart_slideContainer.style.height = `${document.querySelectorAll('.cart_widgetUpsellProductBlock .salemaximizeSliderUpsellRow')[0].offsetHeight}px`;

                cart_slideContainer.addEventListener('touchstart', cart_startTouch);
                cart_slideContainer.addEventListener('touchmove', cart_moveTouch);
                cart_slideContainer.addEventListener('touchend', cart_endTouch);
                cart_slideContainer.addEventListener('touchcancel', cart_endTouch); // Fallback for when touchend is not fired
                window.addEventListener('touchend', cart_endTouch);
            }
            else {
                if (document.querySelector('#cart_nextBtn')) {
                    document.querySelector('#cart_nextBtn').remove();
                }

                if (document.querySelector('#cart_prevBtn')) {
                    document.querySelector('#cart_prevBtn').remove();
                }

                cart_slideContainer.removeEventListener('touchstart', cart_startTouch);
                cart_slideContainer.removeEventListener('touchmove', cart_moveTouch);
                cart_slideContainer.removeEventListener('touchend', cart_endTouch);
                cart_slideContainer.removeEventListener('touchcancel', cart_endTouch); // Fallback for when touchend is not fired
                window.removeEventListener('touchend', cart_endTouch);
            }


            if (cartdrawercall == true) {
                document.querySelector(".cart_widgetUpsellProductBlock").style.visibility = 'hidden';
                cartdrawercall = true;
            } else {
                document.querySelector(".cart_widgetUpsellProductBlock").style.visibility = 'visible';
            }

            if (smeApiResponse.products.length <= 0) {
                productIdArray.splice(productIdArray.indexOf(productId), 1);
            }

        } else {
            document.querySelector(".cart_widgetUpsellProductBlock").style.display = 'none';
        }
    } else {
        document.querySelector(".cart_widgetUpsellProductBlock").style.display = 'none';
    }
}

function smeCartUpsellSpecificview() {
    document.querySelector(".cart_widgetUpsellProductBlock").removeAttribute('style');
    let productIdArray = smeCartData.items.map(function (productData) {
        return productData.product_id;
    });

    var sme_gm_cart_widget = JSON.parse(sme_gm_dataobj.cart_widget);
    var tempSecId = Object.keys(sme_gm_cart_widget)[0];
    var upsell_settings = JSON.parse(sme_gm_cart_widget[tempSecId].upsell_settings);
    let product_id = upsell_settings[0].product_id.split(",");
    let upsellHtml = '';
    let productIndex = 0;

    let productIdSet = new Set(productIdArray);
    let filteredProductIds = product_id.filter(id => !productIdSet.has(Number(id)));
    if (filteredProductIds.length > 0) {

        var filteredProduct_Ids = filteredProductIds.join(",");
        let data_url = smeAppUrl + "cart_upsell_call.php";
        const smePostData = JSON.stringify({
            method_name: "upsell_specific_view",
            shop: Shopify.shop,
            token: sme_gm_dataobj.token,
            product_ids: filteredProduct_Ids
        });
        let authHeader = { 'Authentication': smeReqHeader.Authentication };

        let smeXhrHttp = new XMLHttpRequest();
        smeXhrHttp.open("POST", data_url, true);
        let headerObj = (authHeader['json']) ? { 'Content-type': 'application/json; charset=UTF-8' } : { 'Content-type': 'application/x-www-form-urlencoded' };
        if (authHeader != '') {
            headerObj = {
                ...headerObj,
                ...authHeader
            };
        }
        delete headerObj['json'];
        for (let key in headerObj) {
            smeXhrHttp.setRequestHeader(key, headerObj[key])
        }
        smeXhrHttp.onload = function () {

            if (smeXhrHttp.status >= 200 && smeXhrHttp.status < 300) {
                var smeApiResponse = JSON.parse(this.responseText);

                var sme_gm_cart_widget = JSON.parse(sme_gm_dataobj.cart_widget);
                var firstKey = Object.keys(sme_gm_cart_widget)[0];
                var upsell_settings = JSON.parse(sme_gm_cart_widget[firstKey].upsell_settings);

                upsellHtml = '<div class="salemaximizeSliderUpsellRow sme_slider_upsell_row">';
                var upsell_settings = JSON.parse(sme_gm_cart_widget[tempSecId].upsell_settings);
                var row = upsell_settings[0].products_row_count ? upsell_settings[0].products_row_count : 1;
                var new_row = row;

                var i = 1;

                for (let recomProductData of smeApiResponse) {
                    upsellHtml += smePrepareCartUpsellHtml(recomProductData, tempSecId);
                    smeJdgmReview(recomProductData.handle, recomProductData.id);

                    if (new_row == i) {
                        upsellHtml += '</div>';
                        if (i < filteredProductIds.length) {  // Check if not at the end of product_id array
                            new_row = Number(i) + Number(row);  // Update new_row based on the current index and row count
                            upsellHtml += '<div class="salemaximizeSliderUpsellRow sme_slider_upsell_row">';
                        }
                    } else {
                        if (i == filteredProductIds.length) {
                            upsellHtml += '</div>';
                        }
                    }

                    i++;
                }

                document.querySelector(".cart_widgetUpsellProductBlock").innerHTML = upsellHtml;
                cart_slideContainer = document.querySelector('.cart_widgetUpsellProductBlock');

                document.querySelector(".cart_widgetUpsellProductBlock").style.display = 'flex';
                if (document.querySelectorAll('.cart_widgetUpsellProductBlock .salemaximizeSliderUpsellRow').length > 1) {

                    cart_currentSlide = 0;
                    var cart_divcopynode = document.querySelectorAll('.cart_widgetUpsellProductBlock .salemaximizeSliderUpsellRow');
                    
                    cart_startX = 0;
                    cart_isDragging = false;
                    cart_hasSwiped = false;
                    cart_startPosition = 0;
                    cart_currentTranslate = 0;
                    cart_previousTranslate = 0;
                    cart_swipeThreshold = 50;

                    var slider_button = `<button id="cart_prevBtn" onclick="cart_prevSlide()" class="salemaximize__slick-previous-arrow" aria-label="Previous" type="button" style=""><svg xmlns="http://www.w3.org/2000/svg" width="8" height="14" viewBox="0 0 8 14" fill="none"><path d="M7 1L1 7L7 13" stroke="#666666" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg></button>
                            <button id="cart_nextBtn" onclick="cart_nextSlide()" class="salemaximize__slick-next-arrow" aria-label="Next" type="button" style=""><svg xmlns="http://www.w3.org/2000/svg" width="8" height="14" viewBox="0 0 8 14" fill="none"><path d="M1 1L7 7L1 13" stroke="#666666" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg></button>`;
                    if (!document.querySelector('#cart_nextBtn') && !document.querySelector('#cart_prevBtn')) {
                        document.querySelector('.cart_widgetUpsellProductBlock').insertAdjacentHTML('afterend', slider_button);
                    }

                    cart_divcopynode.forEach((element, key) => {
                        element.style.height = `${element.offsetHeight}px`;
                    });
                    cart_slideContainer.style.height = `${document.querySelectorAll('.cart_widgetUpsellProductBlock .salemaximizeSliderUpsellRow')[0].offsetHeight}px`;

                    cart_slideContainer.addEventListener('touchstart', cart_startTouch);
                    cart_slideContainer.addEventListener('touchmove', cart_moveTouch);
                    cart_slideContainer.addEventListener('touchend', cart_endTouch);
                    cart_slideContainer.addEventListener('touchcancel', cart_endTouch); // Fallback for when touchend is not fired
                    window.addEventListener('touchend', cart_endTouch);

                } else {
                    if (document.querySelector('#cart_nextBtn')) {
                        document.querySelector('#cart_nextBtn').remove();
                    }

                    if (document.querySelector('#cart_prevBtn')) {
                        document.querySelector('#cart_prevBtn').remove();
                    }

                    cart_slideContainer.removeEventListener('touchstart', cart_startTouch);
                    cart_slideContainer.removeEventListener('touchmove', cart_moveTouch);
                    cart_slideContainer.removeEventListener('touchend', cart_endTouch);
                    cart_slideContainer.removeEventListener('touchcancel', cart_endTouch); // Fallback for when touchend is not fired
                    window.removeEventListener('touchend', cart_endTouch);
                }

                if (cartdrawercall == true) {
                    document.querySelector(".cart_widgetUpsellProductBlock").style.visibility = 'hidden';
                    cartdrawercall = true;
                } else {
                    document.querySelector(".cart_widgetUpsellProductBlock").style.visibility = 'visible';
                }

            }
        };

        smeXhrHttp.send(smePostData);

    } else {
        document.querySelector(".cart_widgetUpsellProductBlock").style.display = 'none';
    }
}

async function smeCartUpsellAbandonedView() {

    document.querySelector(".cart_widgetUpsellProductBlock").removeAttribute('style');


    let productIdArray = smeCartData.items.map(function (productData) {
        return productData.handle;
    });

    var sme_gm_cart_widget = JSON.parse(sme_gm_dataobj.cart_widget);
    var tempSecId = Object.keys(sme_gm_cart_widget)[0];
    var upsell_settings = JSON.parse(sme_gm_cart_widget[tempSecId].upsell_settings);

    var token = sme_gm_dataobj.token;
    let data_url = smeAppUrl + "cart_upsell_call.php";
    const smePostData = JSON.stringify({
        method_name: "upsell_abandoned_view",
        shop: Shopify.shop,
        token: token
    });
    let authHeader = { 'Authentication': smeReqHeader.Authentication };
    let smeApiResponse = await smePostAjaxApiFn(data_url, smePostData, authHeader);

    if (!smeApiResponse.status) {

        if (smeApiResponse.info.length > 0) {
            let product_id = JSON.parse(smeApiResponse.info);

            var sme_gm_cart_widget = JSON.parse(sme_gm_dataobj.cart_widget);
            var firstKey = Object.keys(sme_gm_cart_widget)[0];
            var upsell_settings = JSON.parse(sme_gm_cart_widget[firstKey].upsell_settings);

            upsellHtml = '<div class="salemaximizeSliderUpsellRow sme_slider_upsell_row">';
            var upsell_settings = JSON.parse(sme_gm_cart_widget[tempSecId].upsell_settings);
            var row = upsell_settings[0].products_row_count ? upsell_settings[0].products_row_count : 1;
            var new_row = row;

            var i = 1;

            let productIdSet = new Set(productIdArray);
            let filteredProductIds = product_id.filter(id => !productIdSet.has(id));
            if (filteredProductIds.length > 0) {
                for (let handleVal of filteredProductIds) {

                    const url = 'https://' + smeSiteDomain + '/products/' + handleVal + '.js?currency=' + smeUserCurrency;
                    try {
                        const response = await fetch(url, {
                            method: 'GET',
                            headers: {
                                'Content-Type': 'application/json',
                                'X-Shopify-Access-Token': `${sme_gm_dataobj.token}`
                            }
                        });

                        if (!response.ok) {
                            throw new Error('Failed to fetch product. HTTP status code: ' + response.status);
                        }

                        const data = await response.json();
                        upsellHtml += smePrepareCartUpsellHtml(data, tempSecId);
                        smeJdgmReview(data.handle, data.id);

                        if (new_row == i) {
                            upsellHtml += '</div>';
                            if (i < filteredProductIds.length) {  // Check if not at the end of product_id array
                                new_row = Number(i) + Number(row);  // Update new_row based on the current index and row count
                                upsellHtml += '<div class="salemaximizeSliderUpsellRow sme_slider_upsell_row">';
                            }
                        } else {
                            if (i == filteredProductIds.length) {
                                upsellHtml += '</div>';
                            }
                        }

                        i++;
                    } catch (error) {
                        console.error('Error fetching product:', error);
                        document.querySelector(".cart_widgetUpsellProductBlock").style.display = 'none';
                        return null;
                    }
                };

                document.querySelector(".cart_widgetUpsellProductBlock").innerHTML = upsellHtml;

                document.querySelector(".cart_widgetUpsellProductBlock").style.display = 'flex';

                cart_slideContainer = document.querySelector('.cart_widgetUpsellProductBlock');

                if (document.querySelectorAll('.cart_widgetUpsellProductBlock .salemaximizeSliderUpsellRow').length > 1) {

                    cart_currentSlide = 0;
                    var cart_divcopynode = document.querySelectorAll('.cart_widgetUpsellProductBlock .salemaximizeSliderUpsellRow');
                    
                    cart_startX = 0;
                    cart_isDragging = false;
                    cart_hasSwiped = false;
                    cart_startPosition = 0;
                    cart_currentTranslate = 0;
                    cart_previousTranslate = 0;
                    cart_swipeThreshold = 50;

                    var slider_button = `<button id="cart_prevBtn" onclick="cart_prevSlide()" class="salemaximize__slick-previous-arrow" aria-label="Previous" type="button" style=""><svg xmlns="http://www.w3.org/2000/svg" width="8" height="14" viewBox="0 0 8 14" fill="none"><path d="M7 1L1 7L7 13" stroke="#666666" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg></button>
                        <button id="cart_nextBtn" onclick="cart_nextSlide()" class="salemaximize__slick-next-arrow" aria-label="Next" type="button" style=""><svg xmlns="http://www.w3.org/2000/svg" width="8" height="14" viewBox="0 0 8 14" fill="none"><path d="M1 1L7 7L1 13" stroke="#666666" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg></button>`;
                    if (!document.querySelector('#cart_nextBtn') && !document.querySelector('#cart_prevBtn')) {
                        document.querySelector('.cart_widgetUpsellProductBlock').insertAdjacentHTML('afterend', slider_button);
                    }

                    cart_divcopynode.forEach((element, key) => {
                        element.style.height = `${element.offsetHeight}px`;
                    });
                    cart_slideContainer.style.height = `${document.querySelectorAll('.cart_widgetUpsellProductBlock .salemaximizeSliderUpsellRow')[0].offsetHeight}px`;

                    cart_slideContainer.addEventListener('touchstart', cart_startTouch);
                    cart_slideContainer.addEventListener('touchmove', cart_moveTouch);
                    cart_slideContainer.addEventListener('touchend', cart_endTouch);
                    cart_slideContainer.addEventListener('touchcancel', cart_endTouch); // Fallback for when touchend is not fired
                    window.addEventListener('touchend', cart_endTouch);
                } else {
                    if (document.querySelector('#cart_nextBtn')) {
                        document.querySelector('#cart_nextBtn').remove();
                    }

                    if (document.querySelector('#cart_prevBtn')) {
                        document.querySelector('#cart_prevBtn').remove();
                    }

                    cart_slideContainer.removeEventListener('touchstart', cart_startTouch);
                    cart_slideContainer.removeEventListener('touchmove', cart_moveTouch);
                    cart_slideContainer.removeEventListener('touchend', cart_endTouch);
                    cart_slideContainer.removeEventListener('touchcancel', cart_endTouch); // Fallback for when touchend is not fired
                    window.removeEventListener('touchend', cart_endTouch);
                }

                if (cartdrawercall == true) {
                    document.querySelector(".cart_widgetUpsellProductBlock").style.visibility = 'hidden';
                    cartdrawercall = true;
                } else {
                    document.querySelector(".cart_widgetUpsellProductBlock").style.visibility = 'visible';
                }
            } else {
                document.querySelector(".cart_widgetUpsellProductBlock").style.display = 'none';
            }
        } else {
            document.querySelector(".cart_widgetUpsellProductBlock").style.display = 'none';
        }
    }
}


let cart_currentSlide = 0;
let cart_startX = 0;
let cart_isDragging = false;
let cart_hasSwiped = false;
let cart_startPosition = 0;
let cart_currentTranslate = 0;
let cart_previousTranslate = 0;
var cart_swipeThreshold = 50;

function cart_showSlide(index) {
    const slides = document.querySelector('.cart_widgetUpsellProductBlock');
    if (!slides) return;

    const slideWidth = document.querySelector('.cart_widgetUpsellProductBlock .salemaximizeSliderUpsellRow').clientWidth;
    slides.style.transform = `translateX(${-index * slideWidth}px)`;
    cart_currentTranslate = (-index * slideWidth);
    slides.style.transition = 'transform 600ms, height 600ms';
    requestAnimationFrame(() => {
        document.querySelectorAll('.cart_widgetUpsellProductBlock .salemaximizeSliderUpsellRow')[index].offsetHeight;
        slides.style.height = `${document.querySelectorAll('.cart_widgetUpsellProductBlock .salemaximizeSliderUpsellRow')[index].offsetHeight}px`;
    });
    cart_currentSlide = index;

}

function cart_nextSlide() {
    const totalSlides = document.querySelectorAll('.cart_widgetUpsellProductBlock .salemaximizeSliderUpsellRow').length;
    cart_currentSlide = (cart_currentSlide + 1) % totalSlides;
    cart_showSlide(cart_currentSlide);
}

function cart_prevSlide() {
    const totalSlides = document.querySelectorAll('.cart_widgetUpsellProductBlock .salemaximizeSliderUpsellRow').length;
    cart_currentSlide = (cart_currentSlide - 1 + totalSlides) % totalSlides;
    cart_showSlide(cart_currentSlide);
}

// Touch Events for Swipe Detection on Mobile Devices
function cart_startTouch(e) {
    cart_startX = e.touches[0].clientX;
    cart_isDragging = true;
    cart_hasSwiped = false;
    cart_startPosition = cart_currentTranslate;
    cart_slideContainer.style.transition = 'none';
}

function cart_moveTouch(e) {
    if (!cart_isDragging) return;
    const currentPosition = e.touches[0].clientX;
    const moveDistance = currentPosition - cart_startX;


    cart_hasSwiped = true;
    cart_currentTranslate = cart_startPosition + moveDistance;
    cart_slideContainer.style.transform = `translateX(${cart_currentTranslate}px)`;
}

function cart_endTouch() {
    if (!cart_isDragging) return;
    cart_isDragging = false;

    // Only slide if a swipe was detected
    if (cart_hasSwiped) {

        const slideWidth = document.querySelector('.cart_widgetUpsellProductBlock .salemaximizeSliderUpsellRow').clientWidth;
        const movedBy = cart_currentTranslate - cart_previousTranslate;

        if (movedBy < -cart_swipeThreshold) {
            cart_nextSlide();
        } else if (movedBy > cart_swipeThreshold) {
            cart_prevSlide();
        } else {
            cart_showSlide(cart_currentSlide);
        }

        cart_previousTranslate = -cart_currentSlide * slideWidth;
    } else {
        // Reset position if no swipe was detected
        cart_showSlide(cart_currentSlide);
    }
}


function smePrepareCartUpsellHtml(ProductData, tempSecId) {
    let sourceId = document.querySelector(".widget2").dataset.sourceId;
    var sme_gm_cart_widget = JSON.parse(sme_gm_dataobj.cart_widget);
    var firstKey = Object.keys(sme_gm_cart_widget)[0];

    var upsell_settings = JSON.parse(sme_gm_cart_widget[firstKey].upsell_settings);
    var variantData = ProductData.variants;

    let selectedVariantData = variantData[0];

    var sme_gm_cart_widget = JSON.parse(sme_gm_dataobj.cart_widget);
    var firstKey = Object.keys(sme_gm_cart_widget)[0];

    let subUpsellInput = '';

    var upsellSettings = upsell_settings[0];
    let general_setting = JSON.parse(sme_gm_dataobj.general_setting);
    let colorSettings = JSON.parse(general_setting.cart_color_setting);

    upsellSettings = {
        ...upsellSettings,
        ...colorSettings
    };

    let isShowComparePrice = (upsellSettings.is_show_compare_price === '0') ? 'block' : 'none';

    if (upsell_settings[0].product_type === '0' || upsell_settings[0].product_type === '4') {
        if (ProductData.featured_image === null) {
            ProductData.featured_image = smeAppUrl + "assets/img/placeholder.png";
        }

        var variantsHtml = smeGetVariantsBox(variantData, variantData[0].id, ProductData.featured_image);
        var sme_images = ProductData.featured_image;

        var sourceComparePrice = selectedVariantData.compare_at_price !== 0 && selectedVariantData.compare_at_price !== null ? (parseFloat(selectedVariantData.compare_at_price) / 100).toFixed(2) : (parseFloat(selectedVariantData.price) / 100).toFixed(2);
        let discountDataObj = { "discountType": upsellSettings.discount_type, "discountVal": upsellSettings.discount_value, "price": selectedVariantData.price, "priceOver": upsellSettings.price_over_value, "qty": 1 };
        var discountCalCulation = smeDiscountCalculator(discountDataObj);
        var sourcePrice = parseFloat(discountCalCulation.discountedPrice).toFixed(2);
    }

    if (upsell_settings[0].product_type === '1') {
        if (ProductData.image.src === null) {
            ProductData.image.src = smeAppUrl + "assets/img/placeholder.png";
        }
        var variantsHtml = smeGetVariantsBox(variantData, variantData[0].id, ProductData.images, 1);
        var sme_images = ProductData.image.src;

        var sourceComparePrice = 0;
        const presentmentPrice = selectedVariantData.presentment_prices.find(priceData =>
            priceData.price.currency_code === Shopify.currency.active

        );
        if (presentmentPrice.compare_at_price !== null) {
            sourceComparePrice = presentmentPrice.compare_at_price.amount;
        } else {
            sourceComparePrice = selectedVariantData.compare_at_price !== 0 && selectedVariantData.compare_at_price !== null ? parseFloat(selectedVariantData.compare_at_price * Shopify.currency.rate).toFixed(2) : parseFloat(selectedVariantData.price * Shopify.currency.rate).toFixed(2);
        }

        let discountDataObj = { "discountType": upsellSettings.discount_type, "discountVal": upsellSettings.discount_value, "price": presentmentPrice.price.amount * 100, "priceOver": upsellSettings.price_over_value, "qty": 1 };
        var discountCalCulation = smeDiscountCalculator(discountDataObj);

        var sourcePrice = parseFloat(discountCalCulation.discountedPrice).toFixed(2);
    }

    let comparePrice = (sourceComparePrice !== sourcePrice && sourceComparePrice !== 0) ? '<span class="salemaximize__compare-price notranslate" style="color:' + upsellSettings.compare_price_color + ';display:' + isShowComparePrice + ';">' + smeCurrencyFormate + sourceComparePrice + '</span>' : '';
    sourcePrice = smeCurrencyFormate + sourcePrice;


    if (upsellSettings.is_enable === '1') {
        document.querySelector('.cart_widgetUpsellProductBlock').style.display = 'none';
    } else {
        document.querySelector('.cart_widgetUpsellProductBlock').classList.remove('widget-disable');
    }
    let discountTagName = (upsellSettings.discount_name) ? '<input type="hidden" name="properties[__smeDiscountTag]" value="' + upsellSettings.discount_name + '">' : '';

    let reviewHtml = smeReviewFn(ProductData.id, ProductData.handle, '', ProductData);
    let upsellHtml = '\
        <div class="salemaximize__for-you-items salemaximizeProductDiv salemaximize__product-detail smeProductMain smeProductBlock' + tempSecId + ' smeProductSlider' + tempSecId + ' smeUpsellVariant' + ProductData.id + tempSecId + sourceId + ' cart_smeProductBlock" data-temp-id="' + tempSecId + '">\
        <div class="salemaximize__product-image-div">\
            <img src="' + sme_images + '" class="salemaximize__product-image salemaximizeProductImg" draggable="false">\
        </div>\
        <div class="salemaximize__product-info">\
            <div class="salemaximize__product-name" style="color:' + upsellSettings.product_title_color + '"><a href="https://' + smeShop + '/products/' + ProductData.handle + '" class="salemaximize__product_redirect_link" target="_blank" title="' + ProductData.title + '">' + ProductData.title + '</a></div>\
            <div class="salemaximize__recommandation-product-varients salemaximize__product-varients smevariantbox' + tempSecId + '" style="display:' + (variantsHtml !== '' ? "block" : "none") + ';border-color: ' + upsellSettings.box_border_color + '">\
               <style> .__salemaximize .smevariantbox' + tempSecId + '::after { border-top: 6px solid ' + upsellSettings.box_border_color + '; }</style> \
                <select class="salemaximize__product-varients" data-discount-type="'+ upsellSettings.discount_type + '" data-discount-val="' + upsellSettings.discount_value + '" data-price-over-val="' + upsellSettings.price_over_value + '" onchange="smeChangeVariant(this)" name="" style="color: ' + upsellSettings.box_text_color + '">\
                   ' + variantsHtml + '\
                </select>\
            </div>\
            <div class="salemaximize__product-price">\
                ' + comparePrice + '\
                <span class="salemaximize__selling-price notranslate" style="color:' + upsellSettings.selling_price_color + ';">' + sourcePrice + '</span>\
            </div>\
            <div class="salemaximize__star-review salemaximize__m-0">\
                '+ reviewHtml + '\
            </div>\
        </div>\
        <div class="salemaximize__product-add">\
            <form class="smeProductForm">\
                <input type="hidden" name="id" value="' + selectedVariantData.id + '">\
                <input type="hidden" name="quantity" value="1">\
                <input type="hidden" name="properties[__smeWidgetProduct]" value="'+ sourceId + '-' + tempSecId + '">\
                <input type="hidden" name="properties[__smeProductDiscount]" value="'+ discountCalCulation.appliedDiscount + '">\
                <input type="hidden" name="properties[__smeProductDiscountType]" value="'+ upsellSettings.discount_type + '">\
                <input type="hidden" name="properties[__smeProductdiscount_value]" value="'+ upsellSettings.discount_value + '">\
                '+ discountTagName + '\
                '+ subUpsellInput + '\
                <button type="button" class="salemaximize__add-btn" onclick="smeAtcProcess(this)" style="color:'+ upsellSettings.button_text_color + '; background-color: ' + upsellSettings.button_bg_color + ';">' + upsellSettings.button_text + '</button>\
            </form>\
        </div>\
    </div>';
    return upsellHtml;
}


function smeUpsellInit() {
    var sme_gm_upsell_widget = JSON.parse(sme_gm_dataobj.upsell_widget);
    var tempSecId = Object.keys(sme_gm_upsell_widget)[0];

    var viewType = sme_gm_upsell_widget[tempSecId].product_type;
    if (viewType === '0') {
        smeUpsellRecomView();
    }
    if (viewType === '1') {
        smeUpsellSpecificview();
    }
    if (viewType === '4') {
        smeUpsellAbandonedView();
    }
}

var Horizontal_slideContainer;
async function smeUpsellRecomView() {

    //document.querySelector(".upsell_widgetUpsellProductBlock").removeAttribute('style');

    if (smeCartData.items.length > 0) {
        let productIdArray = smeCartData.items.map(function (productData) {
            return productData.product_id;
        });

        let cartItemLength = Math.floor(Math.random() * productIdArray.length);
        let productId = productIdArray[cartItemLength];
        let url = '/recommendations/products.json?currency=' + smeUserCurrency + '&product_id=' + productId;
        let smeApiResponse = await smeGetAjaxApiFn(url);


        let maxProducts = 10;
        let recommendedProducts = [];

        let shuffledProducts = smeApiResponse.products.sort(() => Math.random() - 0.5);
        recommendedProducts = shuffledProducts.slice(0, maxProducts);


        //recommProductlength = recommendedProducts.length;
        if (!smeApiResponse.status && recommendedProducts.length > 0) {
            let productObj = recommendedProducts;

            let sme_gm_upsell_widget = JSON.parse(sme_gm_dataobj.upsell_widget);
            var tempSecId = Object.keys(sme_gm_upsell_widget);

            let sme_gm_upsell_widget_data = sme_gm_upsell_widget[tempSecId];
            upsellHtml = '<div class="salemaximizeSliderUpsellRow sme_slider_upsell_row">';
            var row = sme_gm_upsell_widget_data.products_row_count ? sme_gm_upsell_widget_data.products_row_count : 1;
            var new_row = row;

            var i = 1;

            productObj.forEach(function (recomProductData) {
                upsellHtml += smePrepareUpsellHtml(recomProductData, tempSecId);
                smeJdgmReview(recomProductData.handle, recomProductData.id);

                if (new_row == i) {
                    upsellHtml += '</div>';
                    if (i < recommendedProducts.length) {  // Check if not at the end of product_id array
                        new_row = Number(i) + Number(row);  // Update new_row based on the current index and row count
                        upsellHtml += '<div class="salemaximizeSliderUpsellRow sme_slider_upsell_row">';
                    }
                } else {
                    if (i == recommendedProducts.length) {
                        upsellHtml += '</div>';
                    }
                }

                i++;
            });

            if (document.querySelector('.Horizontal_upsell_smeProductBlock')) {
                document.querySelector('.Horizontal_upsell_smeProductBlock').remove();
            }

            let upsellContainer = document.querySelector('.upsell_widgetUpsellProductBlock');
            upsellContainer.classList.remove('slick-initialized', 'slick-slider');
            upsellContainer.innerHTML = upsellHtml;

            document.querySelector('.widget3').classList.remove('widget-disable');
            document.querySelector('.widget3').style.display = 'block';

            document.querySelector(".upsell_widgetUpsellProductBlock").style.display = 'flex';

            Horizontal_slideContainer = document.querySelector('.upsell_widgetUpsellProductBlock');

            if (document.querySelectorAll('.upsell_widgetUpsellProductBlock .salemaximizeSliderUpsellRow').length > 1) {

                Horizontal_currentSlide = 0;
                var Horizontal_divcopynode = document.querySelectorAll('.upsell_widgetUpsellProductBlock .salemaximizeSliderUpsellRow');
                
                Horizontal_startX = 0;
                Horizontal_isDragging = false;
                Horizontal_hasSwiped = false;
                Horizontal_startPosition = 0;
                Horizontal_currentTranslate = 0;
                Horizontal_previousTranslate = 0;
                Horizontal_swipeThreshold = 50;

                var Horizontal_slider_button = `<button id="Horizontal_prevBtn" onclick="Horizontal_prevSlide()" class="salemaximize__slick-previous-arrow" aria-label="Previous" type="button" style=""><svg xmlns="http://www.w3.org/2000/svg" width="8" height="14" viewBox="0 0 8 14" fill="none"><path d="M7 1L1 7L7 13" stroke="#666666" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg></button>
                        <button id="Horizontal_nextBtn" onclick="Horizontal_nextSlide()" class="salemaximize__slick-next-arrow" aria-label="Next" type="button" style=""><svg xmlns="http://www.w3.org/2000/svg" width="8" height="14" viewBox="0 0 8 14" fill="none"><path d="M1 1L7 7L1 13" stroke="#666666" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg></button>`;
                if (!document.querySelector('#Horizontal_nextBtn') && !document.querySelector('#Horizontal_prevBtn')) {
                    document.querySelector('.upsell_widgetUpsellProductBlock').insertAdjacentHTML('afterend', Horizontal_slider_button);
                }


                Horizontal_divcopynode.forEach((element, key) => {
                    element.style.height = `${element.offsetHeight}px`;
                });
                Horizontal_slideContainer.style.height = `${document.querySelectorAll('.upsell_widgetUpsellProductBlock .salemaximizeSliderUpsellRow')[0].offsetHeight}px`;

                Horizontal_slideContainer.addEventListener('touchstart', Horizontal_startTouch);
                Horizontal_slideContainer.addEventListener('touchmove', Horizontal_moveTouch);
                Horizontal_slideContainer.addEventListener('touchend', Horizontal_endTouch);
                Horizontal_slideContainer.addEventListener('touchcancel', Horizontal_endTouch); // Fallback for when touchend is not fired
                window.addEventListener('touchend', Horizontal_endTouch); // Ensure touchend is captured globally
            } else {
                if (document.querySelector('#Horizontal_nextBtn')) {
                    document.querySelector('#Horizontal_nextBtn').remove();
                }

                if (document.querySelector('#Horizontal_prevBtn')) {
                    document.querySelector('#Horizontal_prevBtn').remove();
                }

                Horizontal_slideContainer.removeEventListener('touchstart', Horizontal_startTouch);
                Horizontal_slideContainer.removeEventListener('touchmove', Horizontal_moveTouch);
                Horizontal_slideContainer.removeEventListener('touchend', Horizontal_endTouch);
                Horizontal_slideContainer.removeEventListener('touchcancel', Horizontal_endTouch); // Fallback for when touchend is not fired
                window.removeEventListener('touchend', Horizontal_endTouch);
            }

            if (horizontaldrawercall == true) {
                document.querySelector(".widget3").style.visibility = 'hidden';
                horizontaldrawercall = true;
            } else {
                document.querySelector(".widget3").style.visibility = 'visible';
            }



        } else {
            document.querySelector(".widget3").style.display = 'none';
        }

    } else {
        document.querySelector(".widget3").style.display = 'none';
    }
}


function smeUpsellSpecificview() {
    document.querySelector(".upsell_widgetUpsellProductBlock").removeAttribute('style');
    let productIdArray = smeCartData.items.map(function (productData) {
        return productData.product_id;
    });

    let sme_gm_upsell_widget = JSON.parse(sme_gm_dataobj.upsell_widget);
    var tempSecId = Object.keys(sme_gm_upsell_widget);

    let product_id = sme_gm_upsell_widget[tempSecId].product_id.split(",");
    let upsellHtml = '';
    let productIndex = 0;

    let productIdSet = new Set(productIdArray);
    let filteredProductIds = product_id.filter(id => !productIdSet.has(Number(id)));
    if (filteredProductIds.length > 0) {
        var filteredProduct_Ids = filteredProductIds.join(",");
        let data_url = smeAppUrl + "horizontal_upsell_call.php";

        const smePostData = JSON.stringify({
            method_name: "upsell_specific_view",
            shop: Shopify.shop,
            token: sme_gm_dataobj.token,
            product_ids: filteredProduct_Ids
        });
        let authHeader = { 'Authentication': smeReqHeader.Authentication };

        let smeXhrHttp = new XMLHttpRequest();
        smeXhrHttp.open("POST", data_url, true);
        let headerObj = (authHeader['json']) ? { 'Content-type': 'application/json; charset=UTF-8' } : { 'Content-type': 'application/x-www-form-urlencoded' };
        if (authHeader != '') {
            headerObj = {
                ...headerObj,
                ...authHeader
            };
        }
        delete headerObj['json'];
        for (let key in headerObj) {
            smeXhrHttp.setRequestHeader(key, headerObj[key])
        }
        smeXhrHttp.onload = function () {

            if (smeXhrHttp.status >= 200 && smeXhrHttp.status < 300) {
                var smeApiResponse = JSON.parse(this.responseText);


                let sme_gm_upsell_widget_data = sme_gm_upsell_widget[tempSecId];
                upsellHtml = '<div class="salemaximizeSliderUpsellRow sme_slider_upsell_row">';
                var row = sme_gm_upsell_widget_data.products_row_count ? sme_gm_upsell_widget_data.products_row_count : 1;
                var new_row = row;

                var i = 1;

                for (let recomProductData of smeApiResponse) {
                    upsellHtml += smePrepareUpsellHtml(recomProductData, tempSecId);
                    smeJdgmReview(recomProductData.handle, recomProductData.id);

                    if (new_row == i) {
                        upsellHtml += '</div>';
                        if (i < filteredProductIds.length) {  // Check if not at the end of product_id array
                            new_row = Number(i) + Number(row);  // Update new_row based on the current index and row count
                            upsellHtml += '<div class="salemaximizeSliderUpsellRow sme_slider_upsell_row">';
                        }
                    } else {
                        if (i == filteredProductIds.length) {
                            upsellHtml += '</div>';
                        }
                    }

                    i++;
                }

                document.querySelector(".upsell_widgetUpsellProductBlock").innerHTML = upsellHtml;

                document.querySelector('.widget3').classList.remove('widget-disable');
                document.querySelector('.widget3').style.display = 'block';

                document.querySelector(".upsell_widgetUpsellProductBlock").style.display = 'flex';

                Horizontal_slideContainer = document.querySelector('.upsell_widgetUpsellProductBlock');

                if (document.querySelectorAll('.upsell_widgetUpsellProductBlock .salemaximizeSliderUpsellRow').length > 1) {
                    Horizontal_currentSlide = 0;
                    var Horizontal_divcopynode = document.querySelectorAll('.upsell_widgetUpsellProductBlock .salemaximizeSliderUpsellRow');
                    
                    Horizontal_startX = 0;
                    Horizontal_isDragging = false;
                    Horizontal_hasSwiped = false;
                    Horizontal_startPosition = 0;
                    Horizontal_currentTranslate = 0;
                    Horizontal_previousTranslate = 0;
                    Horizontal_swipeThreshold = 50;

                    var Horizontal_slider_button = `<button id="Horizontal_prevBtn" onclick="Horizontal_prevSlide()" class="salemaximize__slick-previous-arrow" aria-label="Previous" type="button" style=""><svg xmlns="http://www.w3.org/2000/svg" width="8" height="14" viewBox="0 0 8 14" fill="none"><path d="M7 1L1 7L7 13" stroke="#666666" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg></button>
                            <button id="Horizontal_nextBtn" onclick="Horizontal_nextSlide()" class="salemaximize__slick-next-arrow" aria-label="Next" type="button" style=""><svg xmlns="http://www.w3.org/2000/svg" width="8" height="14" viewBox="0 0 8 14" fill="none"><path d="M1 1L7 7L1 13" stroke="#666666" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg></button>`;
                    if (!document.querySelector('#Horizontal_nextBtn') && !document.querySelector('#Horizontal_prevBtn')) {
                        document.querySelector('.upsell_widgetUpsellProductBlock').insertAdjacentHTML('afterend', Horizontal_slider_button);
                    }


                    Horizontal_divcopynode.forEach((element, key) => {
                        element.style.height = `${element.offsetHeight}px`;
                    });
                    Horizontal_slideContainer.style.height = `${document.querySelectorAll('.upsell_widgetUpsellProductBlock .salemaximizeSliderUpsellRow')[0].offsetHeight}px`;

                    Horizontal_slideContainer.addEventListener('touchstart', Horizontal_startTouch);
                    Horizontal_slideContainer.addEventListener('touchmove', Horizontal_moveTouch);
                    Horizontal_slideContainer.addEventListener('touchend', Horizontal_endTouch);
                    Horizontal_slideContainer.addEventListener('touchcancel', Horizontal_endTouch); // Fallback for when touchend is not fired
                    window.addEventListener('touchend', Horizontal_endTouch); // Ensure touchend is captured globally
                } else {
                    if (document.querySelector('#Horizontal_nextBtn')) {
                        document.querySelector('#Horizontal_nextBtn').remove();
                    }

                    if (document.querySelector('#Horizontal_prevBtn')) {
                        document.querySelector('#Horizontal_prevBtn').remove();
                    }

                    Horizontal_slideContainer.removeEventListener('touchstart', Horizontal_startTouch);
                    Horizontal_slideContainer.removeEventListener('touchmove', Horizontal_moveTouch);
                    Horizontal_slideContainer.removeEventListener('touchend', Horizontal_endTouch);
                    Horizontal_slideContainer.removeEventListener('touchcancel', Horizontal_endTouch); // Fallback for when touchend is not fired
                    window.removeEventListener('touchend', Horizontal_endTouch);
                }

                if (horizontaldrawercall == true) {
                    document.querySelector(".widget3").style.visibility = 'hidden';
                    horizontaldrawercall = true;
                } else {
                    document.querySelector(".widget3").style.visibility = 'visible';
                }
            }
        };
        smeXhrHttp.send(smePostData);

    } else {
        document.querySelector(".widget3").style.display = 'none';
    }
}


async function smeUpsellAbandonedView() {
    document.querySelector(".upsell_widgetUpsellProductBlock").removeAttribute('style');
    let productIdArray = smeCartData.items.map(function (productData) {
        return productData.handle;
    });

    let sme_gm_upsell_widget = JSON.parse(sme_gm_dataobj.upsell_widget);
    var tempSecId = Object.keys(sme_gm_upsell_widget);
    var token = sme_gm_dataobj.token;
    let data_url = smeAppUrl + "horizontal_upsell_call.php";

    const smePostData = JSON.stringify({
        method_name: "upsell_abandoned_view",
        shop: Shopify.shop,
        token: token
    });
    let authHeader = { 'Authentication': smeReqHeader.Authentication };
    let smeApiResponse = await smePostAjaxApiFn(data_url, smePostData, authHeader);
    if (!smeApiResponse.status) {
        if (smeApiResponse.info.length > 0) {

            let product_id = JSON.parse(smeApiResponse.info);
            let upsellHtml = '';

            let productIdSet = new Set(productIdArray);
            let filteredProductIds = product_id.filter(id => !productIdSet.has(id));
            if (filteredProductIds.length > 0) {
                let sme_gm_upsell_widget_data = sme_gm_upsell_widget[tempSecId];
                upsellHtml = '<div class="salemaximizeSliderUpsellRow sme_slider_upsell_row">';
                var row = sme_gm_upsell_widget_data.products_row_count ? sme_gm_upsell_widget_data.products_row_count : 1;
                var new_row = row;

                var i = 1;
                for (let handleVal of filteredProductIds) {

                    const url = 'https://' + smeSiteDomain + '/products/' + handleVal + '.js?currency=' + smeUserCurrency;
                    try {
                        const response = await fetch(url, {
                            method: 'GET',
                            headers: {
                                'Content-Type': 'application/json',
                                'X-Shopify-Access-Token': `${sme_gm_dataobj.token}`
                            }
                        });

                        if (!response.ok) {
                            throw new Error('Failed to fetch product. HTTP status code: ' + response.status);
                        }

                        const data = await response.json();
                        upsellHtml += smePrepareUpsellHtml(data, tempSecId);
                        smeJdgmReview(data.handle, data.id);

                        if (new_row == i) {
                            upsellHtml += '</div>';
                            if (i < filteredProductIds.length) {  // Check if not at the end of product_id array
                                new_row = Number(i) + Number(row);  // Update new_row based on the current index and row count
                                upsellHtml += '<div class="salemaximizeSliderUpsellRow sme_slider_upsell_row">';
                            }
                        } else {
                            if (i == filteredProductIds.length) {
                                upsellHtml += '</div>';
                            }
                        }

                        i++;
                    } catch (error) {
                        console.error('Error fetching product:', error);
                        return null;
                    }
                }

                document.querySelector(".upsell_widgetUpsellProductBlock").innerHTML = upsellHtml;

                document.querySelector('.widget3').classList.remove('widget-disable');
                document.querySelector('.widget3').style.display = 'block';
                document.querySelector(".upsell_widgetUpsellProductBlock").style.display = 'flex';

                Horizontal_slideContainer = document.querySelector('.upsell_widgetUpsellProductBlock');

                if (document.querySelectorAll('.upsell_widgetUpsellProductBlock .salemaximizeSliderUpsellRow').length > 1) {
                    Horizontal_currentSlide = 0;
                    var Horizontal_divcopynode = document.querySelectorAll('.upsell_widgetUpsellProductBlock .salemaximizeSliderUpsellRow');
                    
                    Horizontal_startX = 0;
                    Horizontal_isDragging = false;
                    Horizontal_hasSwiped = false;
                    Horizontal_startPosition = 0;
                    Horizontal_currentTranslate = 0;
                    Horizontal_previousTranslate = 0;
                    Horizontal_swipeThreshold = 50;

                    var Horizontal_slider_button = `<button id="Horizontal_prevBtn" onclick="Horizontal_prevSlide()" class="salemaximize__slick-previous-arrow" aria-label="Previous" type="button" style=""><svg xmlns="http://www.w3.org/2000/svg" width="8" height="14" viewBox="0 0 8 14" fill="none"><path d="M7 1L1 7L7 13" stroke="#666666" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg></button>
                            <button id="Horizontal_nextBtn" onclick="Horizontal_nextSlide()" class="salemaximize__slick-next-arrow" aria-label="Next" type="button" style=""><svg xmlns="http://www.w3.org/2000/svg" width="8" height="14" viewBox="0 0 8 14" fill="none"><path d="M1 1L7 7L1 13" stroke="#666666" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg></button>`;
                    if (!document.querySelector('#Horizontal_nextBtn') && !document.querySelector('#Horizontal_prevBtn')) {
                        document.querySelector('.upsell_widgetUpsellProductBlock').insertAdjacentHTML('afterend', Horizontal_slider_button);
                    }


                    Horizontal_divcopynode.forEach((element, key) => {
                        element.style.height = `${element.offsetHeight}px`;
                    });
                    Horizontal_slideContainer.style.height = `${document.querySelectorAll('.upsell_widgetUpsellProductBlock .salemaximizeSliderUpsellRow')[0].offsetHeight}px`;

                    Horizontal_slideContainer.addEventListener('touchstart', Horizontal_startTouch);
                    Horizontal_slideContainer.addEventListener('touchmove', Horizontal_moveTouch);
                    Horizontal_slideContainer.addEventListener('touchend', Horizontal_endTouch);
                    Horizontal_slideContainer.addEventListener('touchcancel', Horizontal_endTouch); // Fallback for when touchend is not fired
                    window.addEventListener('touchend', Horizontal_endTouch); // Ensure touchend is captured globally
                } else {
                    if (document.querySelector('#Horizontal_nextBtn')) {
                        document.querySelector('#Horizontal_nextBtn').remove();
                    }

                    if (document.querySelector('#Horizontal_prevBtn')) {
                        document.querySelector('#Horizontal_prevBtn').remove();
                    }

                    Horizontal_slideContainer.removeEventListener('touchstart', Horizontal_startTouch);
                    Horizontal_slideContainer.removeEventListener('touchmove', Horizontal_moveTouch);
                    Horizontal_slideContainer.removeEventListener('touchend', Horizontal_endTouch);
                    Horizontal_slideContainer.removeEventListener('touchcancel', Horizontal_endTouch); // Fallback for when touchend is not fired
                    window.removeEventListener('touchend', Horizontal_endTouch);
                }

                if (horizontaldrawercall == true) {
                    document.querySelector(".widget3").style.visibility = 'hidden';
                    horizontaldrawercall = true;
                } else {
                    document.querySelector(".widget3").style.visibility = 'visible';
                }

            } else {
                document.querySelector(".widget3").style.display = 'none';
            }
        }
    } else {
        document.querySelector(".widget3").style.display = 'none';
    }
}

let Horizontal_currentSlide = 0;
let Horizontal_startX = 0;
let Horizontal_isDragging = false;
let Horizontal_hasSwiped = false;
let Horizontal_startPosition = 0;
let Horizontal_currentTranslate = 0;
let Horizontal_previousTranslate = 0;
var Horizontal_swipeThreshold = 50;

function Horizontal_showSlide(index) {
    const slides = document.querySelector('.upsell_widgetUpsellProductBlock');
    if (!slides) return;

    const slideWidth = document.querySelector('.upsell_widgetUpsellProductBlock .salemaximizeSliderUpsellRow').clientWidth;
    slides.style.transform = `translateX(${-index * slideWidth}px)`;
    Horizontal_currentTranslate = (-index * slideWidth);
    slides.style.transition = 'transform 600ms, height 600ms';
    requestAnimationFrame(() => {
        document.querySelectorAll('.upsell_widgetUpsellProductBlock .salemaximizeSliderUpsellRow')[index].offsetHeight;
        slides.style.height = `${document.querySelectorAll('.upsell_widgetUpsellProductBlock .salemaximizeSliderUpsellRow')[index].offsetHeight}px`;
    });
    Horizontal_currentSlide = index;

}

function Horizontal_nextSlide() {
    const totalSlides = document.querySelectorAll('.upsell_widgetUpsellProductBlock .salemaximizeSliderUpsellRow').length;
    Horizontal_currentSlide = (Horizontal_currentSlide + 1) % totalSlides;
    Horizontal_showSlide(Horizontal_currentSlide);
}

function Horizontal_prevSlide() {
    const totalSlides = document.querySelectorAll('.upsell_widgetUpsellProductBlock .salemaximizeSliderUpsellRow').length;
    Horizontal_currentSlide = (Horizontal_currentSlide - 1 + totalSlides) % totalSlides;
    Horizontal_showSlide(Horizontal_currentSlide);
}

// Touch Events for Swipe Detection on Mobile Devices
function Horizontal_startTouch(e) {
    Horizontal_startX = e.touches[0].clientX;
    Horizontal_isDragging = true;
    Horizontal_hasSwiped = false;
    Horizontal_startPosition = Horizontal_currentTranslate;
    Horizontal_slideContainer.style.transition = 'none';
}

function Horizontal_moveTouch(e) {
    if (!Horizontal_isDragging) return;
    const currentPosition = e.touches[0].clientX;
    const moveDistance = currentPosition - Horizontal_startX;


    Horizontal_hasSwiped = true;
    Horizontal_currentTranslate = Horizontal_startPosition + moveDistance;
    Horizontal_slideContainer.style.transform = `translateX(${Horizontal_currentTranslate}px)`;
}

function Horizontal_endTouch() {
    if (!Horizontal_isDragging) return;
    Horizontal_isDragging = false;

    // Only slide if a swipe was detected
    if (Horizontal_hasSwiped) {

        const slideWidth = document.querySelector('.upsell_widgetUpsellProductBlock .salemaximizeSliderUpsellRow').clientWidth;
        const movedBy = Horizontal_currentTranslate - Horizontal_previousTranslate;

        if (movedBy < -Horizontal_swipeThreshold) {
            Horizontal_nextSlide();
        } else if (movedBy > Horizontal_swipeThreshold) {
            Horizontal_prevSlide();
        } else {
            Horizontal_showSlide(Horizontal_currentSlide);
        }

        Horizontal_previousTranslate = -Horizontal_currentSlide * slideWidth;
    } else {
        // Reset position if no swipe was detected
        Horizontal_showSlide(Horizontal_currentSlide);
    }
}


function smePrepareUpsellHtml(ProductData, tempSecId) {
    let sourceId = document.querySelector(".widget3").dataset.sourceId;
    let dbSettings = JSON.parse(sme_gm_dataobj.upsell_widget);

    var variantData = ProductData.variants;

    let selectedVariantData = variantData[0];
    let subUpsellInput = '';
    var upsellSettings = dbSettings[tempSecId];

    let general_setting = JSON.parse(sme_gm_dataobj.general_setting);
    let colorSettings = JSON.parse(general_setting.upsell_color_setting);

    upsellSettings = {
        ...upsellSettings,
        ...colorSettings
    };

    let isShowComparePrice = (upsellSettings.is_show_compare_price === '0') ? 'block' : 'none';

    if (dbSettings[tempSecId].product_type === '0' || dbSettings[tempSecId].product_type === '4') {
        if (ProductData.featured_image === null) {
            ProductData.featured_image = smeAppUrl + "assets/img/placeholder.png";
        }
        var variantsHtml = smeGetVariantsBox(variantData, variantData[0].id, ProductData.featured_image);
        var sme_images = ProductData.featured_image;

        var sourceComparePrice = selectedVariantData.compare_at_price !== 0 && selectedVariantData.compare_at_price !== null ? (parseFloat(selectedVariantData.compare_at_price) / 100).toFixed(2) : (parseFloat(selectedVariantData.price) / 100).toFixed(2);
        let discountDataObj = { "discountType": upsellSettings.discount_type, "discountVal": upsellSettings.discount_value, "price": selectedVariantData.price, "priceOver": upsellSettings.price_over_value, "qty": 1 };
        var discountCalCulation = smeDiscountCalculator(discountDataObj);
        var sourcePrice = parseFloat(discountCalCulation.discountedPrice).toFixed(2);
    }

    if (dbSettings[tempSecId].product_type === '1') {
        if (ProductData.image.src === null) {
            ProductData.image.src = smeAppUrl + "assets/img/placeholder.png";
        }
        var variantsHtml = smeGetVariantsBox(variantData, variantData[0].id, ProductData.images, 1);
        var sme_images = ProductData.image.src;

        var sourceComparePrice = 0;
        const presentmentPrice = selectedVariantData.presentment_prices.find(priceData =>
            priceData.price.currency_code === Shopify.currency.active

        );
        if (presentmentPrice.compare_at_price !== null) {

            sourceComparePrice = presentmentPrice.compare_at_price.amount;

        } else {
            sourceComparePrice = selectedVariantData.compare_at_price !== 0 && selectedVariantData.compare_at_price !== null ? parseFloat(selectedVariantData.compare_at_price * Shopify.currency.rate).toFixed(2) : parseFloat(selectedVariantData.price * Shopify.currency.rate).toFixed(2);
        }

        let discountDataObj = { "discountType": upsellSettings.discount_type, "discountVal": upsellSettings.discount_value, "price": presentmentPrice.price.amount * 100, "priceOver": upsellSettings.price_over_value, "qty": 1 };
        var discountCalCulation = smeDiscountCalculator(discountDataObj);

        var sourcePrice = parseFloat(discountCalCulation.discountedPrice).toFixed(2);
    }

    comparePrice = (sourceComparePrice !== sourcePrice && sourceComparePrice !== 0) ? '<span class="salemaximize__compare-price notranslate" style="color:' + upsellSettings.compare_price_color + ';display:' + isShowComparePrice + ';">' + smeCurrencyFormate + sourceComparePrice + '</span>' : '';

    sourcePrice = smeCurrencyFormate + sourcePrice;
    if (upsellSettings.is_active === '1') {
        document.querySelector('.widget3').style.display = 'none';
    } else {
    }
    let discountTagName = (upsellSettings.discount_name) ? '<input type="hidden" name="properties[__smeDiscountTag]" value="' + upsellSettings.discount_name + '">' : '';

    let reviewHtml = smeReviewFn(ProductData.id, ProductData.handle, '', ProductData);
    let upsellHtml = '\
        <div class="salemaximize__for-you-items salemaximizeProductDiv salemaximize__product-detail smeProductMain smeProductBlock' + tempSecId + ' smeProductSlider' + tempSecId + ' smeUpsellVariant' + ProductData.id + tempSecId + sourceId + ' Horizontal_upsell_smeProductBlock" data-temp-id="' + tempSecId + '">\
        <div class="salemaximize__product-image-div">\
            <img src="' + sme_images + '" class="salemaximize__product-image salemaximizeProductImg" draggable="false">\
        </div>\
        <div class="salemaximize__product-info">\
            <div class="salemaximize__product-name" style="color:' + upsellSettings.product_title_color + '"><a href="https://' + smeShop + '/products/' + ProductData.handle + '" class="salemaximize__product_redirect_link" target="_blank" title="' + ProductData.title + '">' + ProductData.title + '</a></div>\
            <div class="salemaximize__recommandation-product-varients salemaximize__product-varients smevariantbox' + tempSecId + '" style="display:' + (variantsHtml !== '' ? "block" : "none") + ';border-color: ' + upsellSettings.box_border_color + '">\
               <style> .__salemaximize .smevariantbox' + tempSecId + '::after { border-top: 6px solid ' + upsellSettings.box_border_color + '; }</style> \
                <select class="salemaximize__product-varients" data-discount-type="'+ upsellSettings.discount_type + '" data-discount-val="' + upsellSettings.discount_value + '" data-price-over-val="' + upsellSettings.price_over_value + '" onchange="smeChangeVariant(this)" name="" style="color: ' + upsellSettings.box_text_color + '">\
                   ' + variantsHtml + '\
                </select>\
            </div>\
            <div class="salemaximize__product-price">\
                ' + comparePrice + '\
                <span class="salemaximize__selling-price notranslate" style="color:' + upsellSettings.selling_price_color + ';">' + sourcePrice + '</span>\
            </div>\
            <div class="salemaximize__star-review salemaximize__m-0">\
                '+ reviewHtml + '\
            </div>\
        </div>\
        <div class="salemaximize__product-add">\
            <form class="smeProductForm">\
                <input type="hidden" name="id" value="' + selectedVariantData.id + '">\
                <input type="hidden" name="quantity" value="1">\
                <input type="hidden" name="properties[__smeWidgetProduct]" value="'+ sourceId + '-' + tempSecId + '">\
                <input type="hidden" name="properties[__smeProductDiscount]" value="'+ discountCalCulation.appliedDiscount + '">\
                <input type="hidden" name="properties[__smeProductDiscountType]" value="'+ upsellSettings.discount_type + '">\
                <input type="hidden" name="properties[__smeProductdiscount_value]" value="'+ upsellSettings.discount_value + '">\
                '+ discountTagName + '\
                '+ subUpsellInput + '\
                <button type="button" class="salemaximize__add-btn" onclick="smeAtcProcess(this)" style="color:'+ upsellSettings.button_text_color + '; background-color: ' + upsellSettings.button_bg_color + ';">' + upsellSettings.button_text + '</button>\
            </form>\
        </div>\
    </div>';

    return upsellHtml;
}

function smeCheckoutUpsellInit() {
    var sme_gm_checkout_widget = JSON.parse(sme_gm_dataobj.checkout_widget);
    var tempSecId = Object.keys(sme_gm_checkout_widget)[0];

    var upsell_settings = JSON.parse(sme_gm_checkout_widget[tempSecId].upsell_settings);
    var upsell_type = upsell_settings[0].upsell_type;

    let smeProductData = smeCartData.items;
    smeProductData.forEach((val, key) => {
        if (val.properties && val.properties.__smeUpsellType) {
            var swatchUpsellType = val.properties.__smeUpsellType;
        }
    });

    if (upsell_type === '2') {
        var viewType = upsell_settings[0].product_type;
        if (viewType === '0') {
            smeCheckoutUpsellRecomView();
        }
        if (viewType === '1') {
            smeCheckoutUpsellSpecificview();
        }
        if (viewType === '4') {
            smeCheckoutUpsellAbandonedView();
        }
    }
}

var Checkout_slideContainer;
async function smeCheckoutUpsellRecomView() {
    if (smeCartData.items.length > 0) {
        document.querySelector(".checkout_widgetUpsellProductBlock").removeAttribute('style');
        let productIdArray = smeCartData.items.map(function (productData) {
            return productData.product_id;
        });

        let cartItemLength = Math.floor(Math.random() * productIdArray.length);
        let productId = productIdArray[cartItemLength];
        let url = '/recommendations/products.json?currency=' + smeUserCurrency + '&product_id=' + productId;
        let smeApiResponse = await smeGetAjaxApiFn(url);

        let maxProducts = 10;
        let recommendedProducts = [];

        let shuffledProducts = smeApiResponse.products.sort(() => Math.random() - 0.5);
        recommendedProducts = shuffledProducts.slice(0, maxProducts);

        //recommProductlength = recommendedProducts.length;
        if (!smeApiResponse.status && recommendedProducts.length > 0) {
            let productObj = recommendedProducts;
            var sme_gm_checkout_widget = JSON.parse(sme_gm_dataobj.checkout_widget);
            var tempSecId = Object.keys(sme_gm_checkout_widget)[0];

            let upsellHtml = '<div class="salemaximizeSliderUpsellRow sme_slider_upsell_row">';
            var upsell_settings = JSON.parse(sme_gm_checkout_widget[tempSecId].upsell_settings);
            var row = upsell_settings[0].products_row_count ? upsell_settings[0].products_row_count : 1;
            var new_row = row;
            var i = 1;

            productObj.forEach(function (recomProductData) {
                upsellHtml += smePrepareCheckoutUpsellHtml(recomProductData, tempSecId);
                smeJdgmReview(recomProductData.handle, recomProductData.id);
                if (new_row == i) {
                    upsellHtml += '</div>';
                    if (i < recommendedProducts.length) {  // Check if not at the end of product_id array
                        new_row = Number(i) + Number(row);  // Update new_row based on the current index and row count
                        upsellHtml += '<div class="salemaximizeSliderUpsellRow sme_slider_upsell_row">';
                    }
                } else {
                    if (i == recommendedProducts.length) {
                        upsellHtml += '</div>';
                    }
                }

                i++;
            });
            let upsellContainer = document.querySelector('.checkout_widgetUpsellProductBlock');
            upsellContainer.innerHTML = upsellHtml;

            document.querySelector(".checkout_widgetUpsellProductBlock").style.display = "flex";

            Checkout_slideContainer = document.querySelector('.checkout_widgetUpsellProductBlock');

            if (document.querySelectorAll('.checkout_widgetUpsellProductBlock .salemaximizeSliderUpsellRow').length > 1) {
                Checkout_currentSlide = 0;
                var Checkout_divcopynode = document.querySelectorAll('.checkout_widgetUpsellProductBlock .salemaximizeSliderUpsellRow');
                
                Checkout_startX = 0;
                Checkout_isDragging = false;
                Checkout_hasSwiped = false;
                Checkout_startPosition = 0;
                Checkout_currentTranslate = 0;
                Checkout_previousTranslate = 0;
                Checkout_swipeThreshold = 50;

                var Checkout_slider_button = `<button id="Checkout_prevBtn" onclick="Checkout_prevSlide()" class="salemaximize__slick-previous-arrow" aria-label="Previous" type="button" style=""><svg xmlns="http://www.w3.org/2000/svg" width="8" height="14" viewBox="0 0 8 14" fill="none"><path d="M7 1L1 7L7 13" stroke="#666666" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg></button>
                    <button id="Checkout_nextBtn" onclick="Checkout_nextSlide()" class="salemaximize__slick-next-arrow" aria-label="Next" type="button" style=""><svg xmlns="http://www.w3.org/2000/svg" width="8" height="14" viewBox="0 0 8 14" fill="none"><path d="M1 1L7 7L1 13" stroke="#666666" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg></button>`;
                if (!document.querySelector('#Checkout_nextBtn') && !document.querySelector('#Checkout_prevBtn')) {
                    document.querySelector('.checkout_widgetUpsellProductBlock').insertAdjacentHTML('afterend', Checkout_slider_button);
                }

                Checkout_divcopynode.forEach((element, key) => {
                    element.style.height = `${element.offsetHeight}px`;
                });
                Checkout_slideContainer.style.height = `${document.querySelectorAll('.checkout_widgetUpsellProductBlock .salemaximizeSliderUpsellRow')[0].offsetHeight}px`;

                Checkout_slideContainer.addEventListener('touchstart', Checkout_startTouch);
                Checkout_slideContainer.addEventListener('touchmove', Checkout_moveTouch);
                Checkout_slideContainer.addEventListener('touchend', Checkout_endTouch);
                Checkout_slideContainer.addEventListener('touchcancel', Checkout_endTouch); // Fallback for when touchend is not fired
                window.addEventListener('touchend', Checkout_endTouch); // Ensure touchend is captured globally
            } else {
                if (document.querySelector('#Checkout_nextBtn')) {
                    document.querySelector('#Checkout_nextBtn').remove();
                }

                if (document.querySelector('#Checkout_prevBtn')) {
                    document.querySelector('#Checkout_prevBtn').remove();
                }

                Checkout_slideContainer.removeEventListener('touchstart', Checkout_startTouch);
                Checkout_slideContainer.removeEventListener('touchmove', Checkout_moveTouch);
                Checkout_slideContainer.removeEventListener('touchend', Checkout_endTouch);
                Checkout_slideContainer.removeEventListener('touchcancel', Checkout_endTouch); // Fallback for when touchend is not fired
                window.removeEventListener('touchend', Checkout_endTouch);
            }

            if (checkoutdrawercall == true) {
                document.querySelector(".checkout_widgetUpsellProductBlock").style.visibility = 'hidden';
                checkoutdrawercall = true;

            } else {
                document.querySelector(".checkout_widgetUpsellProductBlock").style.visibility = 'visible';
            }

        } else {
            document.querySelector(".checkout_widgetUpsellProductBlock").style.display = "none";
        }
        if (smeApiResponse.products.length <= 0) {
            productIdArray.splice(productIdArray.indexOf(productId), 1);
        }
    } else {
        document.querySelector(".checkout_widgetUpsellProductBlock").style.visibility = "hidden";
    }
}

function smeCheckoutUpsellSpecificview() {

    document.querySelector(".checkout_widgetUpsellProductBlock").removeAttribute('style');

    let productIdArray = smeCartData.items.map(function (productData) {
        return productData.product_id;
    });

    var sme_gm_checkout_widget = JSON.parse(sme_gm_dataobj.checkout_widget);
    var tempSecId = Object.keys(sme_gm_checkout_widget)[0];
    var checkout_upsell_settings = JSON.parse(sme_gm_checkout_widget[tempSecId].upsell_settings);

    let product_id = checkout_upsell_settings[0].product_id.split(",");
    let productIndex = 0;

    let productIdSet = new Set(productIdArray);
    let filteredProductIds = product_id.filter(id => !productIdSet.has(Number(id)));
  
    if (filteredProductIds.length > 0) {

        let upsellHtml = '<div class="salemaximizeSliderUpsellRow sme_slider_upsell_row">';
        var upsell_settings = JSON.parse(sme_gm_checkout_widget[tempSecId].upsell_settings);
        var row = upsell_settings[0].products_row_count ? upsell_settings[0].products_row_count : 1;
        var new_row = row;
        var i = 1;

        var filteredProduct_Ids = filteredProductIds.join(",");
        let data_url = smeAppUrl + "checkout_upsell_call.php";
        const smePostData = JSON.stringify({
            method_name: "upsell_specific_view",
            shop: Shopify.shop,
            token: sme_gm_dataobj.token,
            product_ids: filteredProduct_Ids
        });
        let authHeader = { 'Authentication': smeReqHeader.Authentication };
        let smeXhrHttp = new XMLHttpRequest();
        smeXhrHttp.open("POST", data_url, true);
        let headerObj = (authHeader['json']) ? { 'Content-type': 'application/json; charset=UTF-8' } : { 'Content-type': 'application/x-www-form-urlencoded' };
        if (authHeader != '') {
            headerObj = {
                ...headerObj,
                ...authHeader
            };
        }
        delete headerObj['json'];
        for (let key in headerObj) {
            smeXhrHttp.setRequestHeader(key, headerObj[key])
        }
        smeXhrHttp.onload = function () {

            if (smeXhrHttp.status >= 200 && smeXhrHttp.status < 300) {
                var smeApiResponse = JSON.parse(this.responseText);
                for (let recomProductData of smeApiResponse) {
                    upsellHtml += smePrepareCheckoutUpsellHtml(recomProductData, tempSecId);
                    smeJdgmReview(recomProductData.handle, recomProductData.id);

                    if (new_row == i) {
                        upsellHtml += '</div>';
                        if (i < filteredProductIds.length) {  // Check if not at the end of product_id array
                            new_row = Number(i) + Number(row);  // Update new_row based on the current index and row count
                            upsellHtml += '<div class="salemaximizeSliderUpsellRow sme_slider_upsell_row">';
                        }
                    } else {
                        if (i == filteredProductIds.length) {
                            upsellHtml += '</div>';
                        }
                    }

                    i++;
                }
                document.querySelector(".checkout_widgetUpsellProductBlock").innerHTML = upsellHtml;

                document.querySelector(".checkout_widgetUpsellProductBlock").style.display = "flex";

                Checkout_slideContainer = document.querySelector('.checkout_widgetUpsellProductBlock');

                if (document.querySelectorAll('.checkout_widgetUpsellProductBlock .salemaximizeSliderUpsellRow').length > 1) {
                    Checkout_currentSlide = 0;
                    var Checkout_divcopynode = document.querySelectorAll('.checkout_widgetUpsellProductBlock .salemaximizeSliderUpsellRow');
                    
                    Checkout_startX = 0;
                    Checkout_isDragging = false;
                    Checkout_hasSwiped = false;
                    Checkout_startPosition = 0;
                    Checkout_currentTranslate = 0;
                    Checkout_previousTranslate = 0;
                    Checkout_swipeThreshold = 50;

                    var Checkout_slider_button = `<button id="Checkout_prevBtn" onclick="Checkout_prevSlide()" class="salemaximize__slick-previous-arrow" aria-label="Previous" type="button" style=""><svg xmlns="http://www.w3.org/2000/svg" width="8" height="14" viewBox="0 0 8 14" fill="none"><path d="M7 1L1 7L7 13" stroke="#666666" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg></button>
                    <button id="Checkout_nextBtn" onclick="Checkout_nextSlide()" class="salemaximize__slick-next-arrow" aria-label="Next" type="button" style=""><svg xmlns="http://www.w3.org/2000/svg" width="8" height="14" viewBox="0 0 8 14" fill="none"><path d="M1 1L7 7L1 13" stroke="#666666" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg></button>`;
                    if (!document.querySelector('#Checkout_nextBtn') && !document.querySelector('#Checkout_prevBtn')) {
                        document.querySelector('.checkout_widgetUpsellProductBlock').insertAdjacentHTML('afterend', Checkout_slider_button);
                    }

                    Checkout_divcopynode.forEach((element, key) => {
                        element.style.height = `${element.offsetHeight}px`;
                    });
                    Checkout_slideContainer.style.height = `${document.querySelectorAll('.checkout_widgetUpsellProductBlock .salemaximizeSliderUpsellRow')[0].offsetHeight}px`;

                    Checkout_slideContainer.addEventListener('touchstart', Checkout_startTouch);
                    Checkout_slideContainer.addEventListener('touchmove', Checkout_moveTouch);
                    Checkout_slideContainer.addEventListener('touchend', Checkout_endTouch);
                    Checkout_slideContainer.addEventListener('touchcancel', Checkout_endTouch); // Fallback for when touchend is not fired
                    window.addEventListener('touchend', Checkout_endTouch); // Ensure touchend is captured globally
                } else {
                    if (document.querySelector('#Checkout_nextBtn')) {
                        document.querySelector('#Checkout_nextBtn').remove();
                    }

                    if (document.querySelector('#Checkout_prevBtn')) {
                        document.querySelector('#Checkout_prevBtn').remove();
                    }
                    
                    Checkout_slideContainer.removeEventListener('touchstart', Checkout_startTouch);
                    Checkout_slideContainer.removeEventListener('touchmove', Checkout_moveTouch);
                    Checkout_slideContainer.removeEventListener('touchend', Checkout_endTouch);
                    Checkout_slideContainer.removeEventListener('touchcancel', Checkout_endTouch); // Fallback for when touchend is not fired
                    window.removeEventListener('touchend', Checkout_endTouch);
                }

                if (checkoutdrawercall == true) {
                    document.querySelector(".checkout_widgetUpsellProductBlock").style.visibility = 'hidden';
                    checkoutdrawercall = true;

                } else {
                    document.querySelector(".checkout_widgetUpsellProductBlock").style.visibility = 'visible';
                }
            }
        };
        smeXhrHttp.send(smePostData);

    } else {
        document.querySelector(".checkout_widgetUpsellProductBlock").style.display = "none";
    }
}

async function smeCheckoutUpsellAbandonedView() {

    document.querySelector(".checkout_widgetUpsellProductBlock").removeAttribute('style');

    let productIdArray = smeCartData.items.map(function (productData) {
        return productData.handle;
    });

    var sme_gm_checkout_widget = JSON.parse(sme_gm_dataobj.checkout_widget);
    var tempSecId = Object.keys(sme_gm_checkout_widget)[0];
    var checkout_upsell_settings = JSON.parse(sme_gm_checkout_widget[tempSecId].upsell_settings);

    var token = sme_gm_dataobj.token;
    let data_url = smeAppUrl + "checkout_upsell_call.php";
    const smePostData = JSON.stringify({
        method_name: "upsell_abandoned_view",
        shop: Shopify.shop,
        token: token
    });
    let authHeader = { 'Authentication': smeReqHeader.Authentication };
    let smeApiResponse = await smePostAjaxApiFn(data_url, smePostData, authHeader);
    if (!smeApiResponse.status) {

        if (smeApiResponse.info.length > 0) {
            let product_id = JSON.parse(smeApiResponse.info);
            let upsellHtml = '';

            let productIdSet = new Set(productIdArray);
            let filteredProductIds = product_id.filter(id => !productIdSet.has(id));
            if (filteredProductIds.length > 0) {

                let upsellHtml = '<div class="salemaximizeSliderUpsellRow sme_slider_upsell_row">';
                var upsell_settings = JSON.parse(sme_gm_checkout_widget[tempSecId].upsell_settings);
                var row = upsell_settings[0].products_row_count ? upsell_settings[0].products_row_count : 1;
                var new_row = row;
                var i = 1;

                for (let handleVal of filteredProductIds) {

                    const url = 'https://' + smeSiteDomain + '/products/' + handleVal + '.js?currency=' + smeUserCurrency;
                    try {
                        const response = await fetch(url, {
                            method: 'GET',
                            headers: {
                                'Content-Type': 'application/json',
                                'X-Shopify-Access-Token': `${sme_gm_dataobj.token}`
                            }
                        });

                        if (!response.ok) {
                            throw new Error('Failed to fetch product. HTTP status code: ' + response.status);
                        }

                        const data = await response.json();
                        upsellHtml += smePrepareCheckoutUpsellHtml(data, tempSecId);
                        smeJdgmReview(data.handle, data.id);

                        if (new_row == i) {
                            upsellHtml += '</div>';
                            if (i < filteredProductIds.length) {  // Check if not at the end of product_id array
                                new_row = Number(i) + Number(row);  // Update new_row based on the current index and row count
                                upsellHtml += '<div class="salemaximizeSliderUpsellRow sme_slider_upsell_row">';
                            }
                        } else {
                            if (i == filteredProductIds.length) {
                                upsellHtml += '</div>';
                            }
                        }

                        i++;
                    } catch (error) {
                        console.error('Error fetching product:', error);
                        document.querySelector(".checkout_widgetUpsellProductBlock").style.display = 'none';
                        return null;
                    }
                };

                document.querySelector(".checkout_widgetUpsellProductBlock").innerHTML = upsellHtml;

                document.querySelector(".checkout_widgetUpsellProductBlock").style.display = "flex";

                Checkout_slideContainer = document.querySelector('.checkout_widgetUpsellProductBlock');
                if (document.querySelectorAll('.checkout_widgetUpsellProductBlock .salemaximizeSliderUpsellRow').length > 1) {
                    Checkout_currentSlide = 0;
                    var Checkout_divcopynode = document.querySelectorAll('.checkout_widgetUpsellProductBlock .salemaximizeSliderUpsellRow');
                    Checkout_startX = 0;
                    Checkout_isDragging = false;
                    Checkout_hasSwiped = false;
                    Checkout_startPosition = 0;
                    Checkout_currentTranslate = 0;
                    Checkout_previousTranslate = 0;
                    Checkout_swipeThreshold = 50;

                    var Checkout_slider_button = `<button id="Checkout_prevBtn" onclick="Checkout_prevSlide()" class="salemaximize__slick-previous-arrow" aria-label="Previous" type="button" style=""><svg xmlns="http://www.w3.org/2000/svg" width="8" height="14" viewBox="0 0 8 14" fill="none"><path d="M7 1L1 7L7 13" stroke="#666666" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg></button>
                    <button id="Checkout_nextBtn" onclick="Checkout_nextSlide()" class="salemaximize__slick-next-arrow" aria-label="Next" type="button" style=""><svg xmlns="http://www.w3.org/2000/svg" width="8" height="14" viewBox="0 0 8 14" fill="none"><path d="M1 1L7 7L1 13" stroke="#666666" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path></svg></button>`;
                    if (!document.querySelector('#Checkout_nextBtn') && !document.querySelector('#Checkout_prevBtn')) {
                        document.querySelector('.checkout_widgetUpsellProductBlock').insertAdjacentHTML('afterend', Checkout_slider_button);
                    }

                    Checkout_divcopynode.forEach((element, key) => {
                        element.style.height = `${element.offsetHeight}px`;
                    });
                    Checkout_slideContainer.style.height = `${document.querySelectorAll('.checkout_widgetUpsellProductBlock .salemaximizeSliderUpsellRow')[0].offsetHeight}px`;

                    Checkout_slideContainer.addEventListener('touchstart', Checkout_startTouch);
                    Checkout_slideContainer.addEventListener('touchmove', Checkout_moveTouch);
                    Checkout_slideContainer.addEventListener('touchend', Checkout_endTouch);
                    Checkout_slideContainer.addEventListener('touchcancel', Checkout_endTouch); // Fallback for when touchend is not fired
                    window.addEventListener('touchend', Checkout_endTouch); // Ensure touchend is captured globally
                } else {
                    if (document.querySelector('#Checkout_nextBtn')) {
                        document.querySelector('#Checkout_nextBtn').remove();
                    }

                    if (document.querySelector('#Checkout_prevBtn')) {
                        document.querySelector('#Checkout_prevBtn').remove();
                    }
                    
                    Checkout_slideContainer.removeEventListener('touchstart', Checkout_startTouch);
                    Checkout_slideContainer.removeEventListener('touchmove', Checkout_moveTouch);
                    Checkout_slideContainer.removeEventListener('touchend', Checkout_endTouch);
                    Checkout_slideContainer.removeEventListener('touchcancel', Checkout_endTouch); // Fallback for when touchend is not fired
                    window.removeEventListener('touchend', Checkout_endTouch);
                }

                if (checkoutdrawercall == true) {
                    document.querySelector(".checkout_widgetUpsellProductBlock").style.visibility = 'hidden';
                    checkoutdrawercall = true;
                } else {
                    document.querySelector(".checkout_widgetUpsellProductBlock").style.visibility = 'visible';
                }
            }
            else {
                document.querySelector(".checkout_widgetUpsellProductBlock").style.display = 'none';
            }
        } else {
            document.querySelector(".checkout_widgetUpsellProductBlock").style.display = 'none';
        }
    }
}


let Checkout_currentSlide = 0;
let Checkout_startX = 0;
let Checkout_isDragging = false;
let Checkout_hasSwiped = false;
let Checkout_startPosition = 0;
let Checkout_currentTranslate = 0;
let Checkout_previousTranslate = 0;
var Checkout_swipeThreshold = 50;

function Checkout_showSlide(index) {
    const slides = document.querySelector('.checkout_widgetUpsellProductBlock');
    if (!slides) return;

    const slideWidth = document.querySelector('.checkout_widgetUpsellProductBlock .salemaximizeSliderUpsellRow').clientWidth;
    slides.style.transform = `translateX(${-index * slideWidth}px)`;
    Checkout_currentTranslate = (-index * slideWidth);
    slides.style.transition = 'transform 600ms, height 600ms';
    requestAnimationFrame(() => {
        document.querySelectorAll('.checkout_widgetUpsellProductBlock .salemaximizeSliderUpsellRow')[index].offsetHeight;
        slides.style.height = `${document.querySelectorAll('.checkout_widgetUpsellProductBlock .salemaximizeSliderUpsellRow')[index].offsetHeight}px`;
    });
    Checkout_currentSlide = index;

}

function Checkout_nextSlide() {
    const totalSlides = document.querySelectorAll('.checkout_widgetUpsellProductBlock .salemaximizeSliderUpsellRow').length;
    Checkout_currentSlide = (Checkout_currentSlide + 1) % totalSlides;
    Checkout_showSlide(Checkout_currentSlide);
}

function Checkout_prevSlide() {
    const totalSlides = document.querySelectorAll('.checkout_widgetUpsellProductBlock .salemaximizeSliderUpsellRow').length;
    Checkout_currentSlide = (Checkout_currentSlide - 1 + totalSlides) % totalSlides;
    Checkout_showSlide(Checkout_currentSlide);
}

// Touch Events for Swipe Detection on Mobile Devices
function Checkout_startTouch(e) {
    Checkout_startX = e.touches[0].clientX;
    Checkout_isDragging = true;
    Checkout_hasSwiped = false;
    Checkout_startPosition = Checkout_currentTranslate;
    Checkout_slideContainer.style.transition = 'none';
}

function Checkout_moveTouch(e) {
    if (!Checkout_isDragging) return;
    const currentPosition = e.touches[0].clientX;
    const moveDistance = currentPosition - Checkout_startX;


    Checkout_hasSwiped = true;
    Checkout_currentTranslate = Checkout_startPosition + moveDistance;
    Checkout_slideContainer.style.transform = `translateX(${Checkout_currentTranslate}px)`;
}

function Checkout_endTouch() {
    if (!Checkout_isDragging) return;
    Checkout_isDragging = false;

    // Only slide if a swipe was detected
    if (Checkout_hasSwiped) {

        const slideWidth = document.querySelector('.checkout_widgetUpsellProductBlock .salemaximizeSliderUpsellRow').clientWidth;
        const movedBy = Checkout_currentTranslate - Checkout_previousTranslate;

        if (movedBy < -Checkout_swipeThreshold) {
            Checkout_nextSlide();
        } else if (movedBy > Checkout_swipeThreshold) {
            Checkout_prevSlide();
        } else {
            Checkout_showSlide(Checkout_currentSlide);
        }

        Checkout_previousTranslate = -Checkout_currentSlide * slideWidth;
    } else {
        // Reset position if no swipe was detected
        Checkout_showSlide(Checkout_currentSlide);
    }
}


function smePrepareCheckoutUpsellHtml(ProductData, tempSecId) {
    let sourceId = document.querySelector(".widget6").dataset.sourceId;
    var sme_gm_checkout_widget = JSON.parse(sme_gm_dataobj.checkout_widget);
    var tempSecId = Object.keys(sme_gm_checkout_widget)[0];
    var upsell_settings = JSON.parse(sme_gm_checkout_widget[tempSecId].upsell_settings);
    var variantData = ProductData.variants;

    let selectedVariantData = variantData[0];
    let subUpsellInput = '';

    var upsellSettings = upsell_settings[0];

    let general_setting = JSON.parse(sme_gm_dataobj.general_setting);
    let colorSettings = JSON.parse(general_setting.checkout_color_setting);
    upsellSettings = {
        ...upsellSettings,
        ...colorSettings
    };

    let isShowComparePrice = (upsellSettings.is_show_compare_price === '0') ? 'block' : 'none';

    if (upsell_settings[0].product_type === '0' || upsell_settings[0].product_type === '4') {
        if (ProductData.featured_image === null) {
            ProductData.featured_image = smeAppUrl + "assets/img/placeholder.png";
        }
        var variantsHtml = smeGetVariantsBox(variantData, variantData[0].id, ProductData.featured_image);
        var sme_images = ProductData.featured_image;

        var sourceComparePrice = selectedVariantData.compare_at_price !== 0 && selectedVariantData.compare_at_price !== null ? (parseFloat(selectedVariantData.compare_at_price) / 100).toFixed(2) : (parseFloat(selectedVariantData.price) / 100).toFixed(2);
        let discountDataObj = { "discountType": upsellSettings.discount_type, "discountVal": upsellSettings.discount_value, "price": selectedVariantData.price, "priceOver": upsellSettings.price_over_value, "qty": 1 };
        var discountCalCulation = smeDiscountCalculator(discountDataObj);
        var sourcePrice = parseFloat(discountCalCulation.discountedPrice).toFixed(2);
    }

    if (upsell_settings[0].product_type === '1') {

        if (ProductData.image.src === null) {
            ProductData.image.src = smeAppUrl + "assets/img/placeholder.png";
        }
        var variantsHtml = smeGetVariantsBox(variantData, variantData[0].id, ProductData.images, 1);

        var sme_images = ProductData.image.src;

        var sourceComparePrice = 0;
        const presentmentPrice = selectedVariantData.presentment_prices.find(priceData =>
            priceData.price.currency_code === Shopify.currency.active

        );
        if (presentmentPrice.compare_at_price !== null) {
            sourceComparePrice = presentmentPrice.compare_at_price.amount;
        } else {
            sourceComparePrice = selectedVariantData.compare_at_price !== 0 && selectedVariantData.compare_at_price !== null ? parseFloat(selectedVariantData.compare_at_price * Shopify.currency.rate).toFixed(2) : parseFloat(selectedVariantData.price * Shopify.currency.rate).toFixed(2);
        }

        let discountDataObj = { "discountType": upsellSettings.discount_type, "discountVal": upsellSettings.discount_value, "price": presentmentPrice.price.amount * 100, "priceOver": upsellSettings.price_over_value, "qty": 1 };
        var discountCalCulation = smeDiscountCalculator(discountDataObj);

        var sourcePrice = parseFloat(discountCalCulation.discountedPrice).toFixed(2);
    }

    comparePrice = (sourceComparePrice !== sourcePrice && sourceComparePrice !== 0) ? '<span class="salemaximize__compare-price notranslate" style="color:' + upsellSettings.compare_price_color + ';display:' + isShowComparePrice + ';">' + smeCurrencyFormate + sourceComparePrice + '</span>' : '';
    sourcePrice = smeCurrencyFormate + sourcePrice;
    if (upsellSettings.is_enable === '1') {
        document.querySelector('.checkout_widgetUpsellProductBlock').style.display = 'none';
    } else {
        document.querySelector('.checkout_widgetUpsellProductBlock').classList.remove('widget-disable');
    }
    let discountTagName = (upsellSettings.discount_name) ? '<input type="hidden" name="properties[__smeDiscountTag]" value="' + upsellSettings.discount_name + '">' : '';

    let reviewHtml = smeReviewFn(ProductData.id, ProductData.handle, '', ProductData);
    let upsellHtml = '\
        <div class="salemaximize__for-you-items salemaximizeProductDiv salemaximize__product-detail smeProductMain smeProductBlock' + tempSecId + ' smeProductSlider' + tempSecId + ' smeUpsellVariant' + ProductData.id + tempSecId + sourceId + ' checkout_smeProductBlock" data-temp-id="' + tempSecId + '">\
        <div class="salemaximize__product-image-div">\
            <img src="' + sme_images + '" class="salemaximize__product-image salemaximizeProductImg" draggable="false">\
        </div>\
        <div class="salemaximize__product-info">\
            <div class="salemaximize__product-name" style="color:' + upsellSettings.product_title_color + '"><a href="https://' + smeShop + '/products/' + ProductData.handle + '" class="salemaximize__product_redirect_link" target="_blank" title="' + ProductData.title + '">' + ProductData.title + '</a></div>\
            <div class="salemaximize__recommandation-product-varients salemaximize__product-varients smevariantbox' + tempSecId + '" style="display:' + (variantsHtml !== '' ? "block" : "none") + ';border-color: ' + upsellSettings.box_border_color + '">\
               <style> .__salemaximize .smevariantbox' + tempSecId + '::after { border-top: 6px solid ' + upsellSettings.box_border_color + '; }</style> \
                <select class="salemaximize__product-varients" data-discount-type="'+ upsellSettings.discount_type + '" data-discount-val="' + upsellSettings.discount_value + '" data-price-over-val="' + upsellSettings.price_over_value + '" onchange="smeChangeVariant(this)" name="" style="color: ' + upsellSettings.box_text_color + '">\
                   ' + variantsHtml + '\
                </select>\
            </div>\
            <div class="salemaximize__product-price">\
                ' + comparePrice + '\
                <span class="salemaximize__selling-price notranslate" style="color:' + upsellSettings.selling_price_color + ';">' + sourcePrice + '</span>\
            </div>\
            <div class="salemaximize__star-review salemaximize__m-0">\
                '+ reviewHtml + '\
            </div>\
        </div>\
        <div class="salemaximize__product-add">\
            <form class="smeProductForm">\
                <input type="hidden" name="id" value="' + selectedVariantData.id + '">\
                <input type="hidden" name="quantity" value="1">\
                <input type="hidden" name="properties[__smeWidgetProduct]" value="'+ sourceId + '-' + tempSecId + '">\
                <input type="hidden" name="properties[__smeProductDiscount]" value="'+ discountCalCulation.appliedDiscount + '">\
                <input type="hidden" name="properties[__smeProductDiscountType]" value="'+ upsellSettings.discount_type + '">\
                <input type="hidden" name="properties[__smeProductdiscount_value]" value="'+ upsellSettings.discount_value + '">\
                '+ discountTagName + '\
                '+ subUpsellInput + '\
                <button type="button" class="salemaximize__add-btn" onclick="smeAtcProcess(this)" style="color:'+ upsellSettings.button_text_color + '; background-color: ' + upsellSettings.button_bg_color + ';">' + upsellSettings.button_text + '</button>\
            </form>\
        </div>\
    </div>';
    return upsellHtml;
}

function smeGetVariantsBox(variants, selectVariantId, featuredImage, upsell_type = '0') {
    let varintOptionHtml = '';
    variants.forEach(function (variants_data) {
        if (variants_data.title != 'Default Title') {

            if (upsell_type === '0') {
                var variants_img = (variants_data.featured_image != null) ? variants_data.featured_image.src : (featuredImage.url) ? featuredImage.url : featuredImage;
                var compare_at_price = variants_data.compare_at_price / 100;
                var price = variants_data.price / 100;
                compare_at_price = (compare_at_price != '0') ? compare_at_price : price;
            } else {
                if (Array.isArray(featuredImage)) {
                    var variantImage = featuredImage.find(image => image.variant_ids.includes(variants_data.id)) || {};
                    var variants_img = variantImage.src ||
                        (Array.isArray(featuredImage) && featuredImage.length > 0 ?
                            featuredImage[0].src : smeAppUrl + 'assets/img/placeholder.png');
                }
                var compare_at_price = (variants_data.compare_at_price);
                var price = (variants_data.price) * Shopify.currency.rate;
                compare_at_price = (compare_at_price != null) ? compare_at_price * Shopify.currency.rate : price;
            }

            let optionSelectClass = '';
            if (selectVariantId == variants_data.id) {
                optionSelectClass = 'selected';
            }

            varintOptionHtml += '<option class="" ' + optionSelectClass + ' data-variantsImg="' + variants_img + '" value="' + variants_data.id + '" data-comparePrice="' + parseFloat(compare_at_price).toFixed(2) + '" data-selling-price="' + parseFloat(price) + '" data-variantsPrice="' + variants_data.title + '">' + variants_data.title + '</li>';
        }
    });
    return varintOptionHtml;
}

function swatchProductDefaultOn() {
    var sme_gm_checkout_widget = JSON.parse(sme_gm_dataobj.checkout_widget);
    var tempSecId = Object.keys(sme_gm_checkout_widget)[0];
    var upsellData = JSON.parse(sme_gm_checkout_widget[tempSecId].upsell_settings);
    if (upsellData[0].upsell_type === '0' && upsellData[0].is_shipping_on === '0') {
        document.querySelector('.shipping_product_smeSwitchProduct').dispatchEvent(new Event('click'));
    }
    if (upsellData[0].upsell_type === '1' && upsellData[0].is_gift_on === '0') {
        document.querySelector('.gift_product_smeSwitchProduct').dispatchEvent(new Event('click'));
    }
}

var smeSwatchProductIndex = 0;
async function smeSwatchProductAdd(thisObj) {
    var sme_gm_checkout_widget = JSON.parse(sme_gm_dataobj.checkout_widget);
    var tempSecId = Object.keys(sme_gm_checkout_widget)[0];
    var upsell_settings = JSON.parse(sme_gm_checkout_widget[tempSecId].upsell_settings);
    if ((upsell_settings[0] && upsell_settings[0].is_enable === '1') || smeCartData.item_count <= 0) {
        return false;
    }

    let upsellType = upsell_settings[0].upsell_type;
    let variantId = (upsellType === '0') ? shipping_variant_id : gift_variant_id;

    if (thisObj.checked) {

        if (!document.querySelector('.smeCartLineItem[data-variant-id="' + variantId + '"]')) {
            let propertieObj = {
                "__smeSwatchProduct": 1,
                "__smeSwatchId": tempSecId,
                "__smeProductforshiiping": "__smeProductforshiiping",
                "__smeUpsellType": upsellType,
                "__smeWidgetProduct": "5-" + tempSecId,
            };

            let url = window.Shopify.routes.root + 'cart/add.js';
            let smePostData = JSON.stringify({ "id": variantId, "quantity": 1, "properties": propertieObj });
            let authHeader = { "json": "true", 'x-requested-with': 'XMLHttpRequest' };
            let smeApiResponse = await smePostAjaxApiFn(url, smePostData, authHeader);
        }
    } else {
        if (document.querySelector('.smeCartLineItem[data-variant-id="' + variantId + '"]')) {
            let url = window.Shopify.routes.root + 'cart/change.js';
            let smePostData = 'id=' + variantId + '&quantity=0';
            let authHeader = { 'x-requested-with': 'XMLHttpRequest' };
            let smeApiResponse = await smePostAjaxApiFn(url, smePostData, authHeader);
            if (!smeApiResponse.status) {
                document.querySelectorAll('.smeCartLineItem.isSwatchProduct').forEach(item => {
                    item.remove();
                });
            }
        }
    }
}

function smeCartClean() {
    document.querySelector('.smeCartEmptyMainDiv').style.display = 'block';
    document.querySelector('.widget6').style.display = 'none';
    if (document.querySelector('.Progress_Bar_discountExpireMsg')) {
        document.querySelector('.Progress_Bar_discountExpireMsg').style.display = 'none';
    }
    document.querySelectorAll('.widget2 .smeDiscountTagBlock, .widget2 .smeCartFotter, .widget5 , .widget3 , .widget4 , .cart_Announcement_bar_title_text, .cart_discountBarTextVal, .widget2 .salemaximize__cart-upsell-product , .checkout_widgetUpsellProductBlock , div[data-view-type="0"].smeUpsellWidget, div[data-view-type="0"].smeRecommendationWidget , .discountTimerBar , .widget6, .salemaximize__discount_expire_msg ').forEach(function (element) {
        element.style.visibility = 'hidden';
    });
    document.querySelector('.smeCartEmptyMainDiv').style.display = 'block';

    smeProgressBarCartItem = 0;
    smeProgressBarInit(0.00, 0.00);
    if (document.querySelector('.smeProgressFillDiv')) {
        document.querySelector('.smeProgressFillDiv').style.width = '0%';
    }

    smeClearIntervalAllTimeBar();

    document.querySelector('.widget1').classList.add('empty_cart_progress_bar');
    document.querySelector('.GScartBG').classList.add('empty_cart_div');
    document.querySelector('.salemaximize__body').style.overflowY = 'hidden';
    if (sme_gm_dataobj.progress_bar_positen == 0) {
        document.querySelector('.empty_cart_progress_bar').style.bottom = '0';
    } else {
        document.querySelector('.empty_cart_progress_bar').style.bottom = '';
    }
}

function smeClearIntervalAllTimeBar() {
    document.querySelectorAll('.discountTimerBar').forEach(function (element) {
        let tempSecId = element.closest('.smewidgetblock').getAttribute('data-source-id');
        clearInterval(smeDiscountBarTimerArray[tempSecId]);
    });
}

var smeDiscountBarTimerArray = [];
function smeDiscountBarTimer(callSelfly = 1, section_id = 0) {
    if (callSelfly === 0 || section_id === 1) {

        var sme_gm_cart_widget = JSON.parse(sme_gm_dataobj.cart_widget);
        var firstKey = Object.keys(sme_gm_cart_widget)[0];
        var cart_Show_timer_bar = sme_gm_cart_widget[firstKey].is_discount_bar_show;

        if (cart_Show_timer_bar === "0") {

            var discountTimeExpireAction = sme_gm_cart_widget[firstKey].discount_bar_expire_action;

            var timeValue = sme_gm_cart_widget[firstKey].discount_bar_time;

            var timeVal = (timeValue < 0) ? 1 : timeValue;

            var discountBarTime = Math.abs(timeVal * 60);
            var cart_smeDiscountBarcall = smeGeneralDiscountGet('cart_smeDiscountBarcall');
            if ((Object.keys(cart_smeDiscountBarcall).length !== 0 && cart_smeDiscountBarcall.constructor !== Object)) {
                var locale_data = JSON.parse(cart_smeDiscountBarcall)
                if (locale_data.seconds !== 0) {
                    discountBarTime = locale_data.seconds;
                }

            }
            var minutes, seconds;
            var discountExpireMsg = document.querySelector('.cart_discountExpireMsg');


            var countDownSelector = document.querySelector('.cart_discountBarTextVal');
            countDownSelector.style.display = 'block';
            countDownSelector.style.visibility = 'visible';

            discountExpireMsg.style.display = 'none';

            if (smeDiscountBarTimerArray[1]) clearInterval(smeDiscountBarTimerArray[1]);

            smeDiscountBarTimerArray[1] = setInterval(function () {

                minutes = parseInt(discountBarTime / 60, 10);
                seconds = parseInt(discountBarTime % 60, 10);
                minutes = Math.abs(minutes);
                seconds = Math.abs(seconds);
                minutes = minutes < 10 ? "0" + minutes : minutes;
                seconds = seconds < 10 ? "0" + seconds : seconds;

                var countDownTime = minutes + ":" + seconds;
                if (document.querySelector('.cart_countDownTime')) {
                    document.querySelector('.cart_countDownTime').innerHTML = countDownTime;
                }

                var data = {
                    seconds: discountBarTime
                };

                var dataString = JSON.stringify(data);

                smeGeneralDiscountStore(dataString, 'cart_smeDiscountBarcall');

                if (--discountBarTime < 0) {
                    switch (parseInt(discountTimeExpireAction)) {
                        case 0:
                            if (smeCartData.items.length > 0) {
                                smeDiscountBarTimer(1, 1);
                            } else {
                                clearInterval(smeDiscountBarTimerArray[1]);
                            }
                            break;
                        case 1:
                            document.querySelector('.cart_discountBarTextVal').style.display = 'none';
                            clearInterval(smeDiscountBarTimerArray[1]); // Clear the interval using the stored ID
                            break;
                        case 3:
                            document.querySelector('.cart_discountBarTextVal').style.display = 'none';
                            if (smeCartData.items.length > 0) {
                                discountExpireMsg.style.display = 'block';
                                discountExpireMsg.style.visibility = 'visible';
                            }
                            clearInterval(smeDiscountBarTimerArray[1]); // Clear the interval using the stored ID
                            break;
                        default:

                            clearInterval(smeDiscountBarTimerArray[1]); // Clear the interval using the stored ID
                    }
                }
            }, 1000);
        }
    }

    if (callSelfly === 0 || section_id === 2) {

        var sme_gm_progress_bar_widget = JSON.parse(sme_gm_dataobj.progress_bar_widget);
        var firstKey = Object.keys(sme_gm_progress_bar_widget)[0];
        var Progress_Bar_is_discount_bar_show = sme_gm_progress_bar_widget[firstKey].is_discount_bar_show;
        if (sme_gm_progress_bar_widget[firstKey].is_active === '0') {
            if (sme_gm_progress_bar_widget[firstKey].discount_bar_expire_action !== '2') {
                document.querySelector('.widget1').style.display = 'block';
            }

            if (Progress_Bar_is_discount_bar_show === '0') {
                var Progress_Bar_discount_bar_expire_action = sme_gm_progress_bar_widget[firstKey].discount_bar_expire_action;
                var Progress_Bar_timeValue = sme_gm_progress_bar_widget[firstKey].discount_bar_time;
                var Progress_Bar_timeVal = (Progress_Bar_timeValue < 0) ? 1 : Progress_Bar_timeValue;
                var Progress_Bar_discountBarTime = Math.abs(Progress_Bar_timeVal * 60);
                var progress_bar_smeDiscountBarcall = smeGeneralDiscountGet('progress_bar_smeDiscountBarcall');
                if ((Object.keys(progress_bar_smeDiscountBarcall).length !== 0 && progress_bar_smeDiscountBarcall.constructor !== Object)) {
                    var locale_data = JSON.parse(progress_bar_smeDiscountBarcall)
                    if (locale_data.seconds !== 0) {
                        Progress_Bar_discountBarTime = locale_data.seconds;
                    }

                }

                var minutes, seconds;
                var Progress_Bar_discount_bar_expire_message = document.querySelector('.Progress_Bar_discountExpireMsg');

                var countDownSelector = document.querySelector('.Progress_Bar_discount_bar_text_show_hied');
                countDownSelector.style.display = 'block';
                countDownSelector.style.visibility = 'visible';

                Progress_Bar_discount_bar_expire_message.style.display = 'none';

                if (smeDiscountBarTimerArray[2]) clearInterval(smeDiscountBarTimerArray[2]);

                smeDiscountBarTimerArray[2] = setInterval(function () {
                    minutes = parseInt(Progress_Bar_discountBarTime / 60, 10);
                    seconds = parseInt(Progress_Bar_discountBarTime % 60, 10);
                    minutes = Math.abs(minutes);
                    seconds = Math.abs(seconds);
                    minutes = minutes < 10 ? "0" + minutes : minutes;
                    seconds = seconds < 10 ? "0" + seconds : seconds;
                    var countDownTime = minutes + ":" + seconds;
                    if (document.querySelector('.Progress_Bar_countDownTime')) {
                        document.querySelector('.Progress_Bar_countDownTime').innerHTML = countDownTime;
                    }

                    var data = {
                        seconds: Progress_Bar_discountBarTime
                    };

                    var dataString = JSON.stringify(data);

                    smeGeneralDiscountStore(dataString, 'progress_bar_smeDiscountBarcall');

                    if (--Progress_Bar_discountBarTime < 0) {
                        switch (parseInt(Progress_Bar_discount_bar_expire_action)) {
                            case 0:
                                if (document.querySelector('.widget1').style.display == 'block') {
                                    smeDiscountBarTimer(1, 2);
                                } else {
                                    clearInterval(smeDiscountBarTimerArray[2]);
                                }
                                break;
                            case 1:
                                document.querySelector('.Progress_Bar_discount_bar_text_show_hied').style.display = 'none';

                                clearInterval(smeDiscountBarTimerArray[2]); // Clear the interval using the stored ID
                                break;
                            case 2:
                                document.querySelector('.widget1').style.display = 'none';
                                clearInterval(smeDiscountBarTimerArray[2]);
                                break;
                            case 3:
                                document.querySelector('.Progress_Bar_discount_bar_text_show_hied').style.display = 'none';
                                if (smeCartData.items.length > 0) {
                                    document.querySelector('.Progress_Bar_discountExpireMsg').style.display = 'block';
                                    Progress_Bar_discount_bar_expire_message.style.visibility = 'visible';
                                }
                                clearInterval(smeDiscountBarTimerArray[2]); // Clear the interval using the stored ID
                                break;
                            default:
                                clearInterval(smeDiscountBarTimerArray[2]); // Clear the interval using the stored ID
                        }
                    }
                }, 1000);
            }
        }
    }

    if (callSelfly === 0 || section_id === 3) {
        var sme_gm_upsell_widget = JSON.parse(sme_gm_dataobj.upsell_widget);
        var firstKey = Object.keys(sme_gm_upsell_widget)[0];
        var Horizontal_upsell_is_discount_bar_show_input = sme_gm_upsell_widget[firstKey].is_discount_bar_show;

        if (sme_gm_upsell_widget[firstKey].is_active === '0') {
            var upsell_data_check = document.querySelector('.upsell_widgetUpsellProductBlock.actionTaken');
            if (upsell_data_check) {
                document.querySelector('.widget3').style.display = 'none';
            } else {
                if (sme_gm_upsell_widget[firstKey].discount_bar_expire_action !== '2') {
                    document.querySelector('.widget3').style.display = 'block';
                }
            }
            if (Horizontal_upsell_is_discount_bar_show_input === "0") {
                var Horizontal_upsell_discount_bar_expire_action = sme_gm_upsell_widget[firstKey].discount_bar_expire_action;

                var Horizontal_upsell_discount_bar_time = sme_gm_upsell_widget[firstKey].discount_bar_time;
                var Horizontal_upsell_timeVal = (Horizontal_upsell_discount_bar_time < 0) ? 1 : Horizontal_upsell_discount_bar_time;
                var Horizontal_upsell_discountBarTime = Math.abs(Horizontal_upsell_timeVal * 60);

                var upsell_smeDiscountBarcall = smeGeneralDiscountGet('upsell_smeDiscountBarcall');
                if ((Object.keys(upsell_smeDiscountBarcall).length !== 0 && upsell_smeDiscountBarcall.constructor !== Object)) {
                    var locale_data = JSON.parse(upsell_smeDiscountBarcall)
                    if (locale_data.seconds !== 0) {
                        Horizontal_upsell_discountBarTime = locale_data.seconds;
                    }

                }

                var minutes, seconds;
                var Horizontal_upsell_discount_bar_expire_message = document.querySelector('.Horizontal_upsell_discountExpireMsg');

                var countDownSelector = document.querySelector('.Horizontal_upsell_discount_bar_text_show_hied');
                countDownSelector.style.display = 'block';
                countDownSelector.style.visibility = 'visible';

                Horizontal_upsell_discount_bar_expire_message.style.display = 'none';

                if (smeDiscountBarTimerArray[3]) clearInterval(smeDiscountBarTimerArray[3]);

                smeDiscountBarTimerArray[3] = setInterval(function () {
                    minutes = parseInt(Horizontal_upsell_discountBarTime / 60, 10);
                    seconds = parseInt(Horizontal_upsell_discountBarTime % 60, 10);
                    minutes = Math.abs(minutes);
                    seconds = Math.abs(seconds);
                    minutes = minutes < 10 ? "0" + minutes : minutes;
                    seconds = seconds < 10 ? "0" + seconds : seconds;
                    var countDownTime = minutes + ":" + seconds;
                    if (document.querySelector('.Horizontal_upsell_countDownTime')) {
                        document.querySelector('.Horizontal_upsell_countDownTime').innerHTML = countDownTime;
                    }

                    var data = {
                        seconds: Horizontal_upsell_discountBarTime
                    };

                    var dataString = JSON.stringify(data);

                    smeGeneralDiscountStore(dataString, 'upsell_smeDiscountBarcall');

                    if (--Horizontal_upsell_discountBarTime < 0) {
                        switch (parseInt(Horizontal_upsell_discount_bar_expire_action)) {
                            case 0:
                                if (document.querySelector('.widget3').style.display == 'block') {
                                    smeDiscountBarTimer(1, 3);
                                } else {
                                    clearInterval(smeDiscountBarTimerArray[3]);
                                }
                                break;
                            case 1:
                                document.querySelector('.Horizontal_upsell_discount_bar_text_show_hied').style.display = 'none';
                                clearInterval(smeDiscountBarTimerArray[3]); // Clear the interval using the stored ID
                                break;
                            case 2:
                                document.querySelector('.widget3').style.display = 'none';
                                clearInterval(smeDiscountBarTimerArray[3]);
                                break;
                            case 3:
                                document.querySelector('.Horizontal_upsell_discount_bar_text_show_hied').style.display = 'none';
                                if (smeCartData.items.length > 0) {
                                    document.querySelector('.Horizontal_upsell_discountExpireMsg').style.display = 'block';
                                    document.querySelector('.Horizontal_upsell_discountExpireMsg').style.visibility = 'visible';
                                }
                                clearInterval(smeDiscountBarTimerArray[3]); // Clear the interval using the stored ID
                                break;
                            default:
                                clearInterval(smeDiscountBarTimerArray[3]); // Clear the interval using the stored ID
                        }
                    }
                }, 1000);
            }
        }
    }

    if (callSelfly === 0 || section_id === 4) {
        var sme_gm_recommendation_widget = JSON.parse(sme_gm_dataobj.recommendation_widget);
        var firstKey = Object.keys(sme_gm_recommendation_widget)[0];
        var Vertical_upsellis_is_discount_bar_show_input = sme_gm_recommendation_widget[firstKey].is_discount_bar_show;

        if (sme_gm_recommendation_widget[firstKey].is_active === '0') {
            var upsell_data_check = document.querySelector('.Vertical_upsell_recomFrontProductView.actionTaken');
            if (upsell_data_check) {
                document.querySelector('.widget4').style.display = 'none';
            } else {
                if (sme_gm_recommendation_widget[firstKey].discount_bar_expire_action !== '2') {
                    document.querySelector('.widget4').style.display = 'block';
                }
            }

            if (Vertical_upsellis_is_discount_bar_show_input === "0") {
                var Vertical_upsellis_discount_bar_expire_action = sme_gm_recommendation_widget[firstKey].discount_bar_expire_action;

                var Vertical_upsellis_discount_bar_time = sme_gm_recommendation_widget[firstKey].discount_bar_time;
                var Vertical_upsellis_timeVal = (Vertical_upsellis_discount_bar_time < 0) ? 1 : Vertical_upsellis_discount_bar_time;
                var Vertical_upsellis_discountBarTime = Math.abs(Vertical_upsellis_timeVal * 60);
                var recommendation_smeDiscountBarcall = smeGeneralDiscountGet('recommendation_smeDiscountBarcall');
                if ((Object.keys(recommendation_smeDiscountBarcall).length !== 0 && recommendation_smeDiscountBarcall.constructor !== Object)) {
                    var locale_data = JSON.parse(recommendation_smeDiscountBarcall)
                    if (locale_data.seconds !== 0) {
                        Vertical_upsellis_discountBarTime = locale_data.seconds;
                    }
                }

                var minutes, seconds;
                var Vertical_upsellis_discount_bar_expire_message = document.querySelector('.Vertical_upsellis_discountExpireMsg');

                var countDownSelector = document.querySelector('.Vertical_upsellis_discount_bar_text_show_hied');
                countDownSelector.style.display = 'block';
                countDownSelector.style.visibility = 'visible';
                Vertical_upsellis_discount_bar_expire_message.style.display = 'none';

                if (smeDiscountBarTimerArray[4]) clearInterval(smeDiscountBarTimerArray[4]);

                smeDiscountBarTimerArray[4] = setInterval(function () {
                    minutes = parseInt(Vertical_upsellis_discountBarTime / 60, 10);
                    seconds = parseInt(Vertical_upsellis_discountBarTime % 60, 10);
                    minutes = Math.abs(minutes);
                    seconds = Math.abs(seconds);
                    minutes = minutes < 10 ? "0" + minutes : minutes;
                    seconds = seconds < 10 ? "0" + seconds : seconds;
                    var countDownTime = minutes + ":" + seconds;
                    if (document.querySelector('.Vertical_upsellis_countDownTime')) {
                        document.querySelector('.Vertical_upsellis_countDownTime').innerHTML = countDownTime;
                    }

                    var data = {
                        seconds: Vertical_upsellis_discountBarTime
                    };

                    var dataString = JSON.stringify(data);

                    smeGeneralDiscountStore(dataString, 'recommendation_smeDiscountBarcall');

                    if (--Vertical_upsellis_discountBarTime < 0) {
                        switch (parseInt(Vertical_upsellis_discount_bar_expire_action)) {
                            case 0:
                                if (document.querySelector('.widget4').style.display == 'block') {
                                    smeDiscountBarTimer(1, 4);
                                }
                                else {
                                    clearInterval(smeDiscountBarTimerArray[4]);
                                }
                                break;
                            case 1:
                                document.querySelector('.Vertical_upsellis_discount_bar_text_show_hied').style.display = 'none';
                                clearInterval(smeDiscountBarTimerArray[4]); // Clear the interval using the stored ID
                                break;
                            case 2:
                                document.querySelector('.widget4').style.display = 'none';
                                clearInterval(smeDiscountBarTimerArray[4]);
                                break;
                            case 3:
                                document.querySelector('.Vertical_upsellis_discount_bar_text_show_hied').style.display = 'none';
                                if (smeCartData.items.length > 0) {
                                    document.querySelector('.Vertical_upsellis_discountExpireMsg').style.display = 'block';
                                    document.querySelector('.Vertical_upsellis_discountExpireMsg').style.visibility = 'visible';
                                }
                                clearInterval(smeDiscountBarTimerArray[4]); // Clear the interval using the stored ID
                                break;
                            default:
                                clearInterval(smeDiscountBarTimerArray[4]); // Clear the interval using the stored ID
                        }
                    }
                }, 1000);
            }
        }
    }
}

function openOrdernote(thisObj) {
    const salemaximizeBody = document.querySelector('.salemaximize__body');
    const salemaximizeAddOrderNote = document.querySelector('.salemaximize__add-order-note');

    let tempSecId = salemaximizeAddOrderNote.closest('.smewidgetblock').getAttribute('data-id');
    let sourceId = salemaximizeAddOrderNote.closest('.smewidgetblock').getAttribute('data-source-id');

    if (thisObj === '0') {
        salemaximizeAddOrderNote.style.bottom = '-250px';
        salemaximizeBody.classList.remove('smeOverlayActive');
        salemaximizeBody.removeAttribute('onclick');
    } else {
        salemaximizeBody.classList.toggle('smeOverlayActive');
        salemaximizeAddOrderNote.style.bottom = '0px';
    }
}

function openPopup(selector, action) {
    const salemaximizeBody = document.querySelector('.salemaximize__body');
    const salemaximizeWidgets = document.querySelectorAll('.smewidgetblock');

    if (action === "1") {
        document.querySelector(selector).classList.add('show');
        salemaximizeBody.classList.toggle('smeOverlayActive');
    } else {
        salemaximizeBody.classList.remove('smeOverlayActive');
        document.querySelector(selector).classList.remove('show');
    }
}



function icon_svg(thisObj) {
    var icons = {
        'cart_icon_1': '<svg class="" xmlns="http://www.w3.org/2000/svg" id="Layer_1" data-name="Layer 1" viewBox="0 0 24 24"><path d="M22.713,4.077A2.993,2.993,0,0,0,20.41,3H4.242L4.2,2.649A3,3,0,0,0,1.222,0H1A1,1,0,0,0,1,2h.222a1,1,0,0,1,.993.883l1.376,11.7A5,5,0,0,0,8.557,19H19a1,1,0,0,0,0-2H8.557a3,3,0,0,1-2.82-2h11.92a5,5,0,0,0,4.921-4.113l.785-4.354A2.994,2.994,0,0,0,22.713,4.077ZM21.4,6.178l-.786,4.354A3,3,0,0,1,17.657,13H5.419L4.478,5H20.41A1,1,0,0,1,21.4,6.178Z"></path><circle cx="7" cy="22" r="2"></circle><circle cx="17" cy="22" r="2"></circle></svg>',
        'cart_icon_2': '<svg width="25" height="25" viewBox="0 0 25 25" fill="#000000" xmlns="http://www.w3.org/2000/svg"><path d="M23.2143 7.14286H19.6429V6.91964C19.6429 3.0692 16.5737 0 12.779 0H12.3326C8.48214 0 5.35714 3.0692 5.35714 6.91964V7.14286H1.78571L0 25H25L23.2143 7.14286ZM7.14286 6.91964C7.14286 4.07366 9.48661 1.78571 12.3326 1.78571H12.779C15.5692 1.78571 17.8571 4.07366 17.8571 6.91964V7.14286H7.14286V6.91964ZM2.00893 23.2143L3.40402 8.92857H5.35714V10.9375C4.79911 11.2723 4.46429 11.8304 4.46429 12.5C4.46429 13.5045 5.24554 14.2857 6.25 14.2857C7.25446 14.2857 8.03571 13.5045 8.03571 12.5C8.03571 11.8304 7.70089 11.2723 7.14286 10.9375V8.92857H17.8571V10.9375C17.2991 11.2723 16.9643 11.8304 16.9643 12.5C16.9643 13.5045 17.7455 14.2857 18.75 14.2857C19.7545 14.2857 20.5357 13.5045 20.5357 12.5C20.5357 11.8304 20.2009 11.2723 19.6429 10.9375V8.92857H21.596L22.9911 23.2143H2.00893Z"/></svg>',
        'cart_icon_3': '<svg width="21" height="25" viewBox="0 0 21 25" fill="#000000" xmlns="http://www.w3.org/2000/svg"><path d="M20.9352 23.9559L19.4139 7.01422C19.3724 6.55156 18.9846 6.19718 18.5202 6.19718H15.383V4.78227C15.383 2.14533 13.2378 0 10.6009 0C7.96424 0 5.81927 2.14533 5.81927 4.78227V6.19718H2.67995C2.21549 6.19718 1.82773 6.55156 1.78621 7.01422L0.258959 24.0225C0.236466 24.2735 0.320456 24.5223 0.490469 24.7082C0.660483 24.8941 0.900847 25 1.1527 25H20.0475C20.0482 25 20.0492 25 20.0499 25C20.5456 25 20.9472 24.5982 20.9472 24.1027C20.9471 24.0528 20.9431 24.0036 20.9352 23.9559ZM7.61393 4.78227C7.61393 3.1349 8.95393 1.79465 10.6011 1.79465C12.2483 1.79465 13.5884 3.1349 13.5884 4.78227V6.19718H7.61393V4.78227ZM2.13425 23.2055L3.50034 7.99183H5.81927V9.59649C5.81927 10.0921 6.22092 10.4938 6.7166 10.4938C7.21228 10.4938 7.61393 10.0921 7.61393 9.59649V7.99183H13.5884V9.59649C13.5884 10.0921 13.9901 10.4938 14.4858 10.4938C14.9815 10.4938 15.3831 10.0921 15.3831 9.59649V7.99183H17.6999L19.066 23.2055H2.13425Z"/></svg>',
        'cart_icon_4': '<svg width="20" height="25" viewBox="0 0 20 25" fill="#000000" xmlns="http://www.w3.org/2000/svg"><path d="M9.91968 14.0161C8.76327 14.0174 7.64213 13.6179 6.74718 12.8856C5.85223 12.1532 5.23882 11.1333 5.01139 9.99943C4.99326 9.88 5.00132 9.75805 5.035 9.64204C5.06868 9.52602 5.12718 9.41872 5.20645 9.32757C5.28571 9.23641 5.38385 9.16357 5.49406 9.11411C5.60427 9.06465 5.72392 9.03974 5.84472 9.0411C6.04324 9.03822 6.23627 9.10631 6.38905 9.23311C6.54183 9.35992 6.64431 9.53711 6.67804 9.73276C6.83498 10.4819 7.24493 11.1541 7.83902 11.6366C8.43311 12.1192 9.17516 12.3826 9.94052 12.3826C10.7059 12.3826 11.4479 12.1192 12.042 11.6366C12.6361 11.1541 13.046 10.4819 13.203 9.73276C13.2367 9.53711 13.3392 9.35992 13.492 9.23311C13.6448 9.10631 13.8378 9.03822 14.0363 9.0411C14.1571 9.03974 14.2768 9.06465 14.387 9.11411C14.4972 9.16357 14.5953 9.23641 14.6746 9.32757C14.7539 9.41872 14.8124 9.52602 14.846 9.64204C14.8797 9.75805 14.8878 9.88 14.8696 9.99943C14.6409 11.1403 14.0213 12.1657 13.1178 12.8989C12.2142 13.6321 11.0832 14.0271 9.91968 14.0161Z"/><path d="M17.3363 25.0004H2.50311C2.16402 25.0008 1.82838 24.9322 1.51663 24.7989C1.20487 24.6655 0.923506 24.4701 0.68965 24.2245C0.455794 23.979 0.274336 23.6884 0.156314 23.3705C0.0382916 23.0526 -0.0138276 22.7141 0.00312716 22.3754L0.678122 8.00884C0.706058 7.36476 0.98173 6.75637 1.44757 6.31071C1.91342 5.86505 2.53342 5.61658 3.1781 5.61719H16.6613C17.306 5.61658 17.926 5.86505 18.3919 6.31071C18.8577 6.75637 19.1334 7.36476 19.1613 8.00884L19.8363 22.3754C19.8533 22.7141 19.8011 23.0526 19.6831 23.3705C19.5651 23.6884 19.3836 23.979 19.1498 24.2245C18.9159 24.4701 18.6346 24.6655 18.3228 24.7989C18.011 24.9322 17.6754 25.0008 17.3363 25.0004ZM3.1781 7.29218C2.95709 7.29218 2.74513 7.37997 2.58885 7.53625C2.43257 7.69253 2.34478 7.90449 2.34478 8.1255L1.66978 22.4587C1.66413 22.5716 1.6815 22.6845 1.72084 22.7904C1.76018 22.8964 1.82067 22.9932 1.89862 23.0751C1.97657 23.1569 2.07036 23.2221 2.17428 23.2665C2.2782 23.311 2.39008 23.3339 2.50311 23.3337H17.3363C17.4494 23.3339 17.5612 23.311 17.6652 23.2665C17.7691 23.2221 17.8629 23.1569 17.9408 23.0751C18.0188 22.9932 18.0792 22.8964 18.1186 22.7904C18.1579 22.6845 18.1753 22.5716 18.1696 22.4587L17.4947 8.09217C17.4947 7.87116 17.4069 7.6592 17.2506 7.50292C17.0943 7.34664 16.8823 7.25884 16.6613 7.25884L3.1781 7.29218Z"/><path d="M14.9198 6.45828H13.2532V4.99996C13.2532 4.11591 12.902 3.26807 12.2769 2.64296C11.6518 2.01784 10.8039 1.66665 9.91988 1.66665C9.03583 1.66665 8.18799 2.01784 7.56288 2.64296C6.93776 3.26807 6.58658 4.11591 6.58658 4.99996V6.45828H4.91992V4.99996C4.91992 3.67389 5.4467 2.40213 6.38438 1.46445C7.32205 0.52678 8.59381 0 9.91988 0C11.246 0 12.5177 0.52678 13.4554 1.46445C14.3931 2.40213 14.9198 3.67389 14.9198 4.99996V6.45828Z"/></svg>',
        'cart_icon_5': '<svg width="19" height="25" viewBox="0 0 19 25" fill="#000000" xmlns="http://www.w3.org/2000/svg"><path d="M9.91722 0C8.59113 0 7.31936 0.526784 6.38168 1.46447C5.444 2.40215 4.91722 3.67392 4.91722 5V5.83333H4.22555C3.52398 5.83259 2.84915 6.10247 2.34156 6.58678C1.83397 7.07108 1.53273 7.7325 1.50055 8.43333L0.842216 22.1417C0.825339 22.5103 0.883279 22.8785 1.01254 23.2241C1.1418 23.5698 1.33971 23.8857 1.59434 24.1527C1.84896 24.4198 2.15504 24.6326 2.4941 24.7782C2.83317 24.9238 3.19821 24.9993 3.56722 25H16.2672C16.6362 24.9993 17.0013 24.9238 17.3403 24.7782C17.6794 24.6326 17.9855 24.4198 18.2401 24.1527C18.4947 23.8857 18.6926 23.5698 18.8219 23.2241C18.9512 22.8785 19.0091 22.5103 18.9922 22.1417L18.3339 8.43333C18.3017 7.7325 18.0005 7.07108 17.4929 6.58678C16.9853 6.10247 16.3105 5.83259 15.6089 5.83333H14.9172V5C14.9172 3.67392 14.3904 2.40215 13.4528 1.46447C12.5151 0.526784 11.2433 0 9.91722 0ZM6.58388 5C6.58388 4.11594 6.93507 3.2681 7.56019 2.64298C8.18531 2.01786 9.03316 1.66667 9.91722 1.66667C10.8013 1.66667 11.6491 2.01786 12.2742 2.64298C12.8994 3.2681 13.2505 4.11594 13.2505 5V5.83333H6.58388V5ZM16.6672 8.50833L17.3255 22.225C17.3308 22.3683 17.3077 22.5113 17.2577 22.6457C17.2076 22.7801 17.1316 22.9033 17.0339 23.0083C16.9341 23.1108 16.8149 23.1923 16.6833 23.2481C16.5517 23.3039 16.4102 23.3329 16.2672 23.3333H3.56722C3.42423 23.3329 3.28278 23.3039 3.15114 23.2481C3.01949 23.1923 2.9003 23.1108 2.80055 23.0083C2.70286 22.9033 2.62682 22.7801 2.57677 22.6457C2.52673 22.5113 2.50366 22.3683 2.50888 22.225L3.16722 8.50833C3.18008 8.2364 3.29723 7.97988 3.49433 7.7921C3.69143 7.60431 3.95331 7.4997 4.22555 7.5H15.6089C15.8811 7.4997 16.143 7.60431 16.3401 7.7921C16.5372 7.97988 16.6544 8.2364 16.6672 8.50833Z"/><path d="M6.05062 10.1589C6.51086 10.1589 6.88395 9.78576 6.88395 9.32552C6.88395 8.86528 6.51086 8.49219 6.05062 8.49219C5.59038 8.49219 5.21729 8.86528 5.21729 9.32552C5.21729 9.78576 5.59038 10.1589 6.05062 10.1589Z"/><path d="M13.784 10.1589C14.2443 10.1589 14.6174 9.78576 14.6174 9.32552C14.6174 8.86528 14.2443 8.49219 13.784 8.49219C13.3238 8.49219 12.9507 8.86528 12.9507 9.32552C12.9507 9.78576 13.3238 10.1589 13.784 10.1589Z"/></svg>',
        'cart_icon_6': '<svg width="20" height="25" viewBox="0 0 20 25" fill="#000000" xmlns="http://www.w3.org/2000/svg"><path d="M10.073 0C8.74689 0 7.47513 0.526784 6.53744 1.46447C5.59976 2.40215 5.07298 3.67392 5.07298 5V5.83333H4.38131C3.67974 5.83259 3.00492 6.10247 2.49733 6.58678C1.98974 7.07108 1.68849 7.7325 1.65631 8.43333L0.997977 22.1417C0.981101 22.5103 1.03904 22.8785 1.1683 23.2241C1.29757 23.5698 1.49547 23.8857 1.7501 24.1527C2.00473 24.4198 2.3108 24.6326 2.64986 24.7782C2.98893 24.9238 3.35397 24.9993 3.72298 25H16.423C16.792 24.9993 17.157 24.9238 17.4961 24.7782C17.8352 24.6326 18.1412 24.4198 18.3959 24.1527C18.6505 23.8857 18.8484 23.5698 18.9777 23.2241C19.1069 22.8785 19.1649 22.5103 19.148 22.1417L18.4896 8.43333C18.4575 7.7325 18.1562 7.07108 17.6486 6.58678C17.141 6.10247 16.4662 5.83259 15.7646 5.83333H15.073V5C15.073 3.67392 14.5462 2.40215 13.6085 1.46447C12.6708 0.526784 11.3991 0 10.073 0ZM6.73964 5C6.73964 4.11594 7.09083 3.2681 7.71595 2.64298C8.34108 2.01786 9.18892 1.66667 10.073 1.66667C10.957 1.66667 11.8049 2.01786 12.43 2.64298C13.0551 3.2681 13.4063 4.11594 13.4063 5V5.83333H6.73964V5ZM5.37298 9.325C5.37298 9.16018 5.42185 8.99907 5.51342 8.86202C5.60499 8.72498 5.73514 8.61817 5.88741 8.5551C6.03968 8.49203 6.20724 8.47552 6.36889 8.50768C6.53054 8.53983 6.67902 8.6192 6.79557 8.73574C6.91211 8.85229 6.99148 9.00077 7.02363 9.16242C7.05579 9.32408 7.03928 9.49163 6.97621 9.6439C6.91314 9.79617 6.80633 9.92632 6.66929 10.0179C6.53225 10.1095 6.37113 10.1583 6.20631 10.1583C5.9853 10.1583 5.77334 10.0705 5.61706 9.91426C5.46077 9.75798 5.37298 9.54601 5.37298 9.325ZM13.1063 9.325C13.1063 9.16018 13.1552 8.99907 13.2468 8.86202C13.3383 8.72498 13.4685 8.61817 13.6207 8.5551C13.773 8.49203 13.9406 8.47552 14.1022 8.50768C14.2639 8.53983 14.4124 8.6192 14.5289 8.73574C14.6454 8.85229 14.7248 9.00077 14.757 9.16242C14.7891 9.32408 14.7726 9.49163 14.7095 9.6439C14.6465 9.79617 14.5397 9.92632 14.4026 10.0179C14.2656 10.1095 14.1045 10.1583 13.9396 10.1583C13.7186 10.1583 13.5067 10.0705 13.3504 9.91426C13.1941 9.75798 13.1063 9.54601 13.1063 9.325Z"/></svg>',
        'cart_icon_7': '<svg width="21" height="25" viewBox="0 0 21 25" fill="#000000" xmlns="http://www.w3.org/2000/svg"><path d="M17.6509 5H15.1509C15.1509 2.2375 12.9134 0 10.1509 0C7.38838 0 5.15088 2.2375 5.15088 5H2.65088C1.27588 5 0.150879 6.125 0.150879 7.5V22.5C0.150879 23.875 1.27588 25 2.65088 25H17.6509C19.0259 25 20.1509 23.875 20.1509 22.5V7.5C20.1509 6.125 19.0259 5 17.6509 5ZM7.65088 10C7.65088 10.6875 7.08838 11.25 6.40088 11.25C5.71338 11.25 5.15088 10.6875 5.15088 10V7.5H7.65088V10ZM10.1509 2.5C11.5259 2.5 12.6509 3.625 12.6509 5H7.65088C7.65088 3.625 8.77588 2.5 10.1509 2.5ZM15.1509 10C15.1509 10.6875 14.5884 11.25 13.9009 11.25C13.2134 11.25 12.6509 10.6875 12.6509 10V7.5H15.1509V10Z"/></svg>',
        'cart_icon_8': '<svg width="27" height="25" viewBox="0 0 27 25" fill="#000000" xmlns="http://www.w3.org/2000/svg"><path d="M25.9 5.26252C25.5507 4.79279 25.0964 4.41135 24.5732 4.14871C24.0501 3.88607 23.4728 3.74953 22.8875 3.75002H5.89999L5.49999 2.50003C5.24068 1.76656 4.75968 1.13191 4.12362 0.683978C3.48756 0.236051 2.72794 -0.00297112 1.95 2.78795e-05H1.25C0.918478 2.78795e-05 0.600536 0.131724 0.366116 0.366144C0.131696 0.600564 0 0.918506 0 1.25003C0 1.58155 0.131696 1.89949 0.366116 2.13391C0.600536 2.36833 0.918478 2.50003 1.25 2.50003H1.95C2.21205 2.49935 2.46769 2.58105 2.68078 2.73358C2.89387 2.88611 3.05364 3.10175 3.1375 3.35002L3.75 5.32502L5.87499 15.7375C6.04535 16.5868 6.5045 17.351 7.17443 17.9001C7.84436 18.4493 8.68375 18.7496 9.54999 18.75H21.625C22.522 18.762 23.3936 18.4521 24.0816 17.8765C24.7697 17.3008 25.2285 16.4976 25.375 15.6125L26.5625 8.48752C26.7046 7.93498 26.7189 7.35729 26.6041 6.79843C26.4893 6.23956 26.2485 5.71426 25.9 5.26252ZM24.0875 7.86252V8.01252L22.9 15.2C22.8521 15.4958 22.6995 15.7645 22.4701 15.9572C22.2406 16.15 21.9496 16.2539 21.65 16.25H9.54999C9.25756 16.2559 8.97232 16.1591 8.74392 15.9763C8.51552 15.7936 8.35843 15.5366 8.29999 15.25L6.52499 6.25002H22.8875C23.0815 6.25002 23.2729 6.2952 23.4465 6.38199C23.6201 6.46877 23.771 6.59478 23.8875 6.75002C24.0059 6.90671 24.0857 7.08909 24.1204 7.28237C24.1552 7.47566 24.1439 7.67441 24.0875 7.86252ZM12.5 22.5C12.5 22.9945 12.3534 23.4778 12.0787 23.8889C11.804 24.3001 11.4135 24.6205 10.9567 24.8097C10.4999 24.9989 9.99722 25.0484 9.51226 24.952C9.02731 24.8555 8.58185 24.6174 8.23222 24.2678C7.88259 23.9181 7.64449 23.4727 7.54803 22.9877C7.45156 22.5028 7.50107 22.0001 7.69029 21.5433C7.87951 21.0865 8.19994 20.696 8.61106 20.4213C9.02219 20.1466 9.50554 20 9.99999 20C10.663 20 11.2989 20.2634 11.7678 20.7322C12.2366 21.2011 12.5 21.837 12.5 22.5ZM23.75 22.5C23.75 22.9945 23.6034 23.4778 23.3286 23.8889C23.0539 24.3001 22.6635 24.6205 22.2067 24.8097C21.7499 24.9989 21.2472 25.0484 20.7623 24.952C20.2773 24.8555 19.8318 24.6174 19.4822 24.2678C19.1326 23.9181 18.8945 23.4727 18.798 22.9877C18.7016 22.5028 18.7511 22.0001 18.9403 21.5433C19.1295 21.0865 19.4499 20.696 19.8611 20.4213C20.2722 20.1466 20.7555 20 21.25 20C21.913 20 22.5489 20.2634 23.0177 20.7322C23.4866 21.2011 23.75 21.837 23.75 22.5Z"/></svg>',
        'cart_icon_9': '<svg width="28" height="25" viewBox="0 0 28 25" fill="#000000" xmlns="http://www.w3.org/2000/svg"><path d="M22.3088 18.1885C20.4307 18.1885 18.9028 19.7164 18.9028 21.5945C18.9028 23.4725 20.4308 25.0004 22.3088 25.0004C24.1869 25.0004 25.7148 23.4725 25.7148 21.5945C25.7148 19.7164 24.1869 18.1885 22.3088 18.1885ZM22.3088 22.9569C21.5575 22.9569 20.9464 22.3458 20.9464 21.5945C20.9464 20.8431 21.5575 20.2321 22.3088 20.2321C23.0602 20.2321 23.6712 20.8431 23.6712 21.5945C23.6712 22.3458 23.0602 22.9569 22.3088 22.9569Z"/><path d="M27.7795 5.02414C27.5861 4.77654 27.2894 4.63212 26.975 4.63212H6.98792L6.0683 0.784379C5.95828 0.324593 5.54715 4.66641e-09 5.0744 4.66641e-09H1.70246C1.1381 -5.33472e-05 0.680664 0.457385 0.680664 1.02174C0.680664 1.5861 1.1381 2.04354 1.70246 2.04354H4.26788L7.58872 15.9387C7.69873 16.3988 8.10986 16.723 8.58261 16.723H24.4887C24.9584 16.723 25.3677 16.4029 25.4805 15.9471L27.9669 5.89944C28.0421 5.59432 27.973 5.27175 27.7795 5.02414ZM23.6892 14.6795H9.38913L7.4763 6.6757H25.6694L23.6892 14.6795Z"/><path d="M9.94505 18.1885C8.06695 18.1885 6.53906 19.7164 6.53906 21.5945C6.53906 23.4725 8.06701 25.0004 9.94505 25.0004C11.8231 25.0004 13.351 23.4725 13.351 21.5945C13.351 19.7164 11.8231 18.1885 9.94505 18.1885ZM9.94505 22.9569C9.19369 22.9569 8.58265 22.3458 8.58265 21.5945C8.58265 20.8431 9.19369 20.2321 9.94505 20.2321C10.6964 20.2321 11.3074 20.8431 11.3074 21.5945C11.3074 22.3458 10.6964 22.9569 9.94505 22.9569Z"/></svg>',
        'cart_icon_10': '<svg width="26" height="25" viewBox="0 0 26 25" fill="#000000" xmlns="http://www.w3.org/2000/svg"><path d="M23.0994 17.3177C23.5768 17.3177 23.9842 16.9726 24.0627 16.5017L25.9833 4.97826C26.0822 4.38422 25.6241 3.84115 25.02 3.84115H6.57675L5.80141 0.739745C5.69272 0.30498 5.30209 0 4.854 0H1.97314C1.43379 0 0.996582 0.437206 0.996582 0.976561C0.996582 1.51592 1.43379 1.95312 1.97314 1.95312H4.0915L4.85737 5.01659L6.75829 16.422V19.3755C5.63988 19.7772 4.83774 20.8479 4.83774 22.1028C4.83774 23.7003 6.13739 25 7.73485 25C9.71756 25 11.1231 23.0387 10.4732 21.1588H18.4404C17.79 23.0402 19.1975 25 21.1788 25C22.7763 25 24.0759 23.7003 24.0759 22.1028C24.0759 20.5054 22.7763 19.2057 21.1788 19.2057H8.71141V17.3177H23.0994ZM23.8672 5.79428L22.2721 15.3646H8.5621L6.96703 5.79428H23.8672ZM8.67884 22.1028C8.67884 22.6234 8.25536 23.0468 7.73485 23.0468C7.21434 23.0468 6.79086 22.6233 6.79086 22.1028C6.79086 21.5823 7.21434 21.1588 7.73485 21.1588C8.25536 21.1588 8.67884 21.5823 8.67884 22.1028ZM21.1788 23.0468C20.6583 23.0468 20.2348 22.6233 20.2348 22.1028C20.2348 21.5823 20.6583 21.1588 21.1788 21.1588C21.6993 21.1588 22.1228 21.5823 22.1228 22.1028C22.1229 22.6233 21.6994 23.0468 21.1788 23.0468Z"/></svg>',
        'cart_icon_11': '<svg width="26" height="25" viewBox="0 0 26 25" fill="#000000" xmlns="http://www.w3.org/2000/svg"><path d="M6.16895 22.4134C6.16895 23.8392 7.32929 24.9996 8.75515 24.9996C10.181 24.9996 11.3414 23.8392 11.3414 22.4134C11.3414 20.9875 10.181 19.8271 8.75515 19.8271C7.32929 19.8271 6.16895 20.9875 6.16895 22.4134ZM9.61722 22.4134C9.61722 22.8884 9.23015 23.2754 8.75515 23.2754C8.28015 23.2754 7.89308 22.8884 7.89308 22.4134C7.89308 21.9384 8.28015 21.5513 8.75515 21.5513C9.23015 21.5513 9.61722 21.9384 9.61722 22.4134Z"/><path d="M21.6861 22.4134C21.6861 20.9875 20.5257 19.8271 19.0999 19.8271C17.674 19.8271 16.5137 20.9875 16.5137 22.4134C16.5137 23.8392 17.674 24.9996 19.0999 24.9996C20.5257 24.9996 21.6861 23.8392 21.6861 22.4134ZM18.2378 22.4134C18.2378 21.9384 18.6249 21.5513 19.0999 21.5513C19.5749 21.5513 19.9619 21.9384 19.9619 22.4134C19.9619 22.8884 19.5749 23.2754 19.0999 23.2754C18.6249 23.2754 18.2378 22.8884 18.2378 22.4134Z"/><path d="M3.669 1.72414C3.77589 2.74224 4.96555 14.0422 5.14917 15.7879C5.28796 17.1078 6.394 18.1034 7.72158 18.1034H21.1552C22.3664 18.1034 23.4302 17.2431 23.6845 16.0586L25.7552 6.39569C25.8647 5.88362 25.7388 5.3569 25.4095 4.95086C25.0802 4.54397 24.5914 4.31035 24.0681 4.31035H5.67503L5.30262 0.772414C5.25606 0.332759 4.88624 0 4.44486 0H1.85865C1.38279 0 0.996582 0.386207 0.996582 0.862069C0.996582 1.33793 1.38279 1.72414 1.85865 1.72414H3.669ZM24.0681 6.03448L21.9983 15.6974C21.913 16.0922 21.5587 16.3793 21.1543 16.3793H7.72158C7.27848 16.3793 6.91038 16.0474 6.86382 15.6078L5.85607 6.03448H24.0681Z"/></svg>',
        'cart_icon_12': '<svg width="27" height="25" viewBox="0 0 27 25" fill="#000000" xmlns="http://www.w3.org/2000/svg"><path d="M19.8858 18.8936C18.1996 18.8919 16.8313 20.2576 16.8296 21.9438C16.8279 23.6301 18.1936 24.9984 19.8799 25C21.5661 25.0016 22.9344 23.636 22.9361 21.9498C22.9361 21.9488 22.9361 21.9478 22.9361 21.9468C22.9345 20.2624 21.5702 18.8968 19.8858 18.8936Z"/><path d="M25.3012 4.27302C25.2281 4.25888 25.1539 4.25169 25.0795 4.25157H6.48924L6.19481 2.28183C6.01137 0.973688 4.89242 0.00040254 3.57145 0H1.17772C0.52727 0 0 0.52727 0 1.17772C0 1.82817 0.52727 2.35544 1.17772 2.35544H3.57439C3.72413 2.35434 3.85087 2.46585 3.86882 2.61456L5.68249 15.0454C5.93115 16.6249 7.28983 17.7902 8.88884 17.7953H21.14C22.6795 17.7973 24.0076 16.7154 24.3169 15.2073L26.2337 5.65305C26.3573 5.01445 25.9398 4.3966 25.3012 4.27302Z"/><path d="M12.4059 21.8161C12.3342 20.1793 10.9834 18.8908 9.34502 18.8965C7.66016 18.9646 6.34949 20.3857 6.41758 22.0705C6.4829 23.6872 7.798 24.9722 9.4157 25.0001H9.4893C11.1739 24.9262 12.4797 23.5007 12.4059 21.8161Z"/></svg>',
        'cart_icon_13': '<svg width="27" height="25" viewBox="0 0 27 25" fill="#000000" xmlns="http://www.w3.org/2000/svg"><path d="M26.091 3.28148C25.9487 3.1036 25.7332 3.00005 25.5054 3.00005H5.54434L4.98615 0.581343C4.90759 0.241058 4.60458 0 4.25536 0H1.00536C0.591187 0 0.255371 0.335816 0.255371 0.750039C0.255371 1.16426 0.591187 1.50003 1.00536 1.50003H3.65873L7.44762 17.9187C7.52612 18.2589 7.82919 18.5 8.17841 18.5H23.2053C23.6196 18.5 23.9553 18.1642 23.9553 17.75C23.9553 17.3358 23.6195 17 23.2053 17H8.77509L8.19821 14.5H23.2554C23.6062 14.5 23.9101 14.2569 23.9871 13.9147L26.2371 3.91467C26.2871 3.69235 26.2334 3.45942 26.091 3.28148Z"/><path d="M11.2554 19.5C9.73905 19.5 8.50537 20.7336 8.50537 22.25C8.50537 23.7664 9.739 25 11.2554 25C12.7717 25 14.0054 23.7664 14.0054 22.25C14.0054 20.7336 12.7718 19.5 11.2554 19.5Z"/><path d="M20.2554 19.5C18.7391 19.5 17.5054 20.7336 17.5054 22.25C17.5054 23.7664 18.739 25 20.2554 25C21.7717 25 23.0054 23.7664 23.0054 22.25C23.0054 20.7336 21.7718 19.5 20.2554 19.5Z"/></svg>',
    };
    return icons[thisObj];

}

function openSmeCart() {
    document.querySelector('body').classList.add('salemaximize__active');
    if (document.querySelector('.salemaximize__drawer-side')) {
        document.querySelector('.salemaximize__drawer-side').style.transform = 'translate(0px)';
    }

    document.querySelector('.salemaximize__drawer-side-container-overlay').classList.add('active');
    document.querySelector('.salemaximize__drawer-side-container-overlay').setAttribute('onclick', 'closeSmeCart(this)');

    if (document.querySelector('.salemaximize__cart-logo-container').getAttribute('onclick') === 'openSmeCart(this)') {
        document.querySelector('.salemaximize__cart-logo-container').removeAttribute('onclick');
    }
    document.querySelector('.salemaximize__cart-logo-container').setAttribute('onclick', 'closeSmeCart(this)');

    smeShopifyAtcTrigger();
}

var smeXhrHandle = window.XMLHttpRequest;
var addJsCallCount = 0;

function smeXHRRequestHandler() {
    var realXHR = new smeXhrHandle();
    realXHR.addEventListener("readystatechange", function () {
        if (realXHR.readyState == 4 && realXHR.status == 200 && (typeof realXHR._url != "undefined" || typeof realXHR.responseURL != "undefined")) {
            var ajaxUrl = typeof realXHR._url != "undefined" ? realXHR._url : realXHR.responseURL;
            if (ajaxUrl.includes('/cart/change.js') || ajaxUrl.includes('/cart/update.js')) {
                addJsCallCount++;
                setTimeout(() => {
                    if (addJsCallCount >= 2) {
                        if (!isremoveitem) {
                            smeCartCall();
                        }
                        addJsCallCount = 0;
                    } else {
                        if (!isremoveitem) {
                            smeCartCall();
                        }
                    }
                }, 600);
            }
            if (ajaxUrl == '/cart/add.js' || ajaxUrl.includes('/cart/add.js') || ajaxUrl == '/cart/add.js?src=dealeasy') {
                if ((typeof realXHR.responseType != 'undefined' && realXHR.responseType != 'blob') || typeof realXHR.responseText != 'undefined') {
                    let response = JSON.parse(realXHR.responseText);
                    addJsCallCount++;
                    setTimeout(() => {
                        if (addJsCallCount >= 2) {

                            if (!isremoveitem) {
                                smeCartCall();
                            }
                            addJsCallCount = 0;
                        } else {
                            if (!isremoveitem) {
                                smeCartCall();
                            }
                        }
                    }, 600);
                }
            }
        }
    }, false);
    return realXHR;
}
window.XMLHttpRequest = smeXHRRequestHandler;

var originalFetch = window.fetch;
window.fetch = function (input, init) {
    return originalFetch(input, init).then(function (response) {
        var responseClone = response.clone();
        responseClone.text().then(function (bodyText) {
            var ajaxUrl = typeof input === 'string' ? input : input.url;
            if (ajaxUrl.includes('/cart/change.js') || ajaxUrl.includes('/cart/update.js')) {
                addJsCallCount++;
                setTimeout(() => {
                    if (addJsCallCount >= 2) {
                        smeCartCall();
                        addJsCallCount = 0;
                    } else {
                        smeCartCall();
                    }
                }, 600);
            }
            if (ajaxUrl == '/cart/add.js' || ajaxUrl.includes('/cart/add.js') || ajaxUrl == '/cart/add.js?src=dealeasy') {
                let response = JSON.parse(bodyText);
                addJsCallCount++;
                setTimeout(() => {
                    if (addJsCallCount >= 2) {
                        smeCartCall();
                        addJsCallCount = 0;
                    } else {
                        smeCartCall();
                    }
                }, 600);
            }
        });
        return response;
    });
};


function closeSmeCart() {
    document.body.classList.remove('salemaximize__active');
    document.querySelector('.salemaximize__drawer-side').style.transform = 'translate(100%)';
    document.querySelector('.salemaximize__drawer-side-container-overlay').classList.remove('active');
    document.querySelectorAll('.salemaximize__apply_discount_popup_container, .salemaximize__shipping_calculator_container').forEach(function (element) {
        element.classList.remove('show');
    });
    document.querySelector('.salemaximize__body').classList.remove('smeOverlayActive');
    document.querySelectorAll('.salemaximize__drawer-side .viewImpression').forEach(function (element) {
        element.classList.remove('viewImpression');
    });
    if (document.querySelector('.salemaximize__cart-logo-container').getAttribute('onclick') === 'closeSmeCart(this)') {
        document.querySelector('.salemaximize__cart-logo-container').removeAttribute('onclick');
    }
    document.querySelector('.salemaximize__cart-logo-container').setAttribute('onclick', 'openSmeCart(this)');
    openOrdernote('0');
    openPopup('.smeShippingCalculator', '0');
    openPopup('.smeApplyDiscount', '0');
}

function smeAllViewImpression(source_id) {
    var store_user_id = sme_gm_dataobj.store_user_id;
    var iana_timezone = sme_gm_dataobj.iana_timezone;
    var sme_gm_cart_widget = JSON.parse(sme_gm_dataobj.cart_widget);
    var firstKey = Object.keys(sme_gm_cart_widget)[0];
    var widget_global_settings_id = sme_gm_cart_widget[firstKey].widget_global_settings_id;
    var url = smeAppUrl + "get_data_api.php";

    if (source_id == 1) {
        var cart_widgetUpsellProductBlock = document.querySelector('.cart_widgetUpsellProductBlock');
        if (cart_widgetUpsellProductBlock.style.visibility === 'visible') {
            const smePostData = JSON.stringify({
                method_name: "view_impression",
                shop: Shopify.shop,
                impression_data: JSON.stringify({ "store_user_id": store_user_id, "section_id": 1, "is_upsell": 0, "widget_global_settings_id": widget_global_settings_id, "iana_timezone": iana_timezone, "impression_view": 1, "impression_click": 0 })
            });
            let authHeader = { 'Authentication': smeReqHeader.Authentication };
            let smeApiResponse = smePostAjaxApiFn(url, smePostData, authHeader);
        }
    }

    if (source_id == 2) {
        var Progress_Bar_smewidgetblock = document.querySelector('.Progress_Bar_smewidgetblock');
        if (Progress_Bar_smewidgetblock.style.visibility === 'visible') {
            const smePostData = JSON.stringify({
                method_name: "view_impression",
                shop: Shopify.shop,
                impression_data: JSON.stringify({ "store_user_id": store_user_id, "section_id": 2, "is_upsell": 0, "widget_global_settings_id": widget_global_settings_id, "iana_timezone": iana_timezone, "impression_view": 1, "impression_click": 0 })
            });
            let authHeader = { 'Authentication': smeReqHeader.Authentication };
            let smeApiResponse = smePostAjaxApiFn(url, smePostData, authHeader);
        }
    }

    if (source_id == 3) {
        var Horizontal_upsell_smewidgetblock = document.querySelector('.Horizontal_upsell_smewidgetblock');
        if (Horizontal_upsell_smewidgetblock.style.visibility === 'visible') {
            const smePostData = JSON.stringify({
                method_name: "view_impression",
                shop: Shopify.shop,
                impression_data: JSON.stringify({ "store_user_id": store_user_id, "section_id": 3, "is_upsell": 0, "widget_global_settings_id": widget_global_settings_id, "iana_timezone": iana_timezone, "impression_view": 1, "impression_click": 0 })
            });
            let authHeader = { 'Authentication': smeReqHeader.Authentication };
            let smeApiResponse = smePostAjaxApiFn(url, smePostData, authHeader);
        }
    }

    if (source_id == 4) {
        var Vertical_upsellis_smewidgetblock = document.querySelector('.Vertical_upsellis_smewidgetblock');
        if (Vertical_upsellis_smewidgetblock.style.visibility === 'visible') {
            const smePostData = JSON.stringify({
                method_name: "view_impression",
                shop: Shopify.shop,
                impression_data: JSON.stringify({ "store_user_id": store_user_id, "section_id": 4, "is_upsell": 0, "widget_global_settings_id": widget_global_settings_id, "iana_timezone": iana_timezone, "impression_view": 1, "impression_click": 0 })
            });
            let authHeader = { 'Authentication': smeReqHeader.Authentication };
            let smeApiResponse = smePostAjaxApiFn(url, smePostData, authHeader);
        }
    }

    if (source_id == 5) {
        var checkout_widgetUpsellProductBlock = document.querySelector('.checkout_widgetUpsellProductBlock');
        if (checkout_widgetUpsellProductBlock.style.visibility === 'visible') {
            const smePostData = JSON.stringify({
                method_name: "view_impression",
                shop: Shopify.shop,
                impression_data: JSON.stringify({ "store_user_id": store_user_id, "section_id": 5, "is_upsell": 0, "widget_global_settings_id": widget_global_settings_id, "iana_timezone": iana_timezone, "impression_view": 1, "impression_click": 0 })
            });
            let authHeader = { 'Authentication': smeReqHeader.Authentication };
            let smeApiResponse = smePostAjaxApiFn(url, smePostData, authHeader);
        }
    }

}

function smeSerialize(form) {

    let element_obj = '';
    if (!form || form.nodeName !== 'FORM') {
        element_obj = form.querySelectorAll('select, input, textarea');
    } else {
        element_obj = form.elements;
    }


    let i, j;
    let q = [];
    for (i = element_obj.length - 1; i >= 0; i = i - 1) {
        if (element_obj[i].name === '') {
            continue;
        }
        switch (element_obj[i].nodeName) {
            case 'INPUT':
                switch (element_obj[i].type) {
                    case 'text':
                    case 'tel':
                    case 'email':
                    case 'hidden':
                    case 'password':
                    case 'button':
                    case 'reset':
                    case 'submit':
                    case 'number':
                        if (element_obj[i].name === 'quantity' || element_obj[i].name === 'id' || element_obj[i].name === 'selling_plan' || element_obj[i].name.includes('properties') || element_obj[i].name.includes('items')) {
                            q.push(element_obj[i].name + '=' + encodeURIComponent(element_obj[i].value));
                        }
                        break;
                    case 'checkbox':
                    case 'radio':
                        if (element_obj[i].checked) {
                            if (element_obj[i].checked && element_obj[i].name === 'lb-qty-selector-tier') {
                                document.querySelectorAll('.lb-qty-selector-variant-option-container select').forEach((element, key) => {

                                    var select_data = JSON.parse(element.value);
                                    var select_data_id = select_data.id;

                                    select_data_id = select_data_id.replace('gid://shopify/ProductVariant/', '');

                                    if (key != 0) {
                                        q.push('items[' + Number(key - 1) + '][id]=' + encodeURIComponent(select_data_id));
                                        q.push('items[' + Number(key - 1) + '][quantity]=1');
                                    } else {
                                        q.push('id=' + encodeURIComponent(select_data_id));
                                        q.push('quantity=1');
                                    }

                                });
                            } else {
                                q.push(element_obj[i].name + '=' + encodeURIComponent(element_obj[i].value));
                            }
                        }


                        break;
                }
                break;
            case 'file':
                break;
            case 'TEXTAREA':
                q.push(element_obj[i].name + '=' + encodeURIComponent(element_obj[i].value));
                break;
            case 'SELECT':
                if (element_obj[i].getAttribute('class') != 'ecom-product-single-select-id ') {
                    switch (element_obj[i].type) {
                        case 'select-one':
                            q.push(element_obj[i].name + '=' + encodeURIComponent(element_obj[i].value));
                            break;
                        case 'select-multiple':
                            for (j = element_obj[i].options.length - 1; j >= 0; j = j - 1) {
                                if (element_obj[i].options[j].selected) {
                                    q.push(element_obj[i].name + '=' + encodeURIComponent(element_obj[i].options[j].value));
                                }
                            }
                            break;
                    }
                }

                break;
            case 'BUTTON':
                switch (element_obj[i].type) {
                    case 'reset':
                    case 'submit':
                    case 'button':
                        //q.push(element_obj[i].name + '=' + encodeURIComponent(element_obj[i].value));
                        break;
                }
                break;
        }
    }
    return q.join('&');

}
function convertMoney(t, e) {
    t = parseFloat(t).toFixed(2);
    var st_money = t.split(".");
    var st_count = '0';
    if (st_money[1] != undefined) {
        st_count = st_money[1].length;
    }
    function o(t, e) {
        return "undefined" == typeof t ? e : t
    }
    function i(t, e, i, n) {
        if (e = o(e, 2), i = o(i, ","), n = o(n, "."), isNaN(t) || null === t)
            return 0;
        if (st_count == 3) {
            t = (t / 1000).toFixed(e);
        } else if (st_count == 0 && e == 0) {
            t = t;
        } else if (st_count == 0) {
            t = (t).toFixed(e);
        } else {
            t = (t / 100).toFixed(e);
        }
        var a = t.split("."),
            r = a[0].replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1" + i),
            s = a[1] ? n + a[1] : "";
        return r + s
    }
    if ("undefined" != typeof t && t) {
        "string" == typeof t && (t = t.replace(".", ""));
        var n = "",
            a = /\{\{\s*(\w+)\s*\}\}/;
        e = e || "${{amount}}";
        try {
            switch (e.match(a)[1]) {
                case "amount":
                    n = i(t, 2);
                    break;
                case "amount_no_decimals":
                    n = i(t, 0);
                    break;
                case "amount_with_comma_separator":
                    n = i(t, 2, ".", ",");
                    break;
                case "amount_with_space_separator":
                    n = i(t, 2, " ", ",");
                    break;
                case "amount_with_period_and_space_separator":
                    n = i(t, 2, " ", ".");
                    break;
                case "amount_no_decimals_with_comma_separator":
                    n = i(t, 0, ".", ",");
                    break;
                case "amount_no_decimals_with_space_separator":
                    n = i(t, 0, " ");
                    break;
                case "amount_with_apostrophe_separator":
                    n = i(t, 2, "'", ".");
            }
            return e.replace(a, n);
        } catch (r) {
        }
    }
    return t;
}

function smeInitConfettiFn() {
    canvas = document.querySelector("#canvas");
    if (canvas) {
        ctx = canvas.getContext("2d");
        canvas.width = document.querySelector('.widget1').offsetWidth;
        canvas.height = document.querySelector('.widget1').offsetHeight;
        cx = ctx.canvas.width / 2;
        cy = ctx.canvas.height / 2;

        let confetti = [];
        const confettiCount = 30;
        const gravity = 0.8;
        const terminalVelocity = 6;
        const drag = 0.085;
        const colors = [
            { front: '#26ccff', back: '#26ccff' },
            { front: '#a25afd', back: '#a25afd' },
            { front: '#ff5e7e', back: '#ff5e7e' },
            { front: '#88ff5a', back: '#88ff5a' },
            { front: '#fcff42', back: '#fcff42' },
            { front: '#ffa62d', back: '#ffa62d' },
            { front: '#ff36ff', back: '#ff36ff' }
        ];
        resizeCanvas = () => {
            canvas.width = document.querySelector('.widget1').offsetWidth;
            canvas.height = document.querySelector('.widget1').offsetHeight;
            cx = ctx.canvas.width / 2;
            cy = ctx.canvas.height / 2;
        }
        randomRange = (min, max) => Math.random() * (max - min) + min
        initConfetti = () => {
            for (let i = 0; i < confettiCount; i++) {
                confetti.push({
                    color: colors[Math.floor(randomRange(0, colors.length))],
                    dimensions: {
                        x: randomRange(10, 10),
                        y: randomRange(10, 10),
                    },
                    position: {
                        x: randomRange(0, canvas.width),
                        y: canvas.height - 1,
                    },
                    rotation: randomRange(0, 2 * Math.PI),
                    scale: {
                        x: 0.8,
                        y: 0.8,
                    },
                    velocity: {
                        x: randomRange(-25, 25),
                        y: randomRange(0, -50),
                    },
                });
            }
        }

        render = () => {
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            confetti.forEach((confetto, index) => {
                let width = (confetto.dimensions.x * confetto.scale.x);
                let height = (confetto.dimensions.y * confetto.scale.y);
                ctx.translate(confetto.position.x, confetto.position.y);
                ctx.rotate(confetto.rotation);
                confetto.velocity.x -= confetto.velocity.x * drag;
                confetto.velocity.y = Math.min(confetto.velocity.y + gravity, terminalVelocity);
                confetto.velocity.x += Math.random() > 0.5 ? Math.random() : -Math.random();
                confetto.position.x += confetto.velocity.x;
                confetto.position.y += confetto.velocity.y;
                if (confetto.position.y >= canvas.height) confetti.splice(index, 1);
                if (confetto.position.x > canvas.width) confetto.position.x = 0;
                if (confetto.position.x < 0) confetto.position.x = canvas.width;
                confetto.scale.y = Math.cos(confetto.position.y * 0.1);
                ctx.fillStyle = confetto.scale.y > 0 ? confetto.color.front : confetto.color.back;
                ctx.fillRect(-width / 2, -height / 2, width, height);
                ctx.setTransform(1, 0, 0, 1, 0, 0);
            });
            window.requestAnimationFrame(render);
        }
        render();
    }
}
var isremoveitem = false;
async function smeCartProdRemove(thisObj) {

    isremoveitem = true;
    var is_delete_swatch = true;
    smeCartActionLoaderApply(thisObj);

    if (smetemplates == 1) {
        document.querySelectorAll('.salemaximize__product-action').forEach(button => {
            button.classList.add('disabled');
        });
    } else {
        document.querySelectorAll('.salemaximize__product-action-cart').forEach(button => {
            button.classList.add('disabled');
        });
    }

    var sme_gm_checkout_widget = JSON.parse(sme_gm_dataobj.checkout_widget);
    var checkout_tempSecId = Object.keys(sme_gm_checkout_widget)[0];
    var checkout_upsell_settings = JSON.parse(sme_gm_checkout_widget[checkout_tempSecId].upsell_settings);

    const removeItemNo = thisObj.getAttribute('data-variant-id');
    const removeItemproductid = thisObj.getAttribute('data-product-id');
    if (removeItemproductid == checkout_upsell_settings[0].shipping_product_id || removeItemproductid == checkout_upsell_settings[0].gift_product_id || checkout_upsell_settings[0].is_enable == 1) {
        is_delete_swatch = false;
    }

    const url = window.Shopify.routes.root + 'cart/change.js';
    const smePostData = 'id=' + removeItemNo + '&quantity=0';
    const headers = new Headers({ 'x-requested-with': 'XMLHttpRequest' });
    const smeApiResponse = await smePostAjaxApiFn(url, smePostData, headers);
    if (smeApiResponse) {

        var generalDiscount = smeGeneralDiscountGet(smeLocalStorageList.smeGeneralDiscount);
        if (Object.keys(generalDiscount).length !== 0) {
            generalDiscount = generalDiscount.filter(discount => {
                if (discount.discount_option === "PRODUCT") {
                    let variantIds = discount.variantid.split(',');

                    variantIds = variantIds.filter(id => id !== removeItemNo.toString());

                    if (variantIds.length > 0) {
                        discount.variantid = variantIds.join(',');
                        return true; // Keep this discount object in the array
                    } else {
                        return false; // Remove this discount object from the array
                    }
                } else {
                    return true; // Keep this discount object if discount_option is not "PRODUCT"
                }
            });
        }
        smeGeneralDiscountStore(generalDiscount, smeLocalStorageList.smeGeneralDiscount);

        document.querySelector('.smeCartLineItem[data-variant-id="' + removeItemNo + '"]').remove();
        var swatchproductclass;
        var swatchproductclasstruflas = false;
        if (document.querySelector('.Checkout_smeshippingBlock').style.display == 'block') {
            swatchproductclass = '.shipping_product_smeSwitchProduct';
            swatchproductclasstruflas = true;
        } else if (document.querySelector('.Checkout_smeGiftBlock').style.display == 'block') {
            swatchproductclass = '.gift_product_smeSwitchProduct';
            swatchproductclasstruflas = true;
        }

        if (is_delete_swatch === true) {
            if (document.querySelectorAll('.smeCartLineItem:not(.isSwatchProduct)').length <= 0 && document.querySelectorAll('.smeCartLineItem.isSwatchProduct').length >= 1 && swatchproductclasstruflas) {

                if (document.querySelector(swatchproductclass).checked == true) {
                    var sme_product_id = '';
                    if (checkout_upsell_settings[0].shipping_product_id != null) {
                        sme_product_id = checkout_upsell_settings[0].shipping_product_id;
                    }

                    if (checkout_upsell_settings[0].gift_product_id != null) {
                        sme_product_id = checkout_upsell_settings[0].gift_product_id;
                    }

                    if (document.querySelector('.isSwatchProduct[data-product-id="' + sme_product_id + '"]')) {
                        var variant_id = document.querySelector('.isSwatchProduct[data-product-id="' + sme_product_id + '"]').getAttribute('data-variant-id');
                    }

                    let url = window.Shopify.routes.root + 'cart/change.js';
                    let smePostData = 'id=' + variant_id + '&quantity=0';
                    let authHeader = { 'x-requested-with': 'XMLHttpRequest' };
                    let smeApiResponse = await smePostAjaxApiFn(url, smePostData, authHeader);
                    if (!smeApiResponse.status) {
                        if (document.querySelector('.smeCartLineItem.isSwatchProduct')) {
                            document.querySelector('.smeCartLineItem.isSwatchProduct').remove();
                        }
                        document.querySelector('.shipping_product_smeSwitchProduct').checked = false;
                        document.querySelector('.gift_product_smeSwitchProduct').checked = false;
                        isremoveitem = false;
                        smeCartCall();

                    }
                } else {
                    isremoveitem = false;
                    smeCartCall();
                }
            } else {
                isremoveitem = false;
                smeCartCall();
            }

        }
        else {
            document.querySelector('.shipping_product_smeSwitchProduct').checked = false;
            document.querySelector('.gift_product_smeSwitchProduct').checked = false;
        }

        smeCartActionLoaderRemove(thisObj);
        if (is_delete_swatch === false) {
            isremoveitem = false;
            smeCartCall();
        }

        if (smetemplates == 1) {
            document.querySelectorAll('.salemaximize__product-action').forEach(button => {
                button.classList.remove('disabled');
            });
        } else {
            document.querySelectorAll('.salemaximize__product-action-cart').forEach(button => {
                button.classList.remove('disabled');
            });
        }

    }
}

function smeCartActionLoaderApply(thisObj) {

    if (smetemplates == 1) {
        var cartItem = thisObj.closest('.salemaximize__cart-item');
        var productAction = cartItem.querySelector('.salemaximize__product-action');
    } else {
        var cartItem = thisObj.closest('.salemaximize__cart-item-cart');
        var productAction = cartItem.querySelector('.salemaximize__product-action-cart');
    }
    let productDetail = cartItem.querySelector('.salemaximize__product-detail');

    productDetail.style.pointerEvents = 'none';
    productDetail.style.opacity = 0.3;
    productAction.style.pointerEvents = 'none';
    productAction.style.opacity = 0.3;

    let loader = document.createElement('div');
    loader.classList.add('salemaximizeLoaderCart');

    cartItem.insertBefore(loader, cartItem.firstChild);
}

function smeCartActionLoaderRemove(thisObj) {

    if (smetemplates == 1) {
        var cartItem = thisObj.closest('.salemaximize__cart-item');
        var productAction = cartItem.querySelector('.salemaximize__product-action');
    } else {
        var cartItem = thisObj.closest('.salemaximize__cart-item-cart');
        var productAction = cartItem.querySelector('.salemaximize__product-action-cart');
    }

    const productDetail = cartItem.querySelector('.salemaximize__product-detail');

    const loader = cartItem.querySelector('.salemaximizeLoaderCart');

    if (loader) {
        loader.remove();
    }

    if (productDetail) {
        productDetail.style.pointerEvents = 'auto';
        productDetail.style.opacity = 1;
    }

    if (productAction) {
        productAction.style.pointerEvents = 'auto';
        productAction.style.opacity = 1;
    }
}

async function smeAddRemoveQuantity(thisObj, qtyAction) {
    let updatedQty;
    var smeQtyPlusBtn = document.querySelector('.smeCartLineItem[data-variant-id="' + thisObj.getAttribute('data-variant-id') + '"] .smeQtyBoxBlock .smeQtyPlus');
    var smeQtyMinusBtn = document.querySelector('.smeCartLineItem[data-variant-id="' + thisObj.getAttribute('data-variant-id') + '"] .smeQtyBoxBlock .smeQtyMinus');

    if (smeQtyPlusBtn) {
        smeQtyPlusBtn.setAttribute('disabled', ''); // disable plus button
    }

    if (smetemplates == 1) {
        document.querySelectorAll('.salemaximize__product-action').forEach(button => {
            button.classList.add('disabled');
        });
    } else {
        document.querySelectorAll('.salemaximize__product-action-cart').forEach(button => {
            button.classList.add('disabled');
        });
    }

    if ([0, 1, -1, 2].includes(qtyAction)) {
        var itemNo = thisObj.getAttribute('data-variant-id');
        const smeCartLineItem = document.querySelector('.smeCartLineItem[data-variant-id="' + itemNo + '"]');
        const qty = parseInt(smeCartLineItem.querySelector('.smeCartQty').value);
        const smeSellingPrice = smeCartLineItem.querySelector('.smeSellingPrice');
        const smeComparePrice = smeCartLineItem.querySelector('.smeComparePrice');
        const sellingPrice = smeSellingPrice.getAttribute('data-product-selling-price');
        if (smeComparePrice) {
            const comparePriceAttribute = smeComparePrice.getAttribute('data-product-compare-price');
            if (comparePriceAttribute) {
                var comparePrice = comparePriceAttribute;
            }
        }
        const smeCartQty = smeCartLineItem.querySelector('.smeCartQty');

        const smeFreeProduct = thisObj.closest('.smeFreeProduct');
        if (smeFreeProduct) {
            var maxQty = parseInt(smeFreeProduct.getAttribute('data-product-qty'));
        } else {
            var maxQty = '';
        }

        let oldQty = smeCartQty.value;

        if (smeCartQty.value === '1' && qtyAction === -1) {
            document.querySelector('.smeCartLineItem[data-variant-id="' + itemNo + '"] .smeQtyBoxBlock .smeQtyMinus').setAttribute('disabled', '');
            document.querySelector('.smeCartLineItem[data-variant-id="' + itemNo + '"] .smeQtyBoxBlock .smeQtyPlus').removeAttribute('disabled');

            smeCartActionLoaderRemove(thisObj);
            return false;
        }

        if ([1, -1].includes(qtyAction)) {
            smeCartActionLoaderApply(thisObj);
            if (maxQty && maxQty === qty && qtyAction === 1) {
                document.querySelector('.smeCartLineItem[data-variant-id="' + itemNo + '"] .smeQtyBoxBlock .smeQtyPlus').setAttribute('disabled', '');
                smeCartActionLoaderRemove(thisObj);
                return false;
            } else if (maxQty && maxQty <= qty) {

            }
            if (qtyAction === 1) {

            }


            updatedQty = parseInt(qty) + parseInt(qtyAction);
            updatedQty = (maxQty) ? (updatedQty > maxQty) ? maxQty : updatedQty : (updatedQty > 0) ? updatedQty : '1';
            smeCartQty.value = updatedQty;
            smeCartActionLoaderRemove(thisObj);
        }

        if (qtyAction === 0) {
            smeCartQty.setAttribute('data-old-qty', smeCartQty.value);
            return false;
        }

        if (qtyAction === 2) {
            const inputVal = smeCartQty.value;
            updatedQty = (maxQty) ? (inputVal > maxQty) ? maxQty : inputVal : (inputVal > 0) ? inputVal : '1';
            smeCartQty.value = updatedQty;
            smeCartActionLoaderApply(thisObj);
        }

        (updatedQty === 0) ? smeCartLineItem.remove() : ''; // remove product if cart quantity is zero


        let url = window.Shopify.routes.root + 'cart/change.js';
        let smePostData = JSON.stringify({ "id": itemNo, "quantity": updatedQty });
        let authHeader = { "json": "true", 'x-requested-with': 'XMLHttpRequest' };
        let smeApiResponse = await smePostAjaxApiFn(url, smePostData, authHeader);


        if (!smeApiResponse.status) {

            if (smetemplates == 1) {
                document.querySelectorAll('.salemaximize__product-action').forEach(button => {
                    button.classList.remove('disabled');
                });
            } else {
                document.querySelectorAll('.salemaximize__product-action-cart').forEach(button => {
                    button.classList.remove('disabled');
                });
            }

            let updateSellingPrice = parseFloat(sellingPrice) * updatedQty;
            let compareSellingPrice = parseFloat(comparePrice) * updatedQty;

            smeCartActionLoaderRemove(thisObj);


            if (smeApiResponse.items.length <= 0) {
                smeCartClean();
            }
        } else if (smeApiResponse.status === 422) {

            if (smetemplates == 1) {
                document.querySelectorAll('.salemaximize__product-action').forEach(button => {
                    button.classList.remove('disabled');
                });
            } else {
                document.querySelectorAll('.salemaximize__product-action-cart').forEach(button => {
                    button.classList.remove('disabled');
                });
            }


            smeCartQty.value = oldQty;
            smeCartLineItem.querySelector('.product_qty_rich_error_msg')?.remove();
            let errorMsg = document.createElement('div');
            errorMsg.className = 'product_qty_rich_error_msg';
            errorMsg.innerHTML = smeApiResponse.response.message;
            document.querySelector('.cartItemMainBlock').insertAdjacentElement('afterend', errorMsg);

            smeCartActionLoaderRemove(thisObj);
            setTimeout(function () {
                document.querySelector('.product_qty_rich_error_msg')?.remove();
            }, 3000);
        }
    }
}

function newsmeShopifyCouponGet() {
    let generalDiscount = smeGeneralDiscountGet(smeLocalStorageList.smeGeneralDiscount);

    if (Object.keys(generalDiscount).length !== 0) {
        const promises = generalDiscount.map(element => {

            return smeGetCouponData(element.couponCode).then(new_getGeneralDiscount => {
                if (new_getGeneralDiscount.discountType) {
                    new_getGeneralDiscount['couponCode'] = element.couponCode;
                    element.discountType = new_getGeneralDiscount.discountType;
                    element.discountVal = new_getGeneralDiscount.discountVal;
                    element.discount_option = new_getGeneralDiscount.discount_option;
                    element.discount_type = new_getGeneralDiscount.discount_type;
                    element.discount_type_value = new_getGeneralDiscount.discount_type_value;
                    element.variantid = new_getGeneralDiscount.variantid;
                    element.combinesWith = new_getGeneralDiscount.combinesWith;
                } else {
                    element.remove = true;
                }
            }).catch(error => {
                console.log("Error:", error);

            });
        });


        Promise.all(promises).then(() => {
            newgeneralDiscount = generalDiscount.filter(element => !element.remove);
            smeGeneralDiscountStore(newgeneralDiscount, smeLocalStorageList.smeGeneralDiscount);
            smeDiscountInit();
        }).catch(error => {
            console.log("Error in processing promises:", error);
        });
    }
}

var smecombinesWith_dicunt = 0;
function smeShopifyCouponGet(thisObj) {

    let oldBtnText = thisObj.innerHTML;
    thisObj.setAttribute('disabled', '');
    var filteredDiscounts = [];
    thisObj.innerHTML = btnLoader;
    thisObj.classList.add("couponBtnActive");
    let couponInput = thisObj.closest('.smeCheckoutCouponBlock') ? document.querySelector('.smeShopifyCheckoutCouponInput') : document.querySelector('.smeShopifyCouponInput');
    let couponCode = couponInput.value.trim();

    var cartWdata = JSON.parse(sme_gm_dataobj.cart_widget);
    var cart_tempSecId = Object.keys(cartWdata)[0];
    var cart_upsell_settings = JSON.parse(cartWdata[cart_tempSecId].upsell_settings);

    var progress_barWdata = JSON.parse(sme_gm_dataobj.progress_bar_widget);
    var progress_bar_tempSecId = Object.keys(progress_barWdata)[0];
    var progress_bar_tier_settings = JSON.parse(progress_barWdata[progress_bar_tempSecId].tier_settings);
    var progress_bar_hasDiscountTypeZero = progress_bar_tier_settings.every(function (tier) {
        return (tier.discount_type === "0") ||
            (tier.discount_type === "1" && tier.discount_option === "2") ||
            (tier.discount_type === "3" && tier.discount_option === "2");
    });


    var upsellWdata = JSON.parse(sme_gm_dataobj.upsell_widget);
    var upselltempSecId = Object.keys(upsellWdata)[0];

    var recommendationwdata = JSON.parse(sme_gm_dataobj.recommendation_widget);
    var recommendationtempSecId = Object.keys(recommendationwdata)[0];

    var checkoutWdata = JSON.parse(sme_gm_dataobj.checkout_widget);
    var tempSecId = Object.keys(checkoutWdata)[0];
    var checkout_upsell_settings = JSON.parse(checkoutWdata[tempSecId].upsell_settings);

    if (couponCode !== '') {

        let generalDiscount = smeGeneralDiscountGet(smeLocalStorageList.smeGeneralDiscount);

        if (Object.keys(generalDiscount).length !== 0) {
            filteredDiscounts = generalDiscount.filter(discount => discount.couponCode === couponCode);

        } else {
            filteredDiscounts = [];
        }

        if (filteredDiscounts.length <= 0) {

            smeGetCouponData(couponCode).then(async new_getGeneralDiscount => {

                if (new_getGeneralDiscount.discountType) {
                    new_getGeneralDiscount['couponCode'] = couponCode;

                    var isnewinster = 0;
                    var new_data_json = [];
                    if (new_getGeneralDiscount.combinesWith) {
                        if (generalDiscount.length > 0) {
                            generalDiscount.forEach(element => {
                                if (new_getGeneralDiscount.discount_option == 'ORDER') {
                                    if (new_getGeneralDiscount.combinesWith.orderDiscounts) {

                                        if (element.discount_option == 'ORDER' && element.combinesWith.orderDiscounts) {
                                            new_data_json.push(element);
                                            isnewinster = 1;
                                        } else {
                                            isnewinster = 1;
                                        }

                                    } else {

                                        if (
                                            (cart_upsell_settings[0].is_enable == '0' && cart_upsell_settings[0].discount_type !== '0') ||
                                            (upsellWdata[upselltempSecId].is_active == '0' && upsellWdata[upselltempSecId].discount_type !== '0') ||
                                            (recommendationwdata[recommendationtempSecId].is_active == '0' && recommendationwdata[recommendationtempSecId].discount_type !== '0') ||
                                            (checkout_upsell_settings[0].is_enable == '0' && checkout_upsell_settings[0].discount_type !== '0') ||
                                            (!progress_bar_hasDiscountTypeZero)
                                        ) {
                                            error_msg("This discount is not applicable because it cannot be combined with the order discount.");
                                        } else {
                                            isnewinster = 1;
                                        }

                                    }

                                    if (new_getGeneralDiscount.combinesWith.productDiscounts) {

                                        if (element.discount_option == 'PRODUCT' && element.combinesWith.orderDiscounts) {
                                            new_data_json.push(element);
                                            isnewinster = 1;
                                        } else {
                                            isnewinster = 1;
                                        }

                                    }

                                    if (new_getGeneralDiscount.combinesWith.shippingDiscounts) {

                                        if (element.discount_option == 'SHIPPING' && element.combinesWith.orderDiscounts) {
                                            new_data_json.push(element);
                                            isnewinster = 1;
                                        } else {
                                            isnewinster = 1;
                                        }

                                    }

                                }

                                if (new_getGeneralDiscount.discount_option == 'PRODUCT') {

                                    if (new_getGeneralDiscount.combinesWith.orderDiscounts) {

                                        if (element.discount_option == 'ORDER' && element.combinesWith.productDiscounts) {
                                            new_data_json.push(element);
                                            isnewinster = 1;
                                        } else {
                                            isnewinster = 1;
                                        }

                                    } else {

                                        if (
                                            (cart_upsell_settings[0].is_enable == '0' && cart_upsell_settings[0].discount_type !== '0') ||
                                            (upsellWdata[upselltempSecId].is_active == '0' && upsellWdata[upselltempSecId].discount_type !== '0') ||
                                            (recommendationwdata[recommendationtempSecId].is_active == '0' && recommendationwdata[recommendationtempSecId].discount_type !== '0') ||
                                            (checkout_upsell_settings[0].is_enable == '0' && checkout_upsell_settings[0].discount_type !== '0') ||
                                            (!progress_bar_hasDiscountTypeZero)
                                        ) {
                                            error_msg("This discount is not applicable because it cannot be combined with the order discount.");
                                        } else {
                                            isnewinster = 1;
                                        }
                                    }

                                    if (new_getGeneralDiscount.combinesWith.productDiscounts) {

                                        if (element.discount_option == 'PRODUCT' && element.combinesWith.productDiscounts) {
                                            let firstJsonVariantIds = element.variantid.split(",");
                                            let ok_new_getGeneralDiscount = new_getGeneralDiscount.variantid.split(",");
                                            let hasCommonId = firstJsonVariantIds.some(id => ok_new_getGeneralDiscount.includes(id));

                                            if (hasCommonId) {
                                                isnewinster = 1;
                                            } else {
                                                isnewinster = 1;
                                                new_data_json.push(element);
                                            }

                                        } else {
                                            isnewinster = 1;
                                        }


                                    }

                                    if (new_getGeneralDiscount.combinesWith.shippingDiscounts) {

                                        if (element.discount_option == 'SHIPPING' && element.combinesWith.productDiscounts) {
                                            new_data_json.push(element);
                                            isnewinster = 1;
                                        }
                                        else {
                                            isnewinster = 1;
                                        }

                                    }

                                }
                                if (new_getGeneralDiscount.discount_option == 'SHIPPING') {

                                    if (new_getGeneralDiscount.combinesWith.orderDiscounts) {
                                        if (element.discount_option == 'ORDER' && element.combinesWith.shippingDiscounts) {
                                            new_data_json.push(element);
                                            isnewinster = 1;
                                        } else {
                                            isnewinster = 1;
                                        }
                                    } else {
                                        isnewinster = 1;
                                    }


                                    if (new_getGeneralDiscount.combinesWith.productDiscounts) {
                                        if (element.discount_option == 'PRODUCT' && element.combinesWith.shippingDiscounts) {
                                            new_data_json.push(element);
                                            isnewinster = 1;
                                        } else {
                                            isnewinster = 1;
                                        }
                                    } else {
                                        isnewinster = 1;
                                    }
                                }
                            });
                        } else {
                            if (new_getGeneralDiscount.combinesWith.orderDiscounts) {
                                new_data_json.push(new_getGeneralDiscount);
                            } else {
                                if (
                                    (cart_upsell_settings[0].is_enable == '0' && cart_upsell_settings[0].discount_type !== '0') ||
                                    (upsellWdata[upselltempSecId].is_active == '0' && upsellWdata[upselltempSecId].discount_type !== '0') ||
                                    (recommendationwdata[recommendationtempSecId].is_active == '0' && recommendationwdata[recommendationtempSecId].discount_type !== '0') ||
                                    (checkout_upsell_settings[0].is_enable == '0' && checkout_upsell_settings[0].discount_type !== '0') ||
                                    (!progress_bar_hasDiscountTypeZero)
                                ) {
                                    error_msg("This discount is not applicable because it cannot be combined with the order discount.");
                                } else {
                                    new_data_json.push(new_getGeneralDiscount);
                                }
                            }
                        }
                        if (isnewinster == 1) {
                            new_data_json.push(new_getGeneralDiscount);
                        }
                        smeGeneralDiscountStore(new_data_json, smeLocalStorageList.smeGeneralDiscount);
                        couponInput.value = '';
                        thisObj.removeAttribute('disabled');
                        thisObj.innerHTML = oldBtnText;
                    }
                    smeDiscountInit();
                }
                else {
                    couponInput.value = '';
                    thisObj.removeAttribute('disabled');
                    thisObj.innerHTML = oldBtnText;
                }

            }).catch(error => {
                console.log("Error:", error);
            });


        }
        else {
            couponInput.value = '';
            thisObj.removeAttribute('disabled');
            thisObj.innerHTML = oldBtnText;
        }
    } else {
        error_msg(smeCartSettingsObj.coup_error_msg);
        thisObj.removeAttribute('disabled');
        thisObj.innerHTML = oldBtnText;
        thisObj.classList.remove("couponBtnActive");
    }
}

function error_msg(errorMsg) {
    let couponErrorBlock = document.createElement('div');
    couponErrorBlock.className = "smeCouponErrorBlock";
    couponErrorBlock.style.display = "none";
    couponErrorBlock.style.fontSize = "14px";
    couponErrorBlock.style.color = "red";
    couponErrorBlock.style.lineHeight = "20px";

    couponErrorBlock.innerHTML = errorMsg;
    let targetElement = document.querySelector('.couponBtnActive') && document.querySelector('.couponBtnActive').closest('.smeCheckoutCouponBlock') ? document.querySelector('.smeCheckoutCouponErrorBlock') : document.querySelector('.smeCouponBlock');
    if (targetElement) {
        targetElement.parentNode.insertBefore(couponErrorBlock, targetElement.nextSibling);
    }
    couponErrorBlock.style.display = "block";
    couponErrorBlock.style.marginBottom = "10px";
    setTimeout(function () {
        couponErrorBlock.style.display = "none";
        let errorBlock = document.querySelector(".smeCouponErrorBlock");
        if (errorBlock) {
            errorBlock.parentNode.removeChild(errorBlock);
        }
    }, 4000);
}

const smeGeneralDiscountStore = (discountObj, storageName) => {
    (typeof (Storage) !== "undefined") ? localStorage.setItem(storageName, btoa(unescape(encodeURIComponent(JSON.stringify(discountObj))))) : console.log("Sorry, your browser does not support Web Storage...");
};

var checkout_manual_web_url = {};
async function smeGetCouponData(couponCode) {
    var smecombinesWith = appliesOnEachItem = '';
    let returnRes = {};
    let shopifyFeaturesData = document.getElementById('shopify-features').innerHTML;

    if (shopifyFeaturesData != '') {
        shopifyFeaturesData = JSON.parse(shopifyFeaturesData);
    } else {
        let response = await fetch('https://' + smeSiteDomain + '/payments/config', {
            method: 'GET',
            headers: {
                "accept": "*/*",
                "cache-control": "no-cache",
                "content-type": "application/json",
                "pragma": "no-cache",
            }
        });
        let data = await response.json();
        shopifyFeaturesData = data.paymentInstruments;
    }
    let smeAccessToken = btoa(shopifyFeaturesData.accessToken);
    let smeCartItemArry = [];

    smeCartData.items.map((item, index) => {
        if (item?.selling_plan_allocation && item?.selling_plan_allocation?.selling_plan && item?.selling_plan_allocation?.selling_plan.id) {
            smeCartItemArry.push({ 'variant_id': item.id, 'quantity': item.quantity, 'selling_plan_id': item?.selling_plan_allocation?.selling_plan.id });
        } else {
            smeCartItemArry.push({ 'variant_id': item.id, 'quantity': item.quantity });
        }
    });


    let url = `https://${smeSiteDomain}/wallets/checkouts/?locale=${Shopify.locale}`;

    let smePostData = {
        'checkout': {
            'discount_code': couponCode,
            'line_items': smeCartItemArry,
            'presentment_currency': smeUserCurrency
        }
    }

    let authHeader = {
        'json': 'true',
        'accept': '*/*',
        'authorization': 'Basic ' + smeAccessToken,
        'cache-control': 'no-cache',
        'content-type': 'application/json',
        'pragma': 'no-cache'
    };
    let smeApiResponse = await smePostAjaxApiFn(url, JSON.stringify(smePostData), authHeader);
    let errorMessage = '';
    if (!smeApiResponse.status && typeof smeApiResponse.errors == 'undefined') {

        let walletRes = smeApiResponse.checkout;

        checkout_manual_web_url['checkout_manual_discount'] = smeApiResponse.checkout.web_url;
        if (walletRes.applied_discounts.length > 0 && walletRes.applied_discounts[0].applicable == true) {

            var url_code_data = smeAppUrl + "get_data_api.php";
            const discount_code_data = JSON.stringify({
                method_name: "discount_code_check",
                shop: Shopify.shop,
                discount_code: couponCode,
                token: sme_gm_dataobj.token,
            });
            let authHeader = { 'Authentication': smeReqHeader.Authentication };
            try {
                const response = await fetch(url_code_data, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                        "Authentication": authHeader.Authentication
                    },
                    body: discount_code_data
                });

                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }

                const data = await response.json();

                if (data.res === 'success') {
                    smecombinesWith = data.combinesWith;
                    appliesOnEachItem = data.appliesOnEachItem;
                }
            } catch (error) {
                console.error("Error:", error);
            }

            walletRes.applied_discounts.forEach(async discountObj => {
                if (discountObj.title.toLowerCase() == couponCode.toLowerCase()) {
                    if (walletRes.applied_discounts.length > 0 && discountObj.applicable == true) {
                        if (discountObj.discount_class && discountObj.discount_class == 'SHIPPING') {
                            returnRes['discountType'] = 4;
                            returnRes['variantid'] = '';
                            returnRes['discountVal'] = 0.00;
                            returnRes['discount_option'] = '';
                            returnRes['discount_type'] = '';
                            returnRes['discount_type_value'] = '';
                            returnRes['combinesWith'] = smecombinesWith;
                        } else if (discountObj.discount_class && discountObj.discount_class == 'PRODUCT') {
                            const targetTitle = discountObj.title;
                            const matchingVariantIds = walletRes.line_items
                                .filter(item =>
                                    item.discount_allocations.some(
                                        discount => discount.description === targetTitle
                                    )
                                )
                                .map(item => item.variant_id);
                            returnRes['discountType'] = 3;
                            returnRes['variantid'] = matchingVariantIds.join(',');;
                            returnRes['discountVal'] = discountObj.amount;
                            returnRes['discount_option'] = discountObj.discount_class;
                            returnRes['discount_type'] = discountObj.value_type;
                            returnRes['discount_type_value'] = discountObj.value;
                            returnRes['combinesWith'] = smecombinesWith;
                            returnRes['appliesOnEachItem'] = appliesOnEachItem;
                        } else {
                            if (discountObj.value_type == "percentage") {
                                var discountVal = discountObj.amount;
                                returnRes['discountType'] = 1;
                                returnRes['discount_option'] = discountObj.discount_class;
                                returnRes['discount_type'] = discountObj.value_type;
                                returnRes['discount_type_value'] = discountObj.value;
                                returnRes['combinesWith'] = smecombinesWith;
                            } else if (discountObj.value_type == "fixed_amount") {
                                var discountVal = discountObj.value;
                                returnRes['discountType'] = 3;
                                returnRes['discount_option'] = discountObj.discount_class;
                                returnRes['discount_type'] = discountObj.value_type;
                                returnRes['discount_type_value'] = discountObj.value;
                                returnRes['combinesWith'] = smecombinesWith;
                            } else {
                                var discountVal = 0.00;
                                returnRes['discountType'] = 0;
                                returnRes['discount_option'] = '';
                                returnRes['discount_type'] = '';
                                returnRes['discount_type_value'] = '';
                                returnRes['combinesWith'] = smecombinesWith;
                            }

                            returnRes['variantid'] = '';
                            returnRes['discountVal'] = discountVal;
                        }
                    } else if (walletRes.applied_discount.non_applicable_reason && walletRes.applied_discount.non_applicable_reason != 'null') {

                        var generalDiscount = smeGeneralDiscountGet(smeLocalStorageList.smeGeneralDiscount);
                        if (Object.keys(generalDiscount).length !== 0) {
                            generalDiscount = generalDiscount.filter(function (discount) {
                                return discount.couponCode !== couponCode;
                            });
                        }
                        smeGeneralDiscountStore(generalDiscount, smeLocalStorageList.smeGeneralDiscount);

                        errorMessage = walletRes.applied_discount.non_applicable_reason;
                    }

                }
                else if (walletRes.discount_violations.length > 0) {
                    walletRes.discount_violations.forEach(discount_violationsobj => {
                        if (discount_violationsobj.title == couponCode) {

                            var generalDiscount = smeGeneralDiscountGet(smeLocalStorageList.smeGeneralDiscount);
                            if (Object.keys(generalDiscount).length !== 0) {
                                generalDiscount = generalDiscount.filter(function (discount) {
                                    return discount.couponCode !== couponCode;
                                });
                            }

                            smeGeneralDiscountStore(generalDiscount, smeLocalStorageList.smeGeneralDiscount);

                            errorMessage = discount_violationsobj.non_applicable_reason;
                        }
                    });
                }

            });
        }
        else if (walletRes.discount_violations.length > 0) {
            walletRes.discount_violations.forEach(discount_violationsobj => {
                if (discount_violationsobj.title == couponCode) {
                    var generalDiscount = smeGeneralDiscountGet(smeLocalStorageList.smeGeneralDiscount);
                    if (Object.keys(generalDiscount).length !== 0) {
                        generalDiscount = generalDiscount.filter(function (discount) {
                            return discount.couponCode !== couponCode;
                        });
                    }

                    smeGeneralDiscountStore(generalDiscount, smeLocalStorageList.smeGeneralDiscount);

                    errorMessage = discount_violationsobj.non_applicable_reason;
                }
            });
        }
    } else {

        var generalDiscount = smeGeneralDiscountGet(smeLocalStorageList.smeGeneralDiscount);
        if (Object.keys(generalDiscount).length !== 0) {
            generalDiscount = generalDiscount.filter(function (discount) {
                return discount.couponCode !== couponCode;
            });
        }
        smeGeneralDiscountStore(generalDiscount, smeLocalStorageList.smeGeneralDiscount);

        if (smeApiResponse.response.errors != undefined && smeApiResponse.response.errors.discount_code && smeApiResponse.response.errors.discount_code[0]) {
            errorMessage = smeApiResponse.response.errors.discount_code[0].message;
        } else if (smeApiResponse.response.errors != undefined && smeApiResponse.response.errors.discount && smeApiResponse.response.errors.discount.code) {
            errorMessage = smeApiResponse.response.errors.discount.code[0].message;
        }
    }
    if (errorMessage) {
        let errorMsg = smeCartSettingsObj.coup_error_msg;
        let tempContainer = document.createElement('div');
        tempContainer.innerHTML = errorMsg;
        let spanContent = tempContainer.querySelector('span').textContent;
        errorMessage = errorMsg.replace(spanContent, errorMessage);
        let errorBlock = document.querySelector(".smeCouponErrorBlock");
        if (errorBlock) {
            errorBlock.parentNode.removeChild(errorBlock);
        }
        let couponErrorBlock = document.createElement("div");
        couponErrorBlock.className = "smeCouponErrorBlock";
        couponErrorBlock.style.display = "none";
        couponErrorBlock.innerHTML = errorMessage;
        let targetElement = document.querySelector('.couponBtnActive') && document.querySelector('.couponBtnActive').closest('.smeCheckoutCouponBlock') ? document.querySelector('.smeCheckoutCouponErrorBlock') : document.querySelector('.smeCouponBlock');
        if (targetElement) {
            targetElement.parentNode.insertBefore(couponErrorBlock, targetElement.nextSibling);
        }
        couponErrorBlock.style.display = "block";
        couponErrorBlock.style.marginBottom = "7px";
        setTimeout(function () {
            couponErrorBlock.style.display = "none";
        }, 4000);
    } else {
        if (document.querySelector('.smeCheckoutCouponBlock')) {
            document.querySelector('.discountModalClose').dispatchEvent(new Event('click'));
        }
    }
    var couponBtnActive = document.querySelector('.couponBtnActive');
    if (couponBtnActive) {
        couponBtnActive.classList.remove("couponBtnActive");
    }

    return returnRes;
}

function smeChangeVariant(thisObj, isFreeProduct = 0) {
    const thisObjValue = thisObj.value;
    const selectedOption = thisObj.querySelector('option:checked');
    const variantImage = selectedOption.getAttribute('data-variantsimg');
    const variantComparePrice = selectedOption.getAttribute('data-compareprice');
    const variantSellingPrice = parseFloat(selectedOption.getAttribute('data-selling-price')) * 100;
    const varientId = thisObjValue;
    const discounType = thisObj.getAttribute('data-discount-type');
    const discounVal = thisObj.getAttribute('data-discount-val');
    const priceOverVal = thisObj.getAttribute('data-price-over-val') || null;

    let tempSecId = thisObj.closest('.smewidgetblock').getAttribute('data-id');
    let sourceId = thisObj.closest('.smewidgetblock').getAttribute('data-source-id');

    let discountDataObj = { "discountType": discounType, "discountVal": discounVal, "price": variantSellingPrice, "priceOver": priceOverVal, "qty": 1 };
    var discountCalCulation = smeDiscountCalculator(discountDataObj);
    let sourcePrice = discountCalCulation.discountedPrice;

    if (isFreeProduct === 1) {

        var old_varient_id = thisObj.getAttribute('data-variant-id');
        var smeDiscountTag = document.querySelector('.smeCartLineItem[data-variant-id="' + old_varient_id + '"]').getAttribute('data-discounttag');
        var product_qty = document.querySelector('.smeCartQty[data-variant-id="' + old_varient_id + '"]').value;


        let propertieObj = {
            "__smeDiscountTag": smeDiscountTag,
            "__smeProductDiscountType": "smeFreeProduct",
            "__smeProductforshiiping": "__smeProductforshiiping",
            "__smeProductDiscount": variantSellingPrice / 100 * product_qty,
            "__smeProductdiscount_value": variantSellingPrice / 100 * product_qty,
            "__smeWidgetProduct": "1-" + tempSecId,
            "__smeProgreesBar": 0,
        };

        smeChangeVariantFreeProduct(thisObj, varientId, propertieObj, product_qty);
    }

    let sourceComparePrice = parseFloat(variantComparePrice);
    let comparePrice = (variantComparePrice == null && sourceComparePrice !== parseFloat(sourcePrice)) ? variantSellingPrice : sourceComparePrice;


    var smeProductForm = thisObj.closest('.salemaximizeProductDiv').querySelector('.smeProductForm input[name="id"]');
    if (smeProductForm) {
        smeProductForm.value = varientId;
    }
    const comparePriceElement = thisObj.closest('.salemaximizeProductDiv').querySelector('.salemaximize__compare-price');
    if (comparePriceElement) {
        comparePriceElement.innerHTML = (isFreeProduct) ? smeCurrencyFormate + variantComparePrice : smeCurrencyFormate + parseFloat(comparePrice).toFixed(2);
    }

    const sellingPriceElement = thisObj.closest('.salemaximizeProductDiv').querySelector('.salemaximize__selling-price-cart');
    if (sellingPriceElement) {

        sellingPriceElement.innerHTML = (isFreeProduct == 1) ? smeCurrencyFormate + '0.00' : smeCurrencyFormate + parseFloat(sourcePrice).toFixed(2);
    }

    const salemaximizeProductImg = thisObj.closest('.salemaximizeProductDiv').querySelector('.salemaximizeProductImg');
    if (salemaximizeProductImg) {
        salemaximizeProductImg.src = variantImage;
    }

}

async function smeChangeVariantFreeProduct(thisObj, varientId, propertieObj, product_qty) {

    var old_varient_id = thisObj.getAttribute('data-variant-id');

    let url = window.Shopify.routes.root + 'cart/change.js';
    let smePostData = 'id=' + old_varient_id + '&quantity=0';
    let authHeader = { 'x-requested-with': 'XMLHttpRequest' };

    try {
        let smeApiResponse = await smePostAjaxApiFn(url, smePostData, authHeader);

        if (!smeApiResponse.status) {

            url = window.Shopify.routes.root + 'cart/add.js';
            smePostData = JSON.stringify({ "id": varientId, "quantity": product_qty, "properties": propertieObj });
            authHeader = { "json": "true", 'x-requested-with': 'XMLHttpRequest' };

            smeApiResponse = await smePostAjaxApiFn(url, smePostData, authHeader);
            if (!smeApiResponse.status) {
                smeAddedFreeProdIds[propertieObj.__smeProgreesBar] = smeApiResponse;
            }
        }
    } catch (error) {
        console.error(error);
    }

}

async function smeCheckoutProcess(thisObj) {

    let oldButtonText = thisObj.innerHTML;
    thisObj.innerHTML = btnLoader;

    var checkoutWdata = JSON.parse(sme_gm_dataobj.checkout_widget);
    var tempSecId = Object.keys(checkoutWdata)[0];
    checkoutWdata = checkoutWdata[tempSecId];
    if (checkoutWdata.is_enable_confirmation_block === '0' && document.querySelector("input[name='accept_term_and_condition']") && !document.querySelector("input[name='accept_term_and_condition']").checked) {
        let termAndConditionBlocks = document.querySelectorAll('.smeTermAndConditionBlock *');
        termAndConditionBlocks.forEach(block => {
            block.style.color = 'red';
        });
        thisObj.innerHTML = oldButtonText;
        return false;
    }

    var salemax_discount_code = '';
    var free_shipping_coupon_code = '';
    var salemax_discount = smeGeneralDiscountGet('salemax_discount');
    var cart_discount_json = smeGeneralDiscountGet('cart_discount_json');

    var salemax_discount_make = false;

    if (cart_discount_json.length > 0) {
        var cart_discount_json_data = JSON.parse(cart_discount_json);
        var sme_total_price = smeCartData.total_price;
        if (cart_discount_json_data.sme_cart_Subtotal == sme_total_price) {
            salemax_discount_code = cart_discount_json_data.cart_coupon_code;
            salemax_discount_make = false;
        } else {
            salemax_discount_make = true;

            var widget_global_settings_id = checkoutWdata.widget_global_settings_id;
            var url = smeAppUrl + "get_data_api.php";
            const discount_code_data = JSON.stringify({
                method_name: "remove_discount_code",
                shop: Shopify.shop,
                discount_code: cart_discount_json_data.cart_coupon_id,
                token: sme_gm_dataobj.token,
            });
            let authHeader = { 'Authentication': smeReqHeader.Authentication };
            try {
                const response = await fetch(url, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                        "Authentication": authHeader.Authentication
                    },
                    body: discount_code_data
                });

                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }

                const data = await response.json();

            } catch (error) {

            }

        }

    } else {
        salemax_discount_make = true;
    }

    if (salemax_discount > 0 && salemax_discount_make) {

        var widget_global_settings_id = checkoutWdata.widget_global_settings_id;
        var url = smeAppUrl + "get_data_api.php";
        const discount_code_data = JSON.stringify({
            method_name: "create_discount_code",
            shop: Shopify.shop,
            salemax_discount: salemax_discount,
            original_total_price: smeCartTotalAmount / Shopify.currency.rate,
            iana_timezone: sme_gm_dataobj.iana_timezone,
            token: sme_gm_dataobj.token
        });
        let authHeader = { 'Authentication': smeReqHeader.Authentication };

        try {
            const response = await fetch(url, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                    "Authentication": authHeader.Authentication
                },
                body: discount_code_data
            });

            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }

            const data = await response.json();
            salemax_discount_code = data.coupon_code;

            cart_discount_json = JSON.stringify({
                "cart_coupon_code": data.coupon_code,
                "cart_coupon_id": data.id,
                "sme_cart_Subtotal": data.sme_cart_Subtotal
            });

            smeGeneralDiscountStore(cart_discount_json, 'cart_discount_json');

        } catch (error) {
            console.error("Error:", error);
        }
    }


    var store_user_id = sme_gm_dataobj.store_user_id;
    var iana_timezone = sme_gm_dataobj.iana_timezone;
    if (iana_timezone && store_user_id) {
        var widget_global_settings_id = checkoutWdata.widget_global_settings_id;
        var url = smeAppUrl + "get_data_api.php";
        const smePostData_impression = JSON.stringify({
            method_name: "view_impression",
            shop: Shopify.shop,
            impression_data: JSON.stringify({ "store_user_id": store_user_id, "section_id": 5, "is_upsell": 1, "widget_global_settings_id": widget_global_settings_id, "iana_timezone": iana_timezone, "impression_view": 0, "impression_click": 1 })
        });
        let authHeader = { 'Authentication': smeReqHeader.Authentication };
        let smeApiResponse = smePostAjaxApiFn(url, smePostData_impression, authHeader);
    }

    let checkoutProcessUrl = '';
    let isOurDiscount = 0;
    let smeSettings = JSON.parse(sme_gm_dataobj.settings) || {};
    let thirdPartyIntegration = smeSettings['third_party_integrations'] ? JSON.parse(smeSettings['third_party_integrations']) : {};

    smeFbTracking(smeCartData, 'InitiateCheckout');
    smeGoogleAnalytics(smeCartData, 'begin_checkout');

    var generalDiscount = smeGeneralDiscountGet(smeLocalStorageList.smeGeneralDiscount);

    if (generalDiscount.length > 0 && Array.isArray(generalDiscount)) {
        var filteredCoupons = generalDiscount.filter((coupon, index, self) =>
            index === self.findIndex(c => c.couponCode === coupon.couponCode)
        );

        var couponCodes = filteredCoupons.map(item => item.couponCode).join(',');
        var final_code = couponCodes + ((salemax_discount_code) ? ',' + salemax_discount_code : '');
    } else {
        var final_code = (salemax_discount_code) ? salemax_discount_code : '';
    }

    if (shop_pay_check_click) {
        if (final_code != '') {
            thisObj.innerHTML = oldButtonText;
            window.location.href = 'https://' + window.location.hostname + "/checkout?locale=" + Shopify.locale + "&discount=" + encodeURIComponent(final_code) + '&payment=shop_pay';
        } else {
            thisObj.innerHTML = oldButtonText;
            window.location.href = 'https://' + window.location.hostname + '/checkout' + '?payment=shop_pay';
        }
    } else {
        if (final_code != '') {
            thisObj.innerHTML = oldButtonText;
            window.location.href = 'https://' + window.location.hostname + "/checkout?locale=" + Shopify.locale + "&discount=" + encodeURIComponent(final_code);
        } else {
            thisObj.innerHTML = oldButtonText;
            window.location.href = 'https://' + window.location.hostname + '/checkout';
        }
    }

}


const smeShopifyCouponRemove = (thisObj) => {

    let closestElement = thisObj.closest('.smeDiscountTagLable');
    if (closestElement) {

        var remove_code = closestElement.querySelector('.smeDiscountTagLable .salemaximize__discount-tag-sub-title p').textContent;

        let generalDiscount = smeGeneralDiscountGet(smeLocalStorageList.smeGeneralDiscount);

        generalDiscount = generalDiscount.filter(function (discount) {
            return discount.couponCode !== remove_code;
        });
        closestElement.remove();
        checkout_manual_web_url['checkout_manual_discount'] = '';
        smeGeneralDiscountStore(generalDiscount, smeLocalStorageList.smeGeneralDiscount);
        smeDiscountInit();
    }
}

async function smeAtcProcess(thisobj) {

    document.querySelectorAll('.salemaximize__add-btn').forEach(element => {
        element.classList.add('disabled');
    });

    let oldBtnText = thisobj.innerHTML;
    thisobj.setAttribute('disabled', '');
    thisobj.innerHTML = btnLoader;
    var target = event.target;
    let formData = target.closest("form.smeProductForm");
    let tempSecId = thisobj.closest('.smewidgetblock').getAttribute('data-id');
    let sourceId = thisobj.closest('.smewidgetblock').getAttribute('data-source-id');

    var store_user_id = sme_gm_dataobj.store_user_id;
    var iana_timezone = sme_gm_dataobj.iana_timezone;
    if (iana_timezone && store_user_id) {
        var checkoutWdata = JSON.parse(sme_gm_dataobj.checkout_widget);
        var fistkey = Object.keys(checkoutWdata)[0];
        var widget_global_settings_id = checkoutWdata[fistkey].widget_global_settings_id;
        var url = smeAppUrl + "get_data_api.php";
        var is_upsell = 0;

        const smePostData_impression = JSON.stringify({
            method_name: "view_impression",
            shop: Shopify.shop,
            impression_data: JSON.stringify({ "store_user_id": store_user_id, "section_id": sourceId, "is_upsell": is_upsell, "widget_global_settings_id": widget_global_settings_id, "iana_timezone": iana_timezone, "impression_view": 0, "impression_click": 1 })
        });
        let authHeader = { 'Authentication': smeReqHeader.Authentication };
        let smeApiResponse = smePostAjaxApiFn(url, smePostData_impression, authHeader);
    }

    try {
        if (formData) {
            formData = smeSerialize(formData);
            let url = window.Shopify.routes.root + 'cart/add.js';
            let authHeader = { 'x-requested-with': 'XMLHttpRequest' };
            let smeApiResponse = await smePostAjaxApiFn(url, formData, authHeader);
            if (smeApiResponse.status === 422) {

                document.querySelectorAll('.salemaximize__add-btn').forEach(element => {
                    element.classList.remove('disabled');
                });

                var data = smeApiResponse.response;

                let errorMsg = document.createElement('div');
                errorMsg.className = 'product_qty_rich_error_msg';
                errorMsg.innerHTML = data.description;

                document.querySelector('.cartItemMainBlock').insertAdjacentElement('afterend', errorMsg);

                setTimeout(function () {
                    document.querySelector('.product_qty_rich_error_msg')?.remove();
                }, 3000);


            } else {
                if (smeApiResponse) {
                    thisobj.innerHTML = oldBtnText;
                    document.querySelectorAll('.salemaximize__add-btn').forEach(element => {
                        element.classList.remove('disabled');
                    });
                    smeFbTracking(smeApiResponse, 'AddToCart');
                    smeGoogleAnalytics(smeApiResponse, 'add_to_cart');
                } else if (smeApiResponse.status) {
                    var product_qty_rich_error_msg = document.querySelector('.product_qty_rich_error_msg');
                    if (product_qty_rich_error_msg) {
                        product_qty_rich_error_msg.remove();
                    }
                    let errorMsg = '<div class="product_qty_rich_error_msg" style="display: none">' + ((smeApiResponse.description) ? smeApiResponse.description : smeApiResponse.message) + '</div>';
                    document.querySelector('.cartItemMainBlock').insertAdjacentHTML('afterend', errorMsg); // error for not more quantity exist
                    document.querySelector(".product_qty_rich_error_msg").style.display = "block";
                    setTimeout(function () {
                        document.querySelector(".product_qty_rich_error_msg").style.display = "none";
                    }, 2000);
                }
            }

            thisobj.innerHTML = oldBtnText;
        }
    } catch (error) {
        thisobj.innerHTML = oldBtnText;
    }
}

var shop_pay_check_click = false;
function smepayment_button_get_data() {

    let url = 'https://' + smeSiteDomain + window.Shopify.routes.root + 'cart?view=salemaximize&v=454';

    fetch(url)
        .then(function (response) {
            if (!response.ok) {
                throw new Error('Network response was not ok: ' + response.statusText);
            }
            // Assuming the response is text (e.g., HTML or plain text)
            return response.text();
        })
        .then(function (data) {
            // Handle the data from the response
            var newdata = JSON.parse(data);
            var dynamicCheckout = newdata.smeadditional_checkout_buttonsObj;
            let smecreatediv = document.createElement("div");
            smecreatediv.innerHTML = dynamicCheckout;
            if (smecreatediv.querySelector('shopify-accelerated-checkout-cart') !== null) {

                const walletConfigs = JSON.parse(smecreatediv.querySelector('shopify-accelerated-checkout-cart').getAttribute('wallet-configs'));
                // console.log(walletConfigs)
                let checkoutData = JSON.parse(sme_gm_dataobj.checkout_widget);
                var checkoutData_key = Object.keys(checkoutData)[0];
                var payment_gateway = JSON.parse(checkoutData[checkoutData_key].payment_gateway);

                var shop_pay_check = false;
                var paypal_check = false;
                var google_pay_check = false;
                var amazon_pay_check = false;
                var apple_pay_check = false;
                var sdkUrl = '';
                var googlePaySdkUrl = '';
                var gpayenvironment = '';
                var gpaymerchantName = '';
                var gpaymerchantId = '';
                var gpaypaymentDataRequest = '';
                var shop_pay_id = '';
                if (checkoutData[checkoutData_key].is_enable_payment_gateway == '0' && document.querySelector('.smeExpressCheckoutBlock')) {
                    walletConfigs.forEach(element => {


                        if (element.name == 'shop_pay' && payment_gateway.shop_pay == '0') {
                            shop_pay_check = true;
                            shop_pay_id = element.wallet_params.shopId;
                            // document.querySelector('.smeShopPayBtn').style.padding = '0px';
                        }

                        if (element.name == 'paypal' && payment_gateway.paypal == '0') {
                            paypal_check = true;
                            sdkUrl = element.wallet_params.sdkUrl;
                            if (walletConfigs.length == '1') {
                                document.querySelector('.smePaypalBtn').style.padding = '0px';
                            }
                        }

                        if (element.name == 'google_pay' && payment_gateway.gpay == '0') {
                            google_pay_check = true;
                            googlePaySdkUrl = element.wallet_params.sdkUrl;
                            gpayenvironment = element.wallet_params.environment;
                            gpaymerchantName = element.wallet_params.paymentData.merchantInfo.merchantName;
                            gpaymerchantId = element.wallet_params.paymentData.merchantInfo.merchantId;
                            gpaypaymentDataRequest = element.wallet_params.paymentData;
                            // document.querySelector('.smeGpayBtn').style.padding = '0px';
                        }

                        if (element.name == 'amazon_pay' && payment_gateway.amazon_pay == '0') {
                            amazon_pay_check = true;
                        }

                        if (element.name == 'apple_pay' && payment_gateway.apple_pay == '0') {
                            apple_pay_check = true;
                        }
                    });
                } else {
                    document.querySelector('.smeExpressCheckoutBlock').style.display = 'none';
                }
                if (paypal_check) {

                    document.querySelector('.paypalButton').style.display = 'flex';

                    // Example: Include PayPal SDK script dynamically
                    const script = document.createElement('script');
                    script.src = sdkUrl;
                    document.head.appendChild(script);

                    script.onload = function () {
                        paypal.Buttons({
                            style: {
                                layout: 'horizontal',  // Set layout to horizontal
                                color: 'gold',         // Optional, to customize the button color
                                shape: 'rect',         // Optional, rectangle-shaped button
                                label: 'paypal',        // Optional, display PayPal label
                                tagline: false
                            },
                            createOrder: function (data, actions) {
                                return actions.order.create({
                                    purchase_units: [{
                                        amount: {
                                            value: smeCartTotalAmount // Set the total value here
                                        }
                                    }]
                                });
                            },
                            onApprove: function (data, actions) {
                                return actions.order.capture().then(function (details) {
                                    alert('Transaction completed by ' + details.payer.name.given_name);
                                });
                            }
                        }).render('.paypalButton');

                        document.querySelector('.smePaypalBtn').style.overflow = 'hidden';
                        document.querySelector('.smePaypalBtn svg').remove();

                        document.querySelector('.smePaypalBtn').addEventListener('click', function () {
                            document.querySelector('.paypal-buttons').click();
                        });

                    };

                }

                if (shop_pay_check) {
                    document.querySelector('.smeShopPayBtn').style.display = 'flex';
                    document.querySelector('.smeShopPayBtn').addEventListener('click', function () {
                        shop_pay_check_click = true;
                        smeCheckoutProcess(document.querySelector('.smeShopPayBtn'));
                    });
                }
                if (google_pay_check) {

                    // Display the Google Pay button container
                    document.querySelector('.smeGpayBtn').style.display = 'flex';

                    // Assuming `walletParams` is an array containing the wallets configuration

                    const googlePayWallet = walletConfigs.find(wallet => wallet.name === "google_pay");
                    const googlePayData = googlePayWallet.wallet_params;

                    // Load the Google Pay SDK dynamically
                    const script = document.createElement('script');
                    script.src = googlePayData.sdkUrl;
                    document.head.appendChild(script);

                    script.onload = function () {
                        // Initialize the PaymentsClient with the specified environment
                        const paymentsClient = new google.payments.api.PaymentsClient({
                            environment: googlePayData.environment // 'PRODUCTION' or 'TEST'
                        });

                        // Prepare the base request
                        const baseRequest = {
                            apiVersion: googlePayData.paymentData.apiVersion,
                            apiVersionMinor: googlePayData.paymentData.apiVersionMinor
                        };

                        // Define allowed payment methods (ensure allowedCardNetworks is populated)
                        const allowedPaymentMethods = googlePayData.paymentData.allowedPaymentMethods.map(method => {
                            if (method.type === 'CARD' && method.parameters.allowedCardNetworks.length === 0) {
                                // Populate with common card networks if empty
                                method.parameters.allowedCardNetworks = ['AMEX', 'DISCOVER', 'JCB', 'MASTERCARD', 'VISA'];
                            }
                            return method;
                        });

                        // Prepare isReadyToPayRequest object
                        const isReadyToPayRequest = Object.assign({}, baseRequest, {
                            allowedPaymentMethods: allowedPaymentMethods
                        });

                        // Check if Google Pay is ready to pay
                        paymentsClient.isReadyToPay(isReadyToPayRequest)
                            .then(function (response) {
                                if (response.result) {
                                    // Create the payment data request object
                                    const paymentDataRequest = Object.assign({}, baseRequest, {
                                        allowedPaymentMethods: allowedPaymentMethods,
                                        merchantInfo: googlePayData.paymentData.merchantInfo,
                                        transactionInfo: {
                                            totalPriceStatus: 'FINAL',
                                            totalPrice: smeCartTotalAmount.toString(), // Convert amount to string
                                            currencyCode: Shopify.currency.active,
                                            countryCode: Shopify.country
                                        },
                                        emailRequired: googlePayData.paymentData.emailRequired,
                                        shippingAddressRequired: true,
                                        shippingAddressParameters: googlePayData.paymentData.shippingAddressParameters
                                    });

                                    // Create and mount the Google Pay button
                                    const googlePayButton = paymentsClient.createButton({
                                        onClick: function () {
                                            paymentsClient.loadPaymentData(paymentDataRequest)
                                                .then(function (paymentData) {
                                                    // Handle the response
                                                    // Process paymentData here
                                                })
                                                .catch(function (err) {
                                                    console.error('Payment failed:', err);
                                                });
                                        }
                                    });

                                    const targetDiv = document.querySelector('.salemaximize_payment_button.salemaximizePaymentButton.salemaximize__payment_gateway_gpay.gpayButton.smeGpayBtn.paymentGatewayButton');

                                    targetDiv.appendChild(googlePayButton);
                                    document.querySelectorAll('button#gpay-button-online-api-id').forEach(element => {
                                        element.style.display = 'none';
                                    });
                                    document.querySelector('.smeGpayBtn').addEventListener('click', function () {
                                        document.querySelector('#gpay-button-online-api-id').click();
                                    });
                                } else {
                                    console.error('Google Pay is not available.');
                                }
                            })
                            .catch(function (err) {
                                console.error('Google Pay setup error:', err);
                            });
                    };


                }

                if (amazon_pay_check) {
                }

                if (apple_pay_check) {
                }
            }

            // You can process the data here as needed
        })
        .catch(function (error) {
            // Handle any errors that occurred during the fetch operation
            console.error('There was a problem with the fetch operation:', error);
        });



}

async function smeAddOrderNote(thisObj) {
    let buttondata = document.querySelector('.salemaximize__add-ordernote-save');
    buttondata.classList.add('disabled');
    let oldButtonText = thisObj.innerHTML;
    thisObj.innerHTML = btnLoader;
    const textAreaVal = thisObj.closest('.salemaximize__add-order-note').querySelector('textarea').value;
    let url = '/cart/update.js?Author=sme';
    let smePostData = 'note=' + textAreaVal;
    let smeApiResponse = await smePostAjaxApiFn(url, smePostData);
    if (!smeApiResponse.status) {
        openOrdernote('0');
        thisObj.innerHTML = oldButtonText;
        buttondata.classList.remove('disabled');
    }
    else {
        thisObj.innerHTML = oldButtonText;
        buttondata.classList.remove('disabled');
    }
}

function smeSpecificAllProductDiscount(activeTier, discountType, specificType) {
    let cartData = smeCartData.items;
    let specifiProdId = activeTier.discount_product_ids;
    specifiProdId = String(specifiProdId).split(",").map((specifiProdId) => {
        return Number(specifiProdId)
    })
    if (specificType == 0) {
        var allProductDiscountObj = { "appliedDiscount": "0" };
        cartData.forEach((item, index) => {
            if (specifiProdId.indexOf(item.product_id) !== -1) {
                let discountObj = smePbAnyProductDiscount(item, activeTier, discountType);
                allProductDiscountObj.appliedDiscount += discountObj.appliedDiscount;
                smeLineDiscounttag(activeTier.discount_name, item.variant_id);
            }
        });
        return allProductDiscountObj;
    } else {
        var allProductDiscountObj = { "appliedDiscount": "0" };
        let ProductMectobj = [];
        cartData.forEach((item, index) => {
            if (specifiProdId.indexOf(item.product_id) !== -1) {
                ProductMectobj.push(item);
            }
        });

        if (ProductMectobj.length > 0) {
            const cheapestProduct = ProductMectobj.reduce((previous, current) => {
                return current.original_price < previous.original_price ? current : previous;
            });

            allProductDiscountObj = smePbAnyProductDiscount(cheapestProduct, activeTier, discountType);
            smeLineDiscounttag(activeTier.discount_name, cheapestProduct.variant_id);
        }
        return allProductDiscountObj;
    }
}

function smePbAnyProductDiscount(cheapestProduct, activeTier, discountType) {
    progressBarSpecificIds.push(cheapestProduct.product_id);
    let cheapestProductPrice = parseFloat(cheapestProduct.original_price) / 100;
    let generalDiscount = smeGeneralDiscountGet(smeLocalStorageList.smeGeneralDiscount);
    if (cheapestProduct.properties && cheapestProduct.properties.__smeProductDiscount) {
        let upsellDiscount = parseFloat(cheapestProduct.properties.__smeProductDiscount) * cheapestProduct.quantity;
        cheapestProductPrice = cheapestProductPrice - upsellDiscount;
    }

    if (cheapestProduct.line_level_discount_allocations.length > 0 && cheapestProduct.line_level_total_discount > 0 && Object.keys(generalDiscount).length <= 0) {
        let shopifyAutoDiscountObj = cheapestProduct.line_level_discount_allocations[0]['discount_application'];
        let productLineDiscountDataObj = { "discountVal": shopifyAutoDiscountObj.value, "price": cheapestProductPrice * 100, "priceOver": 0, "qty": 1 };
        productLineDiscountDataObj['discountType'] = (shopifyAutoDiscountObj.value_type == "percentage") ? 1 : (shopifyAutoDiscountObj.value_type == "fixed_amount" ? 3 : 0);
        let productLineDiscount = smeDiscountCalculator(productLineDiscountDataObj);
        cheapestProductPrice = parseFloat(productLineDiscount.discountedPrice);
    }
    cheapestProductPrice = cheapestProductPrice * 100;
    let discountDataObj = { "discountType": discountType, "discountVal": activeTier.discount_value, "price": cheapestProductPrice, "priceOver": 0, "qty": 1 };
    var discountCalCulation = smeDiscountCalculator(discountDataObj);
    let discountQty = (activeTier.specific_product_qty) ? (parseInt(activeTier.specific_product_qty) <= cheapestProduct.quantity ? parseInt(activeTier.specific_product_qty) : cheapestProduct.quantity) : 1;
    discountCalCulation.appliedDiscount = discountCalCulation.appliedDiscount * discountQty;
    discountCalCulation.actualPrice = discountCalCulation.actualPrice * cheapestProduct.quantity;
    discountCalCulation.discountedPrice = discountCalCulation.actualPrice - discountCalCulation.appliedDiscount;
    return discountCalCulation;
}

function smeApplyCssJs() {
    const settingsData = (sme_gm_dataobj.settings) ? JSON.parse(sme_gm_dataobj.settings) : '';
    const customCss = (settingsData.custom_css) ? atob(settingsData.custom_css) : '';
    const customJs = (settingsData.custom_script) ? atob(settingsData.custom_script) : '';

    if (customCss) {
        const styleElement = document.createElement('style');
        styleElement.textContent = customCss;
        document.head.appendChild(styleElement);
    }

    if (customJs) {
        const scriptElement = document.createElement('script');
        scriptElement.textContent = customJs;
        document.head.appendChild(scriptElement);
    }
}

const smeThirdPartyIntegration = () => {
    try {
        const smeGlobalSettings = sme_gm_dataobj.settings ? JSON.parse(sme_gm_dataobj.settings) : {};
        const smeThirdPartyIntegrations = smeGlobalSettings['third_party_integrations'] ? JSON.parse(smeGlobalSettings['third_party_integrations']) : {};
        if (smeThirdPartyIntegrations['route_package_protection'] === "1") {
            var newDiv = document.createElement('div');
            newDiv.className = 'route-div';
            var smeCheckoutBtn = document.querySelector('.smeCheckoutBtn');
            smeCheckoutBtn.parentNode.insertBefore(newDiv, smeCheckoutBtn);
        }
    } catch (error) {
        console.error("An error occurred in smeThirdPartyIntegration:", error);
    }
};

